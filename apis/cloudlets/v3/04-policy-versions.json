{
  "openapi": "3.0.0",
  "info": {
    "title": "Policy versions",
    "version": "v2"
  },
  "servers": [
    {
      "url": "https://{hostname}/cloudlets/api/v2"
    }
  ],
  "paths": {
    "/policies/{policyId}/versions": {
      "x-akamai": {
        "path-info": "/policies/{policyId}/versions"
      },
      "parameters": [
        {
          "description": "The ID of the policy.\n",
          "in": "path",
          "name": "policyId",
          "required": true,
          "schema": {
            "example": 1001,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/policy-id-path.yaml"
          }
        }
      ],
      "post": {
        "operationId": "post-policy-versions",
        "summary": "Create a new policy version",
        "tags": [
          "Policy versions"
        ],
        "description": "Create a new policy version, where the version number will be incremented from the highest existing version.  With this operation you can change any modifiable policy or version attributes.\n",
        "parameters": [
          {
            "name": "cloneVersion",
            "in": "query",
            "description": "If cloning an existing policy version, this parameter value is the number of the policy version you want to clone. If there are attributes that you do _not_ want propagated from the source policy version, you must provide the new values in the request.\n",
            "schema": {
              "type": "integer",
              "example": 22
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "description": "Testing the cloning of a policy",
                "matchRulesFormat": "1.0",
                "matchRules": []
              },
              "schema": {
                "additionalProperties": false,
                "description": "TBD.\n",
                "properties": {
                  "description": {
                    "description": "Description of the policy version.\n",
                    "type": "string"
                  },
                  "matchRuleFormat": {
                    "description": "The version of the `matchRules` format.\n",
                    "type": "string"
                  },
                  "matchRules": {
                    "description": "A list of Cloudlet-specific match rules for this policy.\n",
                    "items": {
                      "description": "Contains information about match rules.\n",
                      "oneOf": [
                        {
                          "type": "object",
                          "description": "Contains match rule information for Application Load Balancer.\n",
                          "title": "Application Load Balancer",
                          "additionalProperties": false,
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "Akamai internal use only.\n",
                              "nullable": true,
                              "readOnly": true
                            },
                            "location": {
                              "type": "string",
                              "description": "The navigable endpoint used for the object referred to in the operation.\n",
                              "readOnly": true
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the rule.\n",
                              "nullable": true,
                              "maxLength": 8192
                            },
                            "type": {
                              "type": "string",
                              "description": "The type of Cloudlet the rule is for. For example, the string for Application Load Balancer is `albMatchRule`.\n",
                              "enum": [
                                "albMatchRule"
                              ]
                            },
                            "akaRuleId": {
                              "type": "string",
                              "description": "The rule's unique identifier within the policy version.\n",
                              "readOnly": true
                            },
                            "disabled": {
                              "type": "boolean",
                              "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                              "default": false
                            },
                            "start": {
                              "type": "integer",
                              "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                              "default": 0,
                              "minimum": 0
                            },
                            "end": {
                              "type": "integer",
                              "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                              "default": 0,
                              "minimum": 0
                            },
                            "matchURL": {
                              "type": "string",
                              "description": "The URL the Cloudlet uses to match the incoming request.\n",
                              "nullable": true,
                              "maxLength": 8192
                            },
                            "matches": {
                              "type": "array",
                              "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                              "nullable": true,
                              "items": {
                                "type": "object",
                                "description": "The match rule criteria.\n",
                                "additionalProperties": false,
                                "oneOf": [
                                  {
                                    "required": [
                                      "matchType",
                                      "matchValue"
                                    ],
                                    "title": "matchType and matchValue required"
                                  },
                                  {
                                    "required": [
                                      "matchType",
                                      "objectMatchValue"
                                    ],
                                    "title": "matchType and objectMatchValue required"
                                  }
                                ],
                                "properties": {
                                  "caseSensitive": {
                                    "type": "boolean",
                                    "description": "If `true`, the match is case sensitive.\n"
                                  },
                                  "checkIPs": {
                                    "type": "string",
                                    "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                    "nullable": true,
                                    "enum": [
                                      "CONNECTING_IP",
                                      "XFF_HEADERS",
                                      "CONNECTING_IP XFF_HEADERS"
                                    ]
                                  },
                                  "matchOperator": {
                                    "type": "string",
                                    "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                    "enum": [
                                      "contains",
                                      "exists",
                                      "equals"
                                    ]
                                  },
                                  "matchType": {
                                    "type": "string",
                                    "description": "The type of match used.\n",
                                    "enum": [
                                      "header",
                                      "hostname",
                                      "path",
                                      "extension",
                                      "query",
                                      "regex",
                                      "cookie",
                                      "deviceCharacteristics",
                                      "clientip",
                                      "continent",
                                      "countrycode",
                                      "regioncode",
                                      "protocol",
                                      "method",
                                      "proxy"
                                    ]
                                  },
                                  "matchValue": {
                                    "type": "string",
                                    "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                    "minLength": 1,
                                    "maxLength": 8192
                                  },
                                  "negate": {
                                    "type": "boolean",
                                    "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                                  },
                                  "objectMatchValue": {
                                    "type": "object",
                                    "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                    "title": "Object match value",
                                    "oneOf": [
                                      {
                                        "type": "object",
                                        "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                        "title": "Simple",
                                        "additionalProperties": false,
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "description": "The object type, which is `simple`.\n",
                                            "enum": [
                                              "simple"
                                            ]
                                          },
                                          "value": {
                                            "type": "array",
                                            "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                            "nullable": true,
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "description": "Use this for more complex match criteria.\n",
                                        "title": "Object",
                                        "additionalProperties": false,
                                        "required": [
                                          "name",
                                          "type"
                                        ],
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                            "minLength": 1,
                                            "maxLength": 8192
                                          },
                                          "type": {
                                            "type": "string",
                                            "description": "The array type, which is `object`.\n",
                                            "enum": [
                                              "object"
                                            ]
                                          },
                                          "options": {
                                            "type": "object",
                                            "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                            "additionalProperties": false,
                                            "properties": {
                                              "value": {
                                                "type": "array",
                                                "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                                "nullable": true,
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "valueCaseSensitive": {
                                                "type": "boolean",
                                                "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n"
                                              },
                                              "valueEscaped": {
                                                "type": "boolean",
                                                "description": "Set to `true` if the entries for `value` includes escaped characters.\n"
                                              },
                                              "valueHasWildcard": {
                                                "type": "boolean",
                                                "description": "Set to `true` if the entries for `value` includes wildcards.\n"
                                              }
                                            }
                                          },
                                          "nameCaseSensitive": {
                                            "type": "boolean",
                                            "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                          },
                                          "nameHasWildcard": {
                                            "type": "boolean",
                                            "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "matchesAlways": {
                              "type": "boolean",
                              "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n"
                            },
                            "forwardSettings": {
                              "type": "object",
                              "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                              "additionalProperties": false,
                              "properties": {
                                "pathAndQS": {
                                  "type": "string",
                                  "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                                  "minLength": 1,
                                  "maxLength": 8192
                                },
                                "useIncomingQueryString": {
                                  "type": "boolean",
                                  "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n"
                                },
                                "originId": {
                                  "type": "string",
                                  "description": "The conditional origin's unique identifier.\n",
                                  "nullable": true,
                                  "maxLength": 8192
                                }
                              }
                            }
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Contains match rule information for API Prioritization.\n",
                          "properties": {
                            "akaRuleId": {
                              "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                              "readOnly": true,
                              "type": "string"
                            },
                            "disabled": {
                              "default": false,
                              "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                              "type": "boolean"
                            },
                            "end": {
                              "default": 0,
                              "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "id": {
                              "description": "__Read-only__ Akamai internal use only.\n",
                              "nullable": true,
                              "readOnly": true,
                              "type": "integer"
                            },
                            "location": {
                              "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                              "readOnly": true,
                              "type": "string"
                            },
                            "matchURL": {
                              "description": "The URL the Cloudlet uses to match the incoming request.\n",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "matches": {
                              "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                              "items": {
                                "additionalProperties": false,
                                "description": "The match rule criteria.\n",
                                "oneOf": [
                                  {
                                    "required": [
                                      "matchType",
                                      "matchValue"
                                    ],
                                    "title": "matchType and matchValue required"
                                  },
                                  {
                                    "required": [
                                      "matchType",
                                      "objectMatchValue"
                                    ],
                                    "title": "matchType and objectMatchValue required"
                                  }
                                ],
                                "properties": {
                                  "caseSensitive": {
                                    "description": "If `true`, the match is case sensitive.\n",
                                    "type": "boolean"
                                  },
                                  "checkIPs": {
                                    "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                    "enum": [
                                      "CONNECTING_IP",
                                      "XFF_HEADERS",
                                      "CONNECTING_IP XFF_HEADERS"
                                    ],
                                    "type": "string"
                                  },
                                  "matchOperator": {
                                    "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                    "enum": [
                                      "contains",
                                      "exists",
                                      "equals"
                                    ],
                                    "type": "string"
                                  },
                                  "matchType": {
                                    "description": "The type of match used.\n",
                                    "enum": [
                                      "hostname",
                                      "path",
                                      "extension",
                                      "query",
                                      "cookie",
                                      "deviceCharacteristics",
                                      "clientip",
                                      "continent",
                                      "countrycode",
                                      "regioncode",
                                      "protocol",
                                      "header",
                                      "method",
                                      "proxy"
                                    ],
                                    "type": "string"
                                  },
                                  "matchValue": {
                                    "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "negate": {
                                    "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                                    "type": "boolean"
                                  },
                                  "objectMatchValue": {
                                    "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                    "oneOf": [
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `simple`.\n",
                                            "enum": [
                                              "simple"
                                            ],
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                            "items": {
                                              "type": "string"
                                            },
                                            "nullable": true,
                                            "type": "array"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "title": "Simple",
                                        "type": "object"
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use this for more complex match criteria.\n",
                                        "properties": {
                                          "name": {
                                            "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                            "maxLength": 8192,
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "nameCaseSensitive": {
                                            "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                            "type": "boolean"
                                          },
                                          "nameHasWildcard": {
                                            "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                            "type": "boolean"
                                          },
                                          "options": {
                                            "additionalProperties": false,
                                            "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                            "properties": {
                                              "value": {
                                                "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                                "items": {
                                                  "type": "string"
                                                },
                                                "nullable": true,
                                                "type": "array"
                                              },
                                              "valueCaseSensitive": {
                                                "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                                "type": "boolean"
                                              },
                                              "valueEscaped": {
                                                "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                                "type": "boolean"
                                              },
                                              "valueHasWildcard": {
                                                "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                                "type": "boolean"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "type": {
                                            "description": "The array type, which is `object`.\n",
                                            "enum": [
                                              "object"
                                            ],
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "name",
                                          "type"
                                        ],
                                        "title": "Object",
                                        "type": "object"
                                      }
                                    ],
                                    "title": "Object match value",
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              },
                              "nullable": true,
                              "type": "array"
                            },
                            "name": {
                              "description": "The name of the rule.\n",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "passThroughPercent": {
                              "description": "The percentage of requests that pass through to the origin, with `100` indicating the request always passes through to the origin. For Visitor Prioritization, a value of -1 sends everyone to the waiting room.\n",
                              "maximum": 100,
                              "minimum": -1,
                              "type": "number"
                            },
                            "start": {
                              "default": 0,
                              "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "type": {
                              "description": "The type of Cloudlet the rule is for. For example, the string for API Prioritization is `apMatchRule`.\n",
                              "enum": [
                                "apMatchRule"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "passThroughPercent"
                          ],
                          "title": "API Prioritization",
                          "type": "object",
                          "x-akamai": {
                            "file-path": "schemas/match-rule-ap.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Contains match rule information for Audience Segmentation.\n",
                          "properties": {
                            "akaRuleId": {
                              "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                              "readOnly": true,
                              "type": "string"
                            },
                            "disabled": {
                              "default": false,
                              "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                              "type": "boolean"
                            },
                            "end": {
                              "default": 0,
                              "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "forwardSettings": {
                              "additionalProperties": false,
                              "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                              "properties": {
                                "originId": {
                                  "description": "The conditional origin's unique identifier.\n",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "pathAndQS": {
                                  "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                                  "maxLength": 8192,
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "useIncomingQueryString": {
                                  "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n",
                                  "type": "boolean"
                                }
                              },
                              "type": "object"
                            },
                            "id": {
                              "description": "__Read-only__ Akamai internal use only.\n",
                              "nullable": true,
                              "readOnly": true,
                              "type": "integer"
                            },
                            "location": {
                              "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                              "readOnly": true,
                              "type": "string"
                            },
                            "matchURL": {
                              "description": "The URL the Cloudlet uses to match the incoming request.\n",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "matches": {
                              "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                              "items": {
                                "additionalProperties": false,
                                "description": "The match rule criteria.\n",
                                "oneOf": [
                                  {
                                    "required": [
                                      "matchType",
                                      "matchValue"
                                    ],
                                    "title": "matchType and matchValue required"
                                  },
                                  {
                                    "required": [
                                      "matchType",
                                      "objectMatchValue"
                                    ],
                                    "title": "matchType and objectMatchValue required"
                                  }
                                ],
                                "properties": {
                                  "caseSensitive": {
                                    "description": "If `true`, the match is case sensitive.\n",
                                    "type": "boolean"
                                  },
                                  "checkIPs": {
                                    "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                    "enum": [
                                      "CONNECTING_IP",
                                      "XFF_HEADERS",
                                      "CONNECTING_IP XFF_HEADERS"
                                    ],
                                    "type": "string"
                                  },
                                  "matchOperator": {
                                    "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                    "enum": [
                                      "contains",
                                      "exists",
                                      "equals"
                                    ],
                                    "type": "string"
                                  },
                                  "matchType": {
                                    "description": "The type of match used.\n",
                                    "enum": [
                                      "header",
                                      "hostname",
                                      "path",
                                      "extension",
                                      "query",
                                      "range",
                                      "regex",
                                      "cookie",
                                      "deviceCharacteristics",
                                      "clientip",
                                      "continent",
                                      "countrycode",
                                      "regioncode",
                                      "protocol",
                                      "method",
                                      "proxy"
                                    ],
                                    "type": "string"
                                  },
                                  "matchValue": {
                                    "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "negate": {
                                    "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                                    "type": "boolean"
                                  },
                                  "objectMatchValue": {
                                    "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.\n",
                                    "oneOf": [
                                      {
                                        "additionalProperties": false,
                                        "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.\n",
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `range`.\n",
                                            "enum": [
                                              "range"
                                            ],
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "An inclusive range comprised of two numbers to match on.\n",
                                            "items": {
                                              "type": "integer"
                                            },
                                            "nullable": true,
                                            "type": "array"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "title": "Range",
                                        "type": "object"
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `simple`.\n",
                                            "enum": [
                                              "simple"
                                            ],
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                            "items": {
                                              "type": "string"
                                            },
                                            "nullable": true,
                                            "type": "array"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "title": "Simple",
                                        "type": "object"
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                        "properties": {
                                          "name": {
                                            "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                            "maxLength": 8192,
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "nameCaseSensitive": {
                                            "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                            "type": "boolean"
                                          },
                                          "nameHasWildcard": {
                                            "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                            "type": "boolean"
                                          },
                                          "options": {
                                            "additionalProperties": false,
                                            "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                            "properties": {
                                              "value": {
                                                "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                                "items": {
                                                  "type": "string"
                                                },
                                                "nullable": true,
                                                "type": "array"
                                              },
                                              "valueCaseSensitive": {
                                                "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                                "type": "boolean"
                                              },
                                              "valueEscaped": {
                                                "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                                "type": "boolean"
                                              },
                                              "valueHasWildcard": {
                                                "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                                "type": "boolean"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "type": {
                                            "description": "The array type, which is `object`.\n",
                                            "enum": [
                                              "object"
                                            ],
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "name",
                                          "type"
                                        ],
                                        "title": "Object",
                                        "type": "object"
                                      }
                                    ],
                                    "title": "Object match value",
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              },
                              "nullable": true,
                              "type": "array"
                            },
                            "name": {
                              "description": "The name of the rule.\n",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "start": {
                              "default": 0,
                              "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "type": {
                              "description": "The type of Cloudlet the rule is for. For example, the string for Audience Segmentation is `asMatchRule`.\n",
                              "enum": [
                                "asMatchRule"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [
                            "type"
                          ],
                          "title": "Audience Segmentation",
                          "type": "object",
                          "x-akamai": {
                            "file-path": "schemas/match-rule-as.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Contains match rule information for Phased Release.\n",
                          "properties": {
                            "akaRuleId": {
                              "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                              "readOnly": true,
                              "type": "string"
                            },
                            "disabled": {
                              "default": false,
                              "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                              "type": "boolean"
                            },
                            "end": {
                              "default": 0,
                              "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "forwardSettings": {
                              "additionalProperties": false,
                              "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, and `percent`.\n",
                              "properties": {
                                "originId": {
                                  "description": "The conditional origin's unique identifier.\n",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "percent": {
                                  "description": "The percentage of visitors directed to a different origin.\n",
                                  "maximum": 100,
                                  "minimum": 0,
                                  "type": "number"
                                }
                              },
                              "type": "object"
                            },
                            "id": {
                              "description": "__Read-only__ Akamai internal use only.\n",
                              "nullable": true,
                              "readOnly": true,
                              "type": "integer"
                            },
                            "location": {
                              "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                              "readOnly": true,
                              "type": "string"
                            },
                            "matchURL": {
                              "description": "The URL the Cloudlet uses to match the incoming request.\n",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "matches": {
                              "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                              "items": {
                                "additionalProperties": false,
                                "description": "The match rule criteria.\n",
                                "oneOf": [
                                  {
                                    "required": [
                                      "matchType",
                                      "matchValue"
                                    ],
                                    "title": "matchType and matchValue required"
                                  },
                                  {
                                    "required": [
                                      "matchType",
                                      "objectMatchValue"
                                    ],
                                    "title": "matchType and objectMatchValue required"
                                  }
                                ],
                                "properties": {
                                  "caseSensitive": {
                                    "description": "If `true`, the match is case sensitive.\n",
                                    "type": "boolean"
                                  },
                                  "checkIPs": {
                                    "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                    "enum": [
                                      "CONNECTING_IP",
                                      "XFF_HEADERS",
                                      "CONNECTING_IP XFF_HEADERS"
                                    ],
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "matchOperator": {
                                    "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                    "enum": [
                                      "contains",
                                      "exists",
                                      "equals"
                                    ],
                                    "type": "string"
                                  },
                                  "matchType": {
                                    "description": "The type of match used.\n",
                                    "enum": [
                                      "header",
                                      "hostname",
                                      "path",
                                      "extension",
                                      "query",
                                      "cookie",
                                      "deviceCharacteristics",
                                      "clientip",
                                      "continent",
                                      "countrycode",
                                      "regioncode",
                                      "protocol",
                                      "method",
                                      "proxy"
                                    ],
                                    "type": "string"
                                  },
                                  "matchValue": {
                                    "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "negate": {
                                    "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                                    "type": "boolean"
                                  },
                                  "objectMatchValue": {
                                    "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                    "oneOf": [
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `simple`.\n",
                                            "enum": [
                                              "simple"
                                            ],
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                            "items": {
                                              "type": "string"
                                            },
                                            "nullable": true,
                                            "type": "array"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "title": "Simple",
                                        "type": "object"
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use this for more complex match criteria.\n",
                                        "properties": {
                                          "name": {
                                            "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                            "maxLength": 8192,
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "nameCaseSensitive": {
                                            "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                            "type": "boolean"
                                          },
                                          "nameHasWildcard": {
                                            "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                            "type": "boolean"
                                          },
                                          "options": {
                                            "additionalProperties": false,
                                            "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                            "properties": {
                                              "value": {
                                                "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                                "items": {
                                                  "type": "string"
                                                },
                                                "nullable": true,
                                                "type": "array"
                                              },
                                              "valueCaseSensitive": {
                                                "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                                "type": "boolean"
                                              },
                                              "valueEscaped": {
                                                "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                                "type": "boolean"
                                              },
                                              "valueHasWildcard": {
                                                "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                                "type": "boolean"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "type": {
                                            "description": "The array type, which is `object`.\n",
                                            "enum": [
                                              "object"
                                            ],
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "name",
                                          "type"
                                        ],
                                        "title": "Object",
                                        "type": "object"
                                      }
                                    ],
                                    "title": "Object match value",
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              },
                              "nullable": true,
                              "type": "array"
                            },
                            "matchesAlways": {
                              "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n",
                              "type": "boolean"
                            },
                            "name": {
                              "description": "The name of the rule.\n",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "start": {
                              "default": 0,
                              "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "type": {
                              "description": "The type of Cloudlet the rule is for. For example, the string for Phased Release is `cdMatchRule`.\n",
                              "enum": [
                                "cdMatchRule"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [
                            "type"
                          ],
                          "title": "Phased Release",
                          "type": "object",
                          "x-akamai": {
                            "file-path": "schemas/match-rule-cd.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Contains match rule information for Edge Redirector.\n",
                          "properties": {
                            "akaRuleId": {
                              "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                              "readOnly": true,
                              "type": "string"
                            },
                            "disabled": {
                              "default": false,
                              "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                              "type": "boolean"
                            },
                            "end": {
                              "default": 0,
                              "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "id": {
                              "description": "__Read-only__ Akamai internal use only.\n",
                              "nullable": true,
                              "readOnly": true,
                              "type": "integer"
                            },
                            "location": {
                              "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                              "readOnly": true,
                              "type": "string"
                            },
                            "matchURL": {
                              "description": "The URL the Cloudlet uses to match the incoming request.\n",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "matches": {
                              "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                              "items": {
                                "additionalProperties": false,
                                "description": "The match rule criteria.\n",
                                "oneOf": [
                                  {
                                    "required": [
                                      "matchType",
                                      "matchValue"
                                    ],
                                    "title": "matchType and matchValue required"
                                  },
                                  {
                                    "required": [
                                      "matchType",
                                      "objectMatchValue"
                                    ],
                                    "title": "matchType and objectMatchValue required"
                                  }
                                ],
                                "properties": {
                                  "caseSensitive": {
                                    "description": "If `true`, the match is case sensitive.\n",
                                    "type": "boolean"
                                  },
                                  "checkIPs": {
                                    "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                    "enum": [
                                      "CONNECTING_IP",
                                      "XFF_HEADERS",
                                      "CONNECTING_IP XFF_HEADERS"
                                    ],
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "matchOperator": {
                                    "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                    "enum": [
                                      "contains",
                                      "exists",
                                      "equals"
                                    ],
                                    "type": "string"
                                  },
                                  "matchType": {
                                    "description": "The type of match used.\n",
                                    "enum": [
                                      "header",
                                      "hostname",
                                      "path",
                                      "extension",
                                      "query",
                                      "regex",
                                      "cookie",
                                      "deviceCharacteristics",
                                      "clientip",
                                      "continent",
                                      "countrycode",
                                      "regioncode",
                                      "protocol",
                                      "method",
                                      "proxy"
                                    ],
                                    "type": "string"
                                  },
                                  "matchValue": {
                                    "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "negate": {
                                    "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                                    "type": "boolean"
                                  },
                                  "objectMatchValue": {
                                    "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                    "oneOf": [
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `simple`.\n",
                                            "enum": [
                                              "simple"
                                            ],
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                            "items": {
                                              "type": "string"
                                            },
                                            "nullable": true,
                                            "type": "array"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "title": "Simple",
                                        "type": "object"
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                        "properties": {
                                          "name": {
                                            "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                            "maxLength": 8192,
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "nameCaseSensitive": {
                                            "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                            "type": "boolean"
                                          },
                                          "nameHasWildcard": {
                                            "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                            "type": "boolean"
                                          },
                                          "options": {
                                            "additionalProperties": false,
                                            "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                            "properties": {
                                              "value": {
                                                "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                                "items": {
                                                  "type": "string"
                                                },
                                                "nullable": true,
                                                "type": "array"
                                              },
                                              "valueCaseSensitive": {
                                                "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                                "type": "boolean"
                                              },
                                              "valueEscaped": {
                                                "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                                "type": "boolean"
                                              },
                                              "valueHasWildcard": {
                                                "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                                "type": "boolean"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "type": {
                                            "description": "The array type, which is `object`.\n",
                                            "enum": [
                                              "object"
                                            ],
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "name",
                                          "type"
                                        ],
                                        "title": "Object",
                                        "type": "object"
                                      }
                                    ],
                                    "title": "Object match value",
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              },
                              "nullable": true,
                              "type": "array"
                            },
                            "matchesAlways": {
                              "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n",
                              "type": "boolean"
                            },
                            "name": {
                              "description": "The name of the rule.\n",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "redirectURL": {
                              "description": "The URL Edge Redirector redirects the request to. If using `useRelativeUrl`, you can enter a path for the value. If `useRelativeUrl` is not used or set to `none`, then the `redirectUrl` should be a fully qualified URL.\n",
                              "maxLength": 8192,
                              "minLength": 1,
                              "type": "string"
                            },
                            "start": {
                              "default": 0,
                              "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "statusCode": {
                              "description": "The HTTP response redirect type status code: `301` for permanent redirect, `302` for temporary redirect, `303` for temporary using GET, `307` for temporary retain method, or `308` for permanent retain method.\n",
                              "enum": [
                                301,
                                302,
                                303,
                                307,
                                308
                              ],
                              "type": "integer"
                            },
                            "type": {
                              "description": "The type of Cloudlet the rule is for. For example, the string for Edge Redirector is `erMatchRule`.\n",
                              "enum": [
                                "erMatchRule"
                              ],
                              "type": "string"
                            },
                            "useIncomingQueryString": {
                              "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n",
                              "type": "boolean"
                            },
                            "useIncomingSchemeAndHost": {
                              "description": "If set to `true`, the Cloudlet copies both the scheme and the hostname from the incoming request to use in the redirect URL.\n",
                              "type": "boolean"
                            },
                            "useRelativeUrl": {
                              "description": "If set to `relative_url`, takes the path entered for the `redirectUrl` and sets it in the response’s `Location` header. The client browser receiving the request decides which protocol and hostname to use. If set to `copy_scheme_hostname`, it creates an absolute path by taking the protocol and hostname from the incoming request and combining them with path information entered for the `redirectUrl`. This absolute path is set in the response’s `Location` header. If you don't include `useRelativeUrl`, or if you set it to `none`, then specify the `redirectUrl` as a fully qualified URL.\n",
                              "enum": [
                                "relative_url",
                                "copy_scheme_hostname",
                                "none"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "redirectURL",
                            "statusCode"
                          ],
                          "title": "Edge Redirector",
                          "type": "object",
                          "x-akamai": {
                            "file-path": "schemas/match-rule-er.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Contains match rule information for Forward Rewrite.\n",
                          "properties": {
                            "akaRuleId": {
                              "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                              "readOnly": true,
                              "type": "string"
                            },
                            "disabled": {
                              "default": false,
                              "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                              "type": "boolean"
                            },
                            "end": {
                              "default": 0,
                              "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "forwardSettings": {
                              "additionalProperties": false,
                              "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                              "properties": {
                                "originId": {
                                  "description": "The conditional origin's unique identifier.\n",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "pathAndQS": {
                                  "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                                  "maxLength": 8192,
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "useIncomingQueryString": {
                                  "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n",
                                  "type": "boolean"
                                }
                              },
                              "type": "object"
                            },
                            "id": {
                              "description": "__Read-only__ Akamai internal use only.\n",
                              "nullable": true,
                              "readOnly": true,
                              "type": "integer"
                            },
                            "location": {
                              "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                              "readOnly": true,
                              "type": "string"
                            },
                            "matchURL": {
                              "description": "The URL the Cloudlet uses to match the incoming request.\n",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "matches": {
                              "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                              "items": {
                                "additionalProperties": false,
                                "description": "The match rule criteria.\n",
                                "oneOf": [
                                  {
                                    "required": [
                                      "matchType",
                                      "matchValue"
                                    ],
                                    "title": "matchType and matchValue required"
                                  },
                                  {
                                    "required": [
                                      "matchType",
                                      "objectMatchValue"
                                    ],
                                    "title": "matchType and objectMatchValue required"
                                  }
                                ],
                                "properties": {
                                  "caseSensitive": {
                                    "description": "If `true`, the match is case sensitive.\n",
                                    "type": "boolean"
                                  },
                                  "checkIPs": {
                                    "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                    "enum": [
                                      "CONNECTING_IP",
                                      "XFF_HEADERS",
                                      "CONNECTING_IP XFF_HEADERS"
                                    ],
                                    "type": "string"
                                  },
                                  "matchOperator": {
                                    "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                    "enum": [
                                      "contains",
                                      "exists",
                                      "equals"
                                    ],
                                    "type": "string"
                                  },
                                  "matchType": {
                                    "description": "The type of match used.\n",
                                    "enum": [
                                      "header",
                                      "hostname",
                                      "path",
                                      "extension",
                                      "query",
                                      "regex",
                                      "cookie",
                                      "deviceCharacteristics",
                                      "clientip",
                                      "continent",
                                      "countrycode",
                                      "regioncode",
                                      "protocol",
                                      "method",
                                      "proxy"
                                    ],
                                    "type": "string"
                                  },
                                  "matchValue": {
                                    "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "negate": {
                                    "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                                    "type": "boolean"
                                  },
                                  "objectMatchValue": {
                                    "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                    "oneOf": [
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `simple`.\n",
                                            "enum": [
                                              "simple"
                                            ],
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                            "items": {
                                              "type": "string"
                                            },
                                            "nullable": true,
                                            "type": "array"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "title": "Simple",
                                        "type": "object"
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                        "properties": {
                                          "name": {
                                            "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                            "maxLength": 8192,
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "nameCaseSensitive": {
                                            "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                            "type": "boolean"
                                          },
                                          "nameHasWildcard": {
                                            "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                            "type": "boolean"
                                          },
                                          "options": {
                                            "additionalProperties": false,
                                            "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                            "properties": {
                                              "value": {
                                                "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                                "items": {
                                                  "type": "string"
                                                },
                                                "nullable": true,
                                                "type": "array"
                                              },
                                              "valueCaseSensitive": {
                                                "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                                "type": "boolean"
                                              },
                                              "valueEscaped": {
                                                "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                                "type": "boolean"
                                              },
                                              "valueHasWildcard": {
                                                "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                                "type": "boolean"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "type": {
                                            "description": "The array type, which is `object`.\n",
                                            "enum": [
                                              "object"
                                            ],
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "name",
                                          "type"
                                        ],
                                        "title": "Object",
                                        "type": "object"
                                      }
                                    ],
                                    "title": "Object match value",
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              },
                              "nullable": true,
                              "type": "array"
                            },
                            "name": {
                              "description": "The name of the rule.\n",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "start": {
                              "default": 0,
                              "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "type": {
                              "description": "The type of Cloudlet the rule is for. For example, the string for Forward Rewrite is `frMatchRule`.\n",
                              "enum": [
                                "frMatchRule"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "forwardSettings"
                          ],
                          "title": "Forward Rewrite",
                          "type": "object",
                          "x-akamai": {
                            "file-path": "schemas/match-rule-fr.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Contains match rule information for Request Control.\n",
                          "properties": {
                            "akaRuleId": {
                              "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                              "readOnly": true,
                              "type": "string"
                            },
                            "allowDeny": {
                              "description": "If set to `allow`, the request is sent to origin when all conditions are true. If `deny`, the request is denied when all conditions are true. If `denybranded`, the request is denied and rerouted according to the configuration of the [Request Control behavior](https://techdocs.akamai.com/property-mgr/reference/latest-request-control).\n",
                              "enum": [
                                "allow",
                                "deny",
                                "denybranded"
                              ],
                              "type": "string"
                            },
                            "disabled": {
                              "default": false,
                              "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                              "type": "boolean"
                            },
                            "end": {
                              "default": 0,
                              "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "id": {
                              "description": "__Read-only__ Akamai internal use only.\n",
                              "nullable": true,
                              "readOnly": true,
                              "type": "integer"
                            },
                            "location": {
                              "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                              "readOnly": true,
                              "type": "string"
                            },
                            "matches": {
                              "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                              "items": {
                                "additionalProperties": false,
                                "description": "The match rule criteria.\n",
                                "oneOf": [
                                  {
                                    "required": [
                                      "matchType",
                                      "matchValue"
                                    ],
                                    "title": "matchType and matchValue required"
                                  },
                                  {
                                    "required": [
                                      "matchType",
                                      "objectMatchValue"
                                    ],
                                    "title": "matchType and objectMatchValue required"
                                  }
                                ],
                                "properties": {
                                  "caseSensitive": {
                                    "description": "If `true`, the match is case sensitive.\n",
                                    "type": "boolean"
                                  },
                                  "checkIPs": {
                                    "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                    "enum": [
                                      "CONNECTING_IP",
                                      "XFF_HEADERS",
                                      "CONNECTING_IP XFF_HEADERS"
                                    ],
                                    "type": "string"
                                  },
                                  "matchOperator": {
                                    "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                    "enum": [
                                      "contains",
                                      "exists",
                                      "equals"
                                    ],
                                    "type": "string"
                                  },
                                  "matchType": {
                                    "description": "The type of match used.\n",
                                    "enum": [
                                      "clientip",
                                      "continent",
                                      "cookie",
                                      "countrycode",
                                      "deviceCharacteristics",
                                      "extension",
                                      "header",
                                      "hostname",
                                      "method",
                                      "path",
                                      "protocol",
                                      "proxy",
                                      "query",
                                      "regioncode"
                                    ],
                                    "type": "string"
                                  },
                                  "matchValue": {
                                    "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "negate": {
                                    "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                                    "type": "boolean"
                                  },
                                  "objectMatchValue": {
                                    "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                    "oneOf": [
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `simple`.\n",
                                            "enum": [
                                              "simple"
                                            ],
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                            "items": {
                                              "type": "string"
                                            },
                                            "nullable": true,
                                            "type": "array"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "title": "Simple",
                                        "type": "object"
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                        "properties": {
                                          "name": {
                                            "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                            "maxLength": 8192,
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "nameCaseSensitive": {
                                            "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                            "type": "boolean"
                                          },
                                          "nameHasWildcard": {
                                            "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                            "type": "boolean"
                                          },
                                          "options": {
                                            "additionalProperties": false,
                                            "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                            "properties": {
                                              "value": {
                                                "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                                "items": {
                                                  "type": "string"
                                                },
                                                "nullable": true,
                                                "type": "array"
                                              },
                                              "valueCaseSensitive": {
                                                "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                                "type": "boolean"
                                              },
                                              "valueEscaped": {
                                                "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                                "type": "boolean"
                                              },
                                              "valueHasWildcard": {
                                                "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                                "type": "boolean"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "type": {
                                            "description": "The array type, which is `object`.\n",
                                            "enum": [
                                              "object"
                                            ],
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "name",
                                          "type"
                                        ],
                                        "title": "Object",
                                        "type": "object"
                                      }
                                    ],
                                    "title": "Object match value",
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              },
                              "nullable": true,
                              "type": "array"
                            },
                            "matchesAlways": {
                              "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n",
                              "type": "boolean"
                            },
                            "name": {
                              "description": "The name of the rule.\n",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "start": {
                              "default": 0,
                              "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "type": {
                              "description": "The type of Cloudlet the rule is for. For example, the string for Request Control is `igMatchRule`.\n",
                              "enum": [
                                "igMatchRule"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "allowDeny"
                          ],
                          "title": "Request Control",
                          "type": "object",
                          "x-akamai": {
                            "file-path": "schemas/match-rule-ig.yaml"
                          }
                        },
                        {
                          "type": "object",
                          "description": "Contains match rule information for Visitor Prioritization.\n",
                          "title": "Visitor Prioritization",
                          "additionalProperties": false,
                          "required": [
                            "type",
                            "passThroughPercent"
                          ],
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "Akamai internal use only.\n",
                              "nullable": true,
                              "readOnly": true
                            },
                            "location": {
                              "type": "string",
                              "description": "The navigable endpoint used for the object referred to in the operation.\n",
                              "readOnly": true
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the rule.\n",
                              "nullable": true,
                              "maxLength": 8192
                            },
                            "type": {
                              "type": "string",
                              "description": "The type of Cloudlet the rule is for. For example, the string for Visitor Prioritization is `vpMatchRule`.\n",
                              "enum": [
                                "vpMatchRule"
                              ]
                            },
                            "akaRuleId": {
                              "type": "string",
                              "description": "The rule's unique identifier within the policy version.\n",
                              "readOnly": true
                            },
                            "start": {
                              "type": "integer",
                              "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                              "default": 0,
                              "minimum": 0
                            },
                            "end": {
                              "type": "integer",
                              "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                              "default": 0,
                              "minimum": 0
                            },
                            "matches": {
                              "type": "array",
                              "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                              "nullable": true,
                              "items": {
                                "type": "object",
                                "description": "The match rule criteria.\n",
                                "additionalProperties": false,
                                "oneOf": [
                                  {
                                    "required": [
                                      "matchType",
                                      "matchValue"
                                    ],
                                    "title": "matchType and matchValue required"
                                  },
                                  {
                                    "required": [
                                      "matchType",
                                      "objectMatchValue"
                                    ],
                                    "title": "matchType and objectMatchValue required"
                                  }
                                ],
                                "properties": {
                                  "caseSensitive": {
                                    "type": "boolean",
                                    "description": "If `true`, the match is case sensitive.\n"
                                  },
                                  "matchValue": {
                                    "type": "string",
                                    "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                    "minLength": 1,
                                    "maxLength": 8192
                                  },
                                  "negate": {
                                    "type": "boolean",
                                    "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                                  },
                                  "matchOperator": {
                                    "type": "string",
                                    "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                    "enum": [
                                      "contains",
                                      "exists",
                                      "equals"
                                    ]
                                  },
                                  "matchType": {
                                    "type": "string",
                                    "description": "The type of match used.\n",
                                    "enum": [
                                      "hostname",
                                      "path",
                                      "extension",
                                      "query",
                                      "cookie",
                                      "deviceCharacteristics",
                                      "clientip",
                                      "continent",
                                      "countrycode",
                                      "regioncode",
                                      "protocol",
                                      "header",
                                      "method",
                                      "proxy"
                                    ]
                                  },
                                  "checkIPs": {
                                    "type": "string",
                                    "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                    "enum": [
                                      "CONNECTING_IP",
                                      "XFF_HEADERS",
                                      "CONNECTING_IP XFF_HEADERS"
                                    ]
                                  },
                                  "objectMatchValue": {
                                    "type": "object",
                                    "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                    "title": "Object match value",
                                    "oneOf": [
                                      {
                                        "type": "object",
                                        "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                        "title": "Simple",
                                        "additionalProperties": false,
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "description": "The object type, which is `simple`.\n",
                                            "enum": [
                                              "simple"
                                            ]
                                          },
                                          "value": {
                                            "type": "array",
                                            "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                            "nullable": true,
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                        "title": "Object",
                                        "additionalProperties": false,
                                        "required": [
                                          "name",
                                          "type"
                                        ],
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                            "minLength": 1,
                                            "maxLength": 8192
                                          },
                                          "type": {
                                            "type": "string",
                                            "description": "The array type, which is `object`.\n",
                                            "enum": [
                                              "object"
                                            ]
                                          },
                                          "options": {
                                            "type": "object",
                                            "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                            "additionalProperties": false,
                                            "properties": {
                                              "value": {
                                                "type": "array",
                                                "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                                "nullable": true,
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "valueHasWildcard": {
                                                "type": "boolean",
                                                "description": "Set to `true` if the entries for `value` includes wildcards.\n"
                                              },
                                              "valueCaseSensitive": {
                                                "type": "boolean",
                                                "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n"
                                              },
                                              "valueEscaped": {
                                                "type": "boolean",
                                                "description": "Set to `true` if the entries for `value` includes escaped characters.\n"
                                              }
                                            }
                                          },
                                          "nameCaseSensitive": {
                                            "type": "boolean",
                                            "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                          },
                                          "nameHasWildcard": {
                                            "type": "boolean",
                                            "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "disabled": {
                              "type": "boolean",
                              "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                              "default": false
                            },
                            "passThroughPercent": {
                              "type": "number",
                              "description": "The range `0.000: 99.000` specifies the percentage of requests that pass through to the origin. The value of `100` means the request always passes through to the origin. For Visitor Prioritization, a value of `-1` means send everyone to the waiting room.\n",
                              "minimum": -1,
                              "maximum": 100
                            },
                            "matchURL": {
                              "type": "string",
                              "description": "The URL the Cloudlet uses to match the incoming request.\n",
                              "nullable": true,
                              "maxLength": 8192
                            },
                            "useIncomingQueryString": {
                              "type": "boolean",
                              "description": "If set to `true`, the Cloudlet includes the request's query string in the rewritten or forwarded URL.\n"
                            }
                          }
                        }
                      ]
                    },
                    "type": "array",
                    "x-akamai": {
                      "file-path": "schemas/match-rules.yaml"
                    }
                  }
                },
                "required": [
                  "matchRules"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/post-policy-versions-request.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns details of a policy version.\n",
            "content": {
              "application/json": {
                "example": {
                  "revisionId": 12345,
                  "policyId": 1002,
                  "version": 2,
                  "description": "Testing the cloning of a policy",
                  "createdBy": "jsmith",
                  "createDate": 1428957891084,
                  "lastModifiedBy": "jsmith",
                  "lastModifiedDate": 1428957891084,
                  "rulesLocked": false,
                  "deleted": false,
                  "activations": [],
                  "matchRules": []
                },
                "schema": {
                  "type": "object",
                  "description": "Policy version details.\n",
                  "additionalProperties": false,
                  "required": [
                    "activations",
                    "createdBy",
                    "createDate",
                    "deleted",
                    "description",
                    "lastModifiedBy",
                    "lastModifiedDate",
                    "location",
                    "matchRuleFormat",
                    "matchRules",
                    "policyId",
                    "revisionId",
                    "rulesLocked",
                    "version"
                  ],
                  "properties": {
                    "description": {
                      "type": "string",
                      "description": "Description of the policy version.\n"
                    },
                    "version": {
                      "type": "integer",
                      "description": "Version of the policy.\n"
                    },
                    "activations": {
                      "type": "array",
                      "description": "List of activations related to the policy version.\n",
                      "items": {
                        "additionalProperties": false,
                        "description": "Returns details of a policy activation.\n",
                        "properties": {
                          "apiVersion": {
                            "description": "The specific version of this API.\n",
                            "type": "string"
                          },
                          "network": {
                            "description": "The network, either `STAGING`, `PRODUCTION`, or `prod` as shorthand, on which a load balancing configuration for Application Load Balancer has been activated. Values are case-insensitive in requests.\n",
                            "enum": [
                              "prod",
                              "staging"
                            ],
                            "type": "string"
                          },
                          "policyInfo": {
                            "type": "object",
                            "description": "Returns details of a policy associated with policy activation.\n",
                            "additionalProperties": false,
                            "required": [
                              "policyId",
                              "name",
                              "version",
                              "status",
                              "statusDetail",
                              "activatedBy",
                              "activationDate"
                            ],
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of the policy.\n"
                              },
                              "version": {
                                "type": "integer",
                                "description": "Version of the policy.\n"
                              },
                              "policyId": {
                                "type": "integer",
                                "description": "ID of the policy.\n"
                              },
                              "status": {
                                "type": "string",
                                "description": "Value representing activation status.\n",
                                "enum": [
                                  "INACTIVE",
                                  "PENDING",
                                  "ACTIVE",
                                  "FAILED",
                                  "DEACTIVATED"
                                ]
                              },
                              "statusDetail": {
                                "type": "string",
                                "description": "Details of the activation status.\n"
                              },
                              "activatedBy": {
                                "type": "string",
                                "description": "User name who issued the activation.\n",
                                "nullable": true
                              },
                              "activationDate": {
                                "type": "integer",
                                "description": "Date of the activation in milliseconds.\n"
                              }
                            }
                          },
                          "propertyInfo": {
                            "type": "object",
                            "description": "Returns details of a property associated with policy activation.\n",
                            "additionalProperties": false,
                            "required": [
                              "name",
                              "version",
                              "groupId",
                              "status",
                              "activatedBy",
                              "activationDate",
                              "id"
                            ],
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "ID of the property.\n"
                              },
                              "name": {
                                "type": "string",
                                "description": "Name of the property.\n"
                              },
                              "version": {
                                "type": "integer",
                                "description": "Version of the property.\n"
                              },
                              "groupId": {
                                "type": "integer",
                                "description": "Identifies the group where the property is placed.\n"
                              },
                              "status": {
                                "type": "string",
                                "description": "Value representing activation status.\n",
                                "enum": [
                                  "INACTIVE",
                                  "PENDING",
                                  "ACTIVE",
                                  "FAILED",
                                  "DEACTIVATED"
                                ]
                              },
                              "activatedBy": {
                                "type": "string",
                                "description": "User name who issued the activation.\n",
                                "nullable": true
                              },
                              "activationDate": {
                                "type": "integer",
                                "description": "Date of the activation in milliseconds.\n"
                              }
                            }
                          },
                          "serviceVersion": {
                            "description": "__Deprecated__ The build of the software running on the server. The value can be `null`.\n",
                            "nullable": true,
                            "type": "string",
                            "x-akamai": {
                              "status": "DEPRECATED"
                            }
                          }
                        },
                        "required": [
                          "network",
                          "policyInfo",
                          "propertyInfo"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/policy-activation.yaml"
                        }
                      }
                    },
                    "createDate": {
                      "type": "integer",
                      "description": "Date of the policy version creation in milliseconds.\n"
                    },
                    "createdBy": {
                      "type": "string",
                      "description": "User name who created the policy version.\n"
                    },
                    "deleted": {
                      "type": "boolean",
                      "description": "Flag determining whether the policy version is deleted or not.\n"
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "User name who recently modified the policy version.\n"
                    },
                    "lastModifiedDate": {
                      "type": "integer",
                      "description": "Date of the recent policy version modification in milliseconds.\n"
                    },
                    "location": {
                      "type": "string",
                      "description": "The navigable endpoint used for the object referred to in the operation.\n"
                    },
                    "matchRuleFormat": {
                      "type": "string",
                      "description": "The version of the `matchRules` format.\n"
                    },
                    "matchRules": {
                      "description": "A list of Cloudlet-specific match rules for this policy.\n",
                      "items": {
                        "description": "Contains information about match rules.\n",
                        "oneOf": [
                          {
                            "type": "object",
                            "description": "Contains match rule information for Application Load Balancer.\n",
                            "title": "Application Load Balancer",
                            "additionalProperties": false,
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "Akamai internal use only.\n",
                                "nullable": true,
                                "readOnly": true
                              },
                              "location": {
                                "type": "string",
                                "description": "The navigable endpoint used for the object referred to in the operation.\n",
                                "readOnly": true
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the rule.\n",
                                "nullable": true,
                                "maxLength": 8192
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of Cloudlet the rule is for. For example, the string for Application Load Balancer is `albMatchRule`.\n",
                                "enum": [
                                  "albMatchRule"
                                ]
                              },
                              "akaRuleId": {
                                "type": "string",
                                "description": "The rule's unique identifier within the policy version.\n",
                                "readOnly": true
                              },
                              "disabled": {
                                "type": "boolean",
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                                "default": false
                              },
                              "start": {
                                "type": "integer",
                                "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                                "default": 0,
                                "minimum": 0
                              },
                              "end": {
                                "type": "integer",
                                "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                                "default": 0,
                                "minimum": 0
                              },
                              "matchURL": {
                                "type": "string",
                                "description": "The URL the Cloudlet uses to match the incoming request.\n",
                                "nullable": true,
                                "maxLength": 8192
                              },
                              "matches": {
                                "type": "array",
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                                "nullable": true,
                                "items": {
                                  "type": "object",
                                  "description": "The match rule criteria.\n",
                                  "additionalProperties": false,
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ],
                                      "title": "matchType and matchValue required"
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ],
                                      "title": "matchType and objectMatchValue required"
                                    }
                                  ],
                                  "properties": {
                                    "caseSensitive": {
                                      "type": "boolean",
                                      "description": "If `true`, the match is case sensitive.\n"
                                    },
                                    "checkIPs": {
                                      "type": "string",
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                      "nullable": true,
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "type": "string",
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "type": "string",
                                      "description": "The type of match used.\n",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "regex",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "matchValue": {
                                      "type": "string",
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                      "minLength": 1,
                                      "maxLength": 8192
                                    },
                                    "negate": {
                                      "type": "boolean",
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                                    },
                                    "objectMatchValue": {
                                      "type": "object",
                                      "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                      "title": "Object match value",
                                      "oneOf": [
                                        {
                                          "type": "object",
                                          "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                          "title": "Simple",
                                          "additionalProperties": false,
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "description": "The object type, which is `simple`.\n",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "type": "array",
                                              "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                              "nullable": true,
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "description": "Use this for more complex match criteria.\n",
                                          "title": "Object",
                                          "additionalProperties": false,
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                              "minLength": 1,
                                              "maxLength": 8192
                                            },
                                            "type": {
                                              "type": "string",
                                              "description": "The array type, which is `object`.\n",
                                              "enum": [
                                                "object"
                                              ]
                                            },
                                            "options": {
                                              "type": "object",
                                              "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                              "additionalProperties": false,
                                              "properties": {
                                                "value": {
                                                  "type": "array",
                                                  "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                                  "nullable": true,
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n"
                                                },
                                                "valueEscaped": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for `value` includes escaped characters.\n"
                                                },
                                                "valueHasWildcard": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for `value` includes wildcards.\n"
                                                }
                                              }
                                            },
                                            "nameCaseSensitive": {
                                              "type": "boolean",
                                              "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                            },
                                            "nameHasWildcard": {
                                              "type": "boolean",
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              },
                              "matchesAlways": {
                                "type": "boolean",
                                "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n"
                              },
                              "forwardSettings": {
                                "type": "object",
                                "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                                "additionalProperties": false,
                                "properties": {
                                  "pathAndQS": {
                                    "type": "string",
                                    "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                                    "minLength": 1,
                                    "maxLength": 8192
                                  },
                                  "useIncomingQueryString": {
                                    "type": "boolean",
                                    "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n"
                                  },
                                  "originId": {
                                    "type": "string",
                                    "description": "The conditional origin's unique identifier.\n",
                                    "nullable": true,
                                    "maxLength": 8192
                                  }
                                }
                              }
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Contains match rule information for API Prioritization.\n",
                            "properties": {
                              "akaRuleId": {
                                "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                                "readOnly": true,
                                "type": "string"
                              },
                              "disabled": {
                                "default": false,
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                                "type": "boolean"
                              },
                              "end": {
                                "default": 0,
                                "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "id": {
                                "description": "__Read-only__ Akamai internal use only.\n",
                                "nullable": true,
                                "readOnly": true,
                                "type": "integer"
                              },
                              "location": {
                                "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                                "readOnly": true,
                                "type": "string"
                              },
                              "matchURL": {
                                "description": "The URL the Cloudlet uses to match the incoming request.\n",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "matches": {
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.\n",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ],
                                      "title": "matchType and matchValue required"
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ],
                                      "title": "matchType and objectMatchValue required"
                                    }
                                  ],
                                  "properties": {
                                    "caseSensitive": {
                                      "description": "If `true`, the match is case sensitive.\n",
                                      "type": "boolean"
                                    },
                                    "checkIPs": {
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ],
                                      "type": "string"
                                    },
                                    "matchOperator": {
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ],
                                      "type": "string"
                                    },
                                    "matchType": {
                                      "description": "The type of match used.\n",
                                      "enum": [
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "header",
                                        "method",
                                        "proxy"
                                      ],
                                      "type": "string"
                                    },
                                    "matchValue": {
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "negate": {
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                                      "type": "boolean"
                                    },
                                    "objectMatchValue": {
                                      "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                      "oneOf": [
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `simple`.\n",
                                              "enum": [
                                                "simple"
                                              ],
                                              "type": "string"
                                            },
                                            "value": {
                                              "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                              "items": {
                                                "type": "string"
                                              },
                                              "nullable": true,
                                              "type": "array"
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "title": "Simple",
                                          "type": "object"
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use this for more complex match criteria.\n",
                                          "properties": {
                                            "name": {
                                              "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                              "maxLength": 8192,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "nameCaseSensitive": {
                                              "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                              "type": "boolean"
                                            },
                                            "nameHasWildcard": {
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                              "type": "boolean"
                                            },
                                            "options": {
                                              "additionalProperties": false,
                                              "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                              "properties": {
                                                "value": {
                                                  "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "nullable": true,
                                                  "type": "array"
                                                },
                                                "valueCaseSensitive": {
                                                  "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                                  "type": "boolean"
                                                },
                                                "valueEscaped": {
                                                  "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                                  "type": "boolean"
                                                },
                                                "valueHasWildcard": {
                                                  "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                                  "type": "boolean"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "type": {
                                              "description": "The array type, which is `object`.\n",
                                              "enum": [
                                                "object"
                                              ],
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "title": "Object",
                                          "type": "object"
                                        }
                                      ],
                                      "title": "Object match value",
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                },
                                "nullable": true,
                                "type": "array"
                              },
                              "name": {
                                "description": "The name of the rule.\n",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "passThroughPercent": {
                                "description": "The percentage of requests that pass through to the origin, with `100` indicating the request always passes through to the origin. For Visitor Prioritization, a value of -1 sends everyone to the waiting room.\n",
                                "maximum": 100,
                                "minimum": -1,
                                "type": "number"
                              },
                              "start": {
                                "default": 0,
                                "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "type": {
                                "description": "The type of Cloudlet the rule is for. For example, the string for API Prioritization is `apMatchRule`.\n",
                                "enum": [
                                  "apMatchRule"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "passThroughPercent"
                            ],
                            "title": "API Prioritization",
                            "type": "object",
                            "x-akamai": {
                              "file-path": "schemas/match-rule-ap.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Contains match rule information for Audience Segmentation.\n",
                            "properties": {
                              "akaRuleId": {
                                "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                                "readOnly": true,
                                "type": "string"
                              },
                              "disabled": {
                                "default": false,
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                                "type": "boolean"
                              },
                              "end": {
                                "default": 0,
                                "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "forwardSettings": {
                                "additionalProperties": false,
                                "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                                "properties": {
                                  "originId": {
                                    "description": "The conditional origin's unique identifier.\n",
                                    "maxLength": 8192,
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "pathAndQS": {
                                    "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "useIncomingQueryString": {
                                    "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n",
                                    "type": "boolean"
                                  }
                                },
                                "type": "object"
                              },
                              "id": {
                                "description": "__Read-only__ Akamai internal use only.\n",
                                "nullable": true,
                                "readOnly": true,
                                "type": "integer"
                              },
                              "location": {
                                "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                                "readOnly": true,
                                "type": "string"
                              },
                              "matchURL": {
                                "description": "The URL the Cloudlet uses to match the incoming request.\n",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "matches": {
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.\n",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ],
                                      "title": "matchType and matchValue required"
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ],
                                      "title": "matchType and objectMatchValue required"
                                    }
                                  ],
                                  "properties": {
                                    "caseSensitive": {
                                      "description": "If `true`, the match is case sensitive.\n",
                                      "type": "boolean"
                                    },
                                    "checkIPs": {
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ],
                                      "type": "string"
                                    },
                                    "matchOperator": {
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ],
                                      "type": "string"
                                    },
                                    "matchType": {
                                      "description": "The type of match used.\n",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "range",
                                        "regex",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ],
                                      "type": "string"
                                    },
                                    "matchValue": {
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "negate": {
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                                      "type": "boolean"
                                    },
                                    "objectMatchValue": {
                                      "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.\n",
                                      "oneOf": [
                                        {
                                          "additionalProperties": false,
                                          "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.\n",
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `range`.\n",
                                              "enum": [
                                                "range"
                                              ],
                                              "type": "string"
                                            },
                                            "value": {
                                              "description": "An inclusive range comprised of two numbers to match on.\n",
                                              "items": {
                                                "type": "integer"
                                              },
                                              "nullable": true,
                                              "type": "array"
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "title": "Range",
                                          "type": "object"
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `simple`.\n",
                                              "enum": [
                                                "simple"
                                              ],
                                              "type": "string"
                                            },
                                            "value": {
                                              "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                              "items": {
                                                "type": "string"
                                              },
                                              "nullable": true,
                                              "type": "array"
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "title": "Simple",
                                          "type": "object"
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                          "properties": {
                                            "name": {
                                              "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                              "maxLength": 8192,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "nameCaseSensitive": {
                                              "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                              "type": "boolean"
                                            },
                                            "nameHasWildcard": {
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                              "type": "boolean"
                                            },
                                            "options": {
                                              "additionalProperties": false,
                                              "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                              "properties": {
                                                "value": {
                                                  "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "nullable": true,
                                                  "type": "array"
                                                },
                                                "valueCaseSensitive": {
                                                  "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                                  "type": "boolean"
                                                },
                                                "valueEscaped": {
                                                  "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                                  "type": "boolean"
                                                },
                                                "valueHasWildcard": {
                                                  "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                                  "type": "boolean"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "type": {
                                              "description": "The array type, which is `object`.\n",
                                              "enum": [
                                                "object"
                                              ],
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "title": "Object",
                                          "type": "object"
                                        }
                                      ],
                                      "title": "Object match value",
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                },
                                "nullable": true,
                                "type": "array"
                              },
                              "name": {
                                "description": "The name of the rule.\n",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "start": {
                                "default": 0,
                                "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "type": {
                                "description": "The type of Cloudlet the rule is for. For example, the string for Audience Segmentation is `asMatchRule`.\n",
                                "enum": [
                                  "asMatchRule"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "title": "Audience Segmentation",
                            "type": "object",
                            "x-akamai": {
                              "file-path": "schemas/match-rule-as.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Contains match rule information for Phased Release.\n",
                            "properties": {
                              "akaRuleId": {
                                "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                                "readOnly": true,
                                "type": "string"
                              },
                              "disabled": {
                                "default": false,
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                                "type": "boolean"
                              },
                              "end": {
                                "default": 0,
                                "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "forwardSettings": {
                                "additionalProperties": false,
                                "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, and `percent`.\n",
                                "properties": {
                                  "originId": {
                                    "description": "The conditional origin's unique identifier.\n",
                                    "maxLength": 8192,
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "percent": {
                                    "description": "The percentage of visitors directed to a different origin.\n",
                                    "maximum": 100,
                                    "minimum": 0,
                                    "type": "number"
                                  }
                                },
                                "type": "object"
                              },
                              "id": {
                                "description": "__Read-only__ Akamai internal use only.\n",
                                "nullable": true,
                                "readOnly": true,
                                "type": "integer"
                              },
                              "location": {
                                "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                                "readOnly": true,
                                "type": "string"
                              },
                              "matchURL": {
                                "description": "The URL the Cloudlet uses to match the incoming request.\n",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "matches": {
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.\n",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ],
                                      "title": "matchType and matchValue required"
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ],
                                      "title": "matchType and objectMatchValue required"
                                    }
                                  ],
                                  "properties": {
                                    "caseSensitive": {
                                      "description": "If `true`, the match is case sensitive.\n",
                                      "type": "boolean"
                                    },
                                    "checkIPs": {
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ],
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "matchOperator": {
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ],
                                      "type": "string"
                                    },
                                    "matchType": {
                                      "description": "The type of match used.\n",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ],
                                      "type": "string"
                                    },
                                    "matchValue": {
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "negate": {
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                                      "type": "boolean"
                                    },
                                    "objectMatchValue": {
                                      "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                      "oneOf": [
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `simple`.\n",
                                              "enum": [
                                                "simple"
                                              ],
                                              "type": "string"
                                            },
                                            "value": {
                                              "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                              "items": {
                                                "type": "string"
                                              },
                                              "nullable": true,
                                              "type": "array"
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "title": "Simple",
                                          "type": "object"
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use this for more complex match criteria.\n",
                                          "properties": {
                                            "name": {
                                              "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                              "maxLength": 8192,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "nameCaseSensitive": {
                                              "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                              "type": "boolean"
                                            },
                                            "nameHasWildcard": {
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                              "type": "boolean"
                                            },
                                            "options": {
                                              "additionalProperties": false,
                                              "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                              "properties": {
                                                "value": {
                                                  "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "nullable": true,
                                                  "type": "array"
                                                },
                                                "valueCaseSensitive": {
                                                  "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                                  "type": "boolean"
                                                },
                                                "valueEscaped": {
                                                  "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                                  "type": "boolean"
                                                },
                                                "valueHasWildcard": {
                                                  "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                                  "type": "boolean"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "type": {
                                              "description": "The array type, which is `object`.\n",
                                              "enum": [
                                                "object"
                                              ],
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "title": "Object",
                                          "type": "object"
                                        }
                                      ],
                                      "title": "Object match value",
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                },
                                "nullable": true,
                                "type": "array"
                              },
                              "matchesAlways": {
                                "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "The name of the rule.\n",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "start": {
                                "default": 0,
                                "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "type": {
                                "description": "The type of Cloudlet the rule is for. For example, the string for Phased Release is `cdMatchRule`.\n",
                                "enum": [
                                  "cdMatchRule"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "title": "Phased Release",
                            "type": "object",
                            "x-akamai": {
                              "file-path": "schemas/match-rule-cd.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Contains match rule information for Edge Redirector.\n",
                            "properties": {
                              "akaRuleId": {
                                "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                                "readOnly": true,
                                "type": "string"
                              },
                              "disabled": {
                                "default": false,
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                                "type": "boolean"
                              },
                              "end": {
                                "default": 0,
                                "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "id": {
                                "description": "__Read-only__ Akamai internal use only.\n",
                                "nullable": true,
                                "readOnly": true,
                                "type": "integer"
                              },
                              "location": {
                                "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                                "readOnly": true,
                                "type": "string"
                              },
                              "matchURL": {
                                "description": "The URL the Cloudlet uses to match the incoming request.\n",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "matches": {
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.\n",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ],
                                      "title": "matchType and matchValue required"
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ],
                                      "title": "matchType and objectMatchValue required"
                                    }
                                  ],
                                  "properties": {
                                    "caseSensitive": {
                                      "description": "If `true`, the match is case sensitive.\n",
                                      "type": "boolean"
                                    },
                                    "checkIPs": {
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ],
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "matchOperator": {
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ],
                                      "type": "string"
                                    },
                                    "matchType": {
                                      "description": "The type of match used.\n",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "regex",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ],
                                      "type": "string"
                                    },
                                    "matchValue": {
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "negate": {
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                                      "type": "boolean"
                                    },
                                    "objectMatchValue": {
                                      "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                      "oneOf": [
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `simple`.\n",
                                              "enum": [
                                                "simple"
                                              ],
                                              "type": "string"
                                            },
                                            "value": {
                                              "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                              "items": {
                                                "type": "string"
                                              },
                                              "nullable": true,
                                              "type": "array"
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "title": "Simple",
                                          "type": "object"
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                          "properties": {
                                            "name": {
                                              "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                              "maxLength": 8192,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "nameCaseSensitive": {
                                              "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                              "type": "boolean"
                                            },
                                            "nameHasWildcard": {
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                              "type": "boolean"
                                            },
                                            "options": {
                                              "additionalProperties": false,
                                              "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                              "properties": {
                                                "value": {
                                                  "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "nullable": true,
                                                  "type": "array"
                                                },
                                                "valueCaseSensitive": {
                                                  "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                                  "type": "boolean"
                                                },
                                                "valueEscaped": {
                                                  "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                                  "type": "boolean"
                                                },
                                                "valueHasWildcard": {
                                                  "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                                  "type": "boolean"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "type": {
                                              "description": "The array type, which is `object`.\n",
                                              "enum": [
                                                "object"
                                              ],
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "title": "Object",
                                          "type": "object"
                                        }
                                      ],
                                      "title": "Object match value",
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                },
                                "nullable": true,
                                "type": "array"
                              },
                              "matchesAlways": {
                                "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "The name of the rule.\n",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "redirectURL": {
                                "description": "The URL Edge Redirector redirects the request to. If using `useRelativeUrl`, you can enter a path for the value. If `useRelativeUrl` is not used or set to `none`, then the `redirectUrl` should be a fully qualified URL.\n",
                                "maxLength": 8192,
                                "minLength": 1,
                                "type": "string"
                              },
                              "start": {
                                "default": 0,
                                "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "statusCode": {
                                "description": "The HTTP response redirect type status code: `301` for permanent redirect, `302` for temporary redirect, `303` for temporary using GET, `307` for temporary retain method, or `308` for permanent retain method.\n",
                                "enum": [
                                  301,
                                  302,
                                  303,
                                  307,
                                  308
                                ],
                                "type": "integer"
                              },
                              "type": {
                                "description": "The type of Cloudlet the rule is for. For example, the string for Edge Redirector is `erMatchRule`.\n",
                                "enum": [
                                  "erMatchRule"
                                ],
                                "type": "string"
                              },
                              "useIncomingQueryString": {
                                "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n",
                                "type": "boolean"
                              },
                              "useIncomingSchemeAndHost": {
                                "description": "If set to `true`, the Cloudlet copies both the scheme and the hostname from the incoming request to use in the redirect URL.\n",
                                "type": "boolean"
                              },
                              "useRelativeUrl": {
                                "description": "If set to `relative_url`, takes the path entered for the `redirectUrl` and sets it in the response’s `Location` header. The client browser receiving the request decides which protocol and hostname to use. If set to `copy_scheme_hostname`, it creates an absolute path by taking the protocol and hostname from the incoming request and combining them with path information entered for the `redirectUrl`. This absolute path is set in the response’s `Location` header. If you don't include `useRelativeUrl`, or if you set it to `none`, then specify the `redirectUrl` as a fully qualified URL.\n",
                                "enum": [
                                  "relative_url",
                                  "copy_scheme_hostname",
                                  "none"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "redirectURL",
                              "statusCode"
                            ],
                            "title": "Edge Redirector",
                            "type": "object",
                            "x-akamai": {
                              "file-path": "schemas/match-rule-er.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Contains match rule information for Forward Rewrite.\n",
                            "properties": {
                              "akaRuleId": {
                                "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                                "readOnly": true,
                                "type": "string"
                              },
                              "disabled": {
                                "default": false,
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                                "type": "boolean"
                              },
                              "end": {
                                "default": 0,
                                "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "forwardSettings": {
                                "additionalProperties": false,
                                "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                                "properties": {
                                  "originId": {
                                    "description": "The conditional origin's unique identifier.\n",
                                    "maxLength": 8192,
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "pathAndQS": {
                                    "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "useIncomingQueryString": {
                                    "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n",
                                    "type": "boolean"
                                  }
                                },
                                "type": "object"
                              },
                              "id": {
                                "description": "__Read-only__ Akamai internal use only.\n",
                                "nullable": true,
                                "readOnly": true,
                                "type": "integer"
                              },
                              "location": {
                                "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                                "readOnly": true,
                                "type": "string"
                              },
                              "matchURL": {
                                "description": "The URL the Cloudlet uses to match the incoming request.\n",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "matches": {
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.\n",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ],
                                      "title": "matchType and matchValue required"
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ],
                                      "title": "matchType and objectMatchValue required"
                                    }
                                  ],
                                  "properties": {
                                    "caseSensitive": {
                                      "description": "If `true`, the match is case sensitive.\n",
                                      "type": "boolean"
                                    },
                                    "checkIPs": {
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ],
                                      "type": "string"
                                    },
                                    "matchOperator": {
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ],
                                      "type": "string"
                                    },
                                    "matchType": {
                                      "description": "The type of match used.\n",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "regex",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ],
                                      "type": "string"
                                    },
                                    "matchValue": {
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "negate": {
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                                      "type": "boolean"
                                    },
                                    "objectMatchValue": {
                                      "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                      "oneOf": [
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `simple`.\n",
                                              "enum": [
                                                "simple"
                                              ],
                                              "type": "string"
                                            },
                                            "value": {
                                              "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                              "items": {
                                                "type": "string"
                                              },
                                              "nullable": true,
                                              "type": "array"
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "title": "Simple",
                                          "type": "object"
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                          "properties": {
                                            "name": {
                                              "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                              "maxLength": 8192,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "nameCaseSensitive": {
                                              "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                              "type": "boolean"
                                            },
                                            "nameHasWildcard": {
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                              "type": "boolean"
                                            },
                                            "options": {
                                              "additionalProperties": false,
                                              "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                              "properties": {
                                                "value": {
                                                  "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "nullable": true,
                                                  "type": "array"
                                                },
                                                "valueCaseSensitive": {
                                                  "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                                  "type": "boolean"
                                                },
                                                "valueEscaped": {
                                                  "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                                  "type": "boolean"
                                                },
                                                "valueHasWildcard": {
                                                  "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                                  "type": "boolean"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "type": {
                                              "description": "The array type, which is `object`.\n",
                                              "enum": [
                                                "object"
                                              ],
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "title": "Object",
                                          "type": "object"
                                        }
                                      ],
                                      "title": "Object match value",
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                },
                                "nullable": true,
                                "type": "array"
                              },
                              "name": {
                                "description": "The name of the rule.\n",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "start": {
                                "default": 0,
                                "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "type": {
                                "description": "The type of Cloudlet the rule is for. For example, the string for Forward Rewrite is `frMatchRule`.\n",
                                "enum": [
                                  "frMatchRule"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "forwardSettings"
                            ],
                            "title": "Forward Rewrite",
                            "type": "object",
                            "x-akamai": {
                              "file-path": "schemas/match-rule-fr.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Contains match rule information for Request Control.\n",
                            "properties": {
                              "akaRuleId": {
                                "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                                "readOnly": true,
                                "type": "string"
                              },
                              "allowDeny": {
                                "description": "If set to `allow`, the request is sent to origin when all conditions are true. If `deny`, the request is denied when all conditions are true. If `denybranded`, the request is denied and rerouted according to the configuration of the [Request Control behavior](https://techdocs.akamai.com/property-mgr/reference/latest-request-control).\n",
                                "enum": [
                                  "allow",
                                  "deny",
                                  "denybranded"
                                ],
                                "type": "string"
                              },
                              "disabled": {
                                "default": false,
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                                "type": "boolean"
                              },
                              "end": {
                                "default": 0,
                                "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "id": {
                                "description": "__Read-only__ Akamai internal use only.\n",
                                "nullable": true,
                                "readOnly": true,
                                "type": "integer"
                              },
                              "location": {
                                "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                                "readOnly": true,
                                "type": "string"
                              },
                              "matches": {
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.\n",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ],
                                      "title": "matchType and matchValue required"
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ],
                                      "title": "matchType and objectMatchValue required"
                                    }
                                  ],
                                  "properties": {
                                    "caseSensitive": {
                                      "description": "If `true`, the match is case sensitive.\n",
                                      "type": "boolean"
                                    },
                                    "checkIPs": {
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ],
                                      "type": "string"
                                    },
                                    "matchOperator": {
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ],
                                      "type": "string"
                                    },
                                    "matchType": {
                                      "description": "The type of match used.\n",
                                      "enum": [
                                        "clientip",
                                        "continent",
                                        "cookie",
                                        "countrycode",
                                        "deviceCharacteristics",
                                        "extension",
                                        "header",
                                        "hostname",
                                        "method",
                                        "path",
                                        "protocol",
                                        "proxy",
                                        "query",
                                        "regioncode"
                                      ],
                                      "type": "string"
                                    },
                                    "matchValue": {
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "negate": {
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                                      "type": "boolean"
                                    },
                                    "objectMatchValue": {
                                      "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                      "oneOf": [
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `simple`.\n",
                                              "enum": [
                                                "simple"
                                              ],
                                              "type": "string"
                                            },
                                            "value": {
                                              "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                              "items": {
                                                "type": "string"
                                              },
                                              "nullable": true,
                                              "type": "array"
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "title": "Simple",
                                          "type": "object"
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                          "properties": {
                                            "name": {
                                              "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                              "maxLength": 8192,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "nameCaseSensitive": {
                                              "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                              "type": "boolean"
                                            },
                                            "nameHasWildcard": {
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                              "type": "boolean"
                                            },
                                            "options": {
                                              "additionalProperties": false,
                                              "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                              "properties": {
                                                "value": {
                                                  "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "nullable": true,
                                                  "type": "array"
                                                },
                                                "valueCaseSensitive": {
                                                  "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                                  "type": "boolean"
                                                },
                                                "valueEscaped": {
                                                  "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                                  "type": "boolean"
                                                },
                                                "valueHasWildcard": {
                                                  "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                                  "type": "boolean"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "type": {
                                              "description": "The array type, which is `object`.\n",
                                              "enum": [
                                                "object"
                                              ],
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "title": "Object",
                                          "type": "object"
                                        }
                                      ],
                                      "title": "Object match value",
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                },
                                "nullable": true,
                                "type": "array"
                              },
                              "matchesAlways": {
                                "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "The name of the rule.\n",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "start": {
                                "default": 0,
                                "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "type": {
                                "description": "The type of Cloudlet the rule is for. For example, the string for Request Control is `igMatchRule`.\n",
                                "enum": [
                                  "igMatchRule"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "allowDeny"
                            ],
                            "title": "Request Control",
                            "type": "object",
                            "x-akamai": {
                              "file-path": "schemas/match-rule-ig.yaml"
                            }
                          },
                          {
                            "type": "object",
                            "description": "Contains match rule information for Visitor Prioritization.\n",
                            "title": "Visitor Prioritization",
                            "additionalProperties": false,
                            "required": [
                              "type",
                              "passThroughPercent"
                            ],
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "Akamai internal use only.\n",
                                "nullable": true,
                                "readOnly": true
                              },
                              "location": {
                                "type": "string",
                                "description": "The navigable endpoint used for the object referred to in the operation.\n",
                                "readOnly": true
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the rule.\n",
                                "nullable": true,
                                "maxLength": 8192
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of Cloudlet the rule is for. For example, the string for Visitor Prioritization is `vpMatchRule`.\n",
                                "enum": [
                                  "vpMatchRule"
                                ]
                              },
                              "akaRuleId": {
                                "type": "string",
                                "description": "The rule's unique identifier within the policy version.\n",
                                "readOnly": true
                              },
                              "start": {
                                "type": "integer",
                                "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                                "default": 0,
                                "minimum": 0
                              },
                              "end": {
                                "type": "integer",
                                "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                                "default": 0,
                                "minimum": 0
                              },
                              "matches": {
                                "type": "array",
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                                "nullable": true,
                                "items": {
                                  "type": "object",
                                  "description": "The match rule criteria.\n",
                                  "additionalProperties": false,
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ],
                                      "title": "matchType and matchValue required"
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ],
                                      "title": "matchType and objectMatchValue required"
                                    }
                                  ],
                                  "properties": {
                                    "caseSensitive": {
                                      "type": "boolean",
                                      "description": "If `true`, the match is case sensitive.\n"
                                    },
                                    "matchValue": {
                                      "type": "string",
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                      "minLength": 1,
                                      "maxLength": 8192
                                    },
                                    "negate": {
                                      "type": "boolean",
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                                    },
                                    "matchOperator": {
                                      "type": "string",
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "type": "string",
                                      "description": "The type of match used.\n",
                                      "enum": [
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "header",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "checkIPs": {
                                      "type": "string",
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "objectMatchValue": {
                                      "type": "object",
                                      "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                      "title": "Object match value",
                                      "oneOf": [
                                        {
                                          "type": "object",
                                          "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                          "title": "Simple",
                                          "additionalProperties": false,
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "description": "The object type, which is `simple`.\n",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "type": "array",
                                              "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                              "nullable": true,
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                          "title": "Object",
                                          "additionalProperties": false,
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                              "minLength": 1,
                                              "maxLength": 8192
                                            },
                                            "type": {
                                              "type": "string",
                                              "description": "The array type, which is `object`.\n",
                                              "enum": [
                                                "object"
                                              ]
                                            },
                                            "options": {
                                              "type": "object",
                                              "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                              "additionalProperties": false,
                                              "properties": {
                                                "value": {
                                                  "type": "array",
                                                  "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                                  "nullable": true,
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueHasWildcard": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for `value` includes wildcards.\n"
                                                },
                                                "valueCaseSensitive": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n"
                                                },
                                                "valueEscaped": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for `value` includes escaped characters.\n"
                                                }
                                              }
                                            },
                                            "nameCaseSensitive": {
                                              "type": "boolean",
                                              "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                            },
                                            "nameHasWildcard": {
                                              "type": "boolean",
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              },
                              "disabled": {
                                "type": "boolean",
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                                "default": false
                              },
                              "passThroughPercent": {
                                "type": "number",
                                "description": "The range `0.000: 99.000` specifies the percentage of requests that pass through to the origin. The value of `100` means the request always passes through to the origin. For Visitor Prioritization, a value of `-1` means send everyone to the waiting room.\n",
                                "minimum": -1,
                                "maximum": 100
                              },
                              "matchURL": {
                                "type": "string",
                                "description": "The URL the Cloudlet uses to match the incoming request.\n",
                                "nullable": true,
                                "maxLength": 8192
                              },
                              "useIncomingQueryString": {
                                "type": "boolean",
                                "description": "If set to `true`, the Cloudlet includes the request's query string in the rewritten or forwarded URL.\n"
                              }
                            }
                          }
                        ]
                      },
                      "type": "array",
                      "x-akamai": {
                        "file-path": "schemas/match-rules.yaml"
                      }
                    },
                    "policyId": {
                      "type": "integer",
                      "description": "ID of the policy the version is associated to.\n"
                    },
                    "revisionId": {
                      "type": "integer",
                      "description": "ID of the revision.\n"
                    },
                    "rulesLocked": {
                      "type": "boolean",
                      "description": "Flag determining whether the rules are locked or not.\n"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "get-policy-versions",
        "summary": "List policy versions",
        "tags": [
          "Policy versions"
        ],
        "description": "Returns information about all versions of a policy.\n",
        "parameters": [
          {
            "name": "includeRules",
            "in": "query",
            "description": "Including match rules for all policy versions in the results is now disabled. You can get match rules for a single policy version using [Get a Policy Version](https://techdocs.akamai.com/cloudlets/v2/reference/get-policy-version).\n",
            "schema": {
              "type": "boolean",
              "example": true,
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns all policy versions.\n",
            "content": {
              "application/json": {
                "example": [
                  {
                    "revisionId": 11868,
                    "policyId": 1001,
                    "version": 1,
                    "description": "test",
                    "createdBy": "jsmith",
                    "createDate": 1427133615439,
                    "lastModifiedBy": "afero",
                    "lastModifiedDate": 1427133651975,
                    "rulesLocked": false,
                    "deleted": false,
                    "activations": [],
                    "matchRules": []
                  },
                  {
                    "revisionId": 11870,
                    "policyId": 1001,
                    "version": 2,
                    "description": "v2",
                    "createdBy": "jsmith",
                    "createDate": 1427133784903,
                    "lastModifiedBy": "afero",
                    "lastModifiedDate": 1427133805767,
                    "rulesLocked": false,
                    "deleted": false,
                    "activations": [],
                    "matchRules": []
                  }
                ],
                "schema": {
                  "description": "Returns all policy versions.\n",
                  "items": {
                    "additionalProperties": false,
                    "description": "Returns policy version details.\n",
                    "properties": {
                      "activations": {
                        "description": "List of activations related to the policy version.\n",
                        "items": {
                          "additionalProperties": false,
                          "description": "Returns details of a policy activation.\n",
                          "properties": {
                            "apiVersion": {
                              "description": "The specific version of this API.\n",
                              "type": "string"
                            },
                            "network": {
                              "description": "The network, either `STAGING`, `PRODUCTION`, or `prod` as shorthand, on which a load balancing configuration for Application Load Balancer has been activated. Values are case-insensitive in requests.\n",
                              "enum": [
                                "prod",
                                "staging"
                              ],
                              "type": "string"
                            },
                            "policyInfo": {
                              "type": "object",
                              "description": "Returns details of a policy associated with policy activation.\n",
                              "additionalProperties": false,
                              "required": [
                                "policyId",
                                "name",
                                "version",
                                "status",
                                "statusDetail",
                                "activatedBy",
                                "activationDate"
                              ],
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name of the policy.\n"
                                },
                                "version": {
                                  "type": "integer",
                                  "description": "Version of the policy.\n"
                                },
                                "policyId": {
                                  "type": "integer",
                                  "description": "ID of the policy.\n"
                                },
                                "status": {
                                  "type": "string",
                                  "description": "Value representing activation status.\n",
                                  "enum": [
                                    "INACTIVE",
                                    "PENDING",
                                    "ACTIVE",
                                    "FAILED",
                                    "DEACTIVATED"
                                  ]
                                },
                                "statusDetail": {
                                  "type": "string",
                                  "description": "Details of the activation status.\n"
                                },
                                "activatedBy": {
                                  "type": "string",
                                  "description": "User name who issued the activation.\n",
                                  "nullable": true
                                },
                                "activationDate": {
                                  "type": "integer",
                                  "description": "Date of the activation in milliseconds.\n"
                                }
                              }
                            },
                            "propertyInfo": {
                              "type": "object",
                              "description": "Returns details of a property associated with policy activation.\n",
                              "additionalProperties": false,
                              "required": [
                                "name",
                                "version",
                                "groupId",
                                "status",
                                "activatedBy",
                                "activationDate",
                                "id"
                              ],
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "description": "ID of the property.\n"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Name of the property.\n"
                                },
                                "version": {
                                  "type": "integer",
                                  "description": "Version of the property.\n"
                                },
                                "groupId": {
                                  "type": "integer",
                                  "description": "Identifies the group where the property is placed.\n"
                                },
                                "status": {
                                  "type": "string",
                                  "description": "Value representing activation status.\n",
                                  "enum": [
                                    "INACTIVE",
                                    "PENDING",
                                    "ACTIVE",
                                    "FAILED",
                                    "DEACTIVATED"
                                  ]
                                },
                                "activatedBy": {
                                  "type": "string",
                                  "description": "User name who issued the activation.\n",
                                  "nullable": true
                                },
                                "activationDate": {
                                  "type": "integer",
                                  "description": "Date of the activation in milliseconds.\n"
                                }
                              }
                            },
                            "serviceVersion": {
                              "description": "__Deprecated__ The build of the software running on the server. The value can be `null`.\n",
                              "nullable": true,
                              "type": "string",
                              "x-akamai": {
                                "status": "DEPRECATED"
                              }
                            }
                          },
                          "required": [
                            "network",
                            "policyInfo",
                            "propertyInfo"
                          ],
                          "type": "object",
                          "x-akamai": {
                            "file-path": "schemas/policy-activation.yaml"
                          }
                        },
                        "type": "array"
                      },
                      "createDate": {
                        "description": "Date of the policy version creation in milliseconds.\n",
                        "type": "integer"
                      },
                      "createdBy": {
                        "description": "User name who created the policy version.\n",
                        "type": "string"
                      },
                      "deleted": {
                        "description": "Flag determining whether the policy version is deleted or not.\n",
                        "type": "boolean"
                      },
                      "description": {
                        "description": "Description of the policy version.\n",
                        "type": "string"
                      },
                      "lastModifiedBy": {
                        "description": "User name who recently modified the policy version.\n",
                        "type": "string"
                      },
                      "lastModifiedDate": {
                        "description": "Date of the recent policy version modification in milliseconds.\n",
                        "type": "integer"
                      },
                      "location": {
                        "description": "The navigable endpoint used for the object referred to in the operation.\n",
                        "type": "string"
                      },
                      "matchRuleFormat": {
                        "description": "The version of the `matchRules` format.\n",
                        "type": "string"
                      },
                      "matchRules": {
                        "description": "A list of Cloudlet-specific match rules for this policy.\n",
                        "items": {
                          "description": "Contains information about match rules.\n",
                          "oneOf": [
                            {
                              "type": "object",
                              "description": "Contains match rule information for Application Load Balancer.\n",
                              "title": "Application Load Balancer",
                              "additionalProperties": false,
                              "required": [
                                "type"
                              ],
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "description": "Akamai internal use only.\n",
                                  "nullable": true,
                                  "readOnly": true
                                },
                                "location": {
                                  "type": "string",
                                  "description": "The navigable endpoint used for the object referred to in the operation.\n",
                                  "readOnly": true
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the rule.\n",
                                  "nullable": true,
                                  "maxLength": 8192
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of Cloudlet the rule is for. For example, the string for Application Load Balancer is `albMatchRule`.\n",
                                  "enum": [
                                    "albMatchRule"
                                  ]
                                },
                                "akaRuleId": {
                                  "type": "string",
                                  "description": "The rule's unique identifier within the policy version.\n",
                                  "readOnly": true
                                },
                                "disabled": {
                                  "type": "boolean",
                                  "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                                  "default": false
                                },
                                "start": {
                                  "type": "integer",
                                  "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                                  "default": 0,
                                  "minimum": 0
                                },
                                "end": {
                                  "type": "integer",
                                  "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                                  "default": 0,
                                  "minimum": 0
                                },
                                "matchURL": {
                                  "type": "string",
                                  "description": "The URL the Cloudlet uses to match the incoming request.\n",
                                  "nullable": true,
                                  "maxLength": 8192
                                },
                                "matches": {
                                  "type": "array",
                                  "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                                  "nullable": true,
                                  "items": {
                                    "type": "object",
                                    "description": "The match rule criteria.\n",
                                    "additionalProperties": false,
                                    "oneOf": [
                                      {
                                        "required": [
                                          "matchType",
                                          "matchValue"
                                        ],
                                        "title": "matchType and matchValue required"
                                      },
                                      {
                                        "required": [
                                          "matchType",
                                          "objectMatchValue"
                                        ],
                                        "title": "matchType and objectMatchValue required"
                                      }
                                    ],
                                    "properties": {
                                      "caseSensitive": {
                                        "type": "boolean",
                                        "description": "If `true`, the match is case sensitive.\n"
                                      },
                                      "checkIPs": {
                                        "type": "string",
                                        "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                        "nullable": true,
                                        "enum": [
                                          "CONNECTING_IP",
                                          "XFF_HEADERS",
                                          "CONNECTING_IP XFF_HEADERS"
                                        ]
                                      },
                                      "matchOperator": {
                                        "type": "string",
                                        "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                        "enum": [
                                          "contains",
                                          "exists",
                                          "equals"
                                        ]
                                      },
                                      "matchType": {
                                        "type": "string",
                                        "description": "The type of match used.\n",
                                        "enum": [
                                          "header",
                                          "hostname",
                                          "path",
                                          "extension",
                                          "query",
                                          "regex",
                                          "cookie",
                                          "deviceCharacteristics",
                                          "clientip",
                                          "continent",
                                          "countrycode",
                                          "regioncode",
                                          "protocol",
                                          "method",
                                          "proxy"
                                        ]
                                      },
                                      "matchValue": {
                                        "type": "string",
                                        "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                        "minLength": 1,
                                        "maxLength": 8192
                                      },
                                      "negate": {
                                        "type": "boolean",
                                        "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                                      },
                                      "objectMatchValue": {
                                        "type": "object",
                                        "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                        "title": "Object match value",
                                        "oneOf": [
                                          {
                                            "type": "object",
                                            "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                            "title": "Simple",
                                            "additionalProperties": false,
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "description": "The object type, which is `simple`.\n",
                                                "enum": [
                                                  "simple"
                                                ]
                                              },
                                              "value": {
                                                "type": "array",
                                                "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                                "nullable": true,
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "type": "object",
                                            "description": "Use this for more complex match criteria.\n",
                                            "title": "Object",
                                            "additionalProperties": false,
                                            "required": [
                                              "name",
                                              "type"
                                            ],
                                            "properties": {
                                              "name": {
                                                "type": "string",
                                                "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                                "minLength": 1,
                                                "maxLength": 8192
                                              },
                                              "type": {
                                                "type": "string",
                                                "description": "The array type, which is `object`.\n",
                                                "enum": [
                                                  "object"
                                                ]
                                              },
                                              "options": {
                                                "type": "object",
                                                "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                                "additionalProperties": false,
                                                "properties": {
                                                  "value": {
                                                    "type": "array",
                                                    "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                                    "nullable": true,
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "valueCaseSensitive": {
                                                    "type": "boolean",
                                                    "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n"
                                                  },
                                                  "valueEscaped": {
                                                    "type": "boolean",
                                                    "description": "Set to `true` if the entries for `value` includes escaped characters.\n"
                                                  },
                                                  "valueHasWildcard": {
                                                    "type": "boolean",
                                                    "description": "Set to `true` if the entries for `value` includes wildcards.\n"
                                                  }
                                                }
                                              },
                                              "nameCaseSensitive": {
                                                "type": "boolean",
                                                "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                              },
                                              "nameHasWildcard": {
                                                "type": "boolean",
                                                "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  }
                                },
                                "matchesAlways": {
                                  "type": "boolean",
                                  "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n"
                                },
                                "forwardSettings": {
                                  "type": "object",
                                  "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                                  "additionalProperties": false,
                                  "properties": {
                                    "pathAndQS": {
                                      "type": "string",
                                      "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                                      "minLength": 1,
                                      "maxLength": 8192
                                    },
                                    "useIncomingQueryString": {
                                      "type": "boolean",
                                      "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n"
                                    },
                                    "originId": {
                                      "type": "string",
                                      "description": "The conditional origin's unique identifier.\n",
                                      "nullable": true,
                                      "maxLength": 8192
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "additionalProperties": false,
                              "description": "Contains match rule information for API Prioritization.\n",
                              "properties": {
                                "akaRuleId": {
                                  "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "disabled": {
                                  "default": false,
                                  "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                                  "type": "boolean"
                                },
                                "end": {
                                  "default": 0,
                                  "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "id": {
                                  "description": "__Read-only__ Akamai internal use only.\n",
                                  "nullable": true,
                                  "readOnly": true,
                                  "type": "integer"
                                },
                                "location": {
                                  "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "matchURL": {
                                  "description": "The URL the Cloudlet uses to match the incoming request.\n",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "matches": {
                                  "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "The match rule criteria.\n",
                                    "oneOf": [
                                      {
                                        "required": [
                                          "matchType",
                                          "matchValue"
                                        ],
                                        "title": "matchType and matchValue required"
                                      },
                                      {
                                        "required": [
                                          "matchType",
                                          "objectMatchValue"
                                        ],
                                        "title": "matchType and objectMatchValue required"
                                      }
                                    ],
                                    "properties": {
                                      "caseSensitive": {
                                        "description": "If `true`, the match is case sensitive.\n",
                                        "type": "boolean"
                                      },
                                      "checkIPs": {
                                        "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                        "enum": [
                                          "CONNECTING_IP",
                                          "XFF_HEADERS",
                                          "CONNECTING_IP XFF_HEADERS"
                                        ],
                                        "type": "string"
                                      },
                                      "matchOperator": {
                                        "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                        "enum": [
                                          "contains",
                                          "exists",
                                          "equals"
                                        ],
                                        "type": "string"
                                      },
                                      "matchType": {
                                        "description": "The type of match used.\n",
                                        "enum": [
                                          "hostname",
                                          "path",
                                          "extension",
                                          "query",
                                          "cookie",
                                          "deviceCharacteristics",
                                          "clientip",
                                          "continent",
                                          "countrycode",
                                          "regioncode",
                                          "protocol",
                                          "header",
                                          "method",
                                          "proxy"
                                        ],
                                        "type": "string"
                                      },
                                      "matchValue": {
                                        "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                        "maxLength": 8192,
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "negate": {
                                        "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                                        "type": "boolean"
                                      },
                                      "objectMatchValue": {
                                        "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                        "oneOf": [
                                          {
                                            "additionalProperties": false,
                                            "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `simple`.\n",
                                                "enum": [
                                                  "simple"
                                                ],
                                                "type": "string"
                                              },
                                              "value": {
                                                "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                                "items": {
                                                  "type": "string"
                                                },
                                                "nullable": true,
                                                "type": "array"
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "title": "Simple",
                                            "type": "object"
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use this for more complex match criteria.\n",
                                            "properties": {
                                              "name": {
                                                "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                                "maxLength": 8192,
                                                "minLength": 1,
                                                "type": "string"
                                              },
                                              "nameCaseSensitive": {
                                                "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                                "type": "boolean"
                                              },
                                              "nameHasWildcard": {
                                                "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                                "type": "boolean"
                                              },
                                              "options": {
                                                "additionalProperties": false,
                                                "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                                "properties": {
                                                  "value": {
                                                    "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                                    "items": {
                                                      "type": "string"
                                                    },
                                                    "nullable": true,
                                                    "type": "array"
                                                  },
                                                  "valueCaseSensitive": {
                                                    "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                                    "type": "boolean"
                                                  },
                                                  "valueEscaped": {
                                                    "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                                    "type": "boolean"
                                                  },
                                                  "valueHasWildcard": {
                                                    "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                                    "type": "boolean"
                                                  }
                                                },
                                                "type": "object"
                                              },
                                              "type": {
                                                "description": "The array type, which is `object`.\n",
                                                "enum": [
                                                  "object"
                                                ],
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "name",
                                              "type"
                                            ],
                                            "title": "Object",
                                            "type": "object"
                                          }
                                        ],
                                        "title": "Object match value",
                                        "type": "object"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "nullable": true,
                                  "type": "array"
                                },
                                "name": {
                                  "description": "The name of the rule.\n",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "passThroughPercent": {
                                  "description": "The percentage of requests that pass through to the origin, with `100` indicating the request always passes through to the origin. For Visitor Prioritization, a value of -1 sends everyone to the waiting room.\n",
                                  "maximum": 100,
                                  "minimum": -1,
                                  "type": "number"
                                },
                                "start": {
                                  "default": 0,
                                  "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "type": {
                                  "description": "The type of Cloudlet the rule is for. For example, the string for API Prioritization is `apMatchRule`.\n",
                                  "enum": [
                                    "apMatchRule"
                                  ],
                                  "type": "string"
                                }
                              },
                              "required": [
                                "type",
                                "passThroughPercent"
                              ],
                              "title": "API Prioritization",
                              "type": "object",
                              "x-akamai": {
                                "file-path": "schemas/match-rule-ap.yaml"
                              }
                            },
                            {
                              "additionalProperties": false,
                              "description": "Contains match rule information for Audience Segmentation.\n",
                              "properties": {
                                "akaRuleId": {
                                  "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "disabled": {
                                  "default": false,
                                  "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                                  "type": "boolean"
                                },
                                "end": {
                                  "default": 0,
                                  "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "forwardSettings": {
                                  "additionalProperties": false,
                                  "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                                  "properties": {
                                    "originId": {
                                      "description": "The conditional origin's unique identifier.\n",
                                      "maxLength": 8192,
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "pathAndQS": {
                                      "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "useIncomingQueryString": {
                                      "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n",
                                      "type": "boolean"
                                    }
                                  },
                                  "type": "object"
                                },
                                "id": {
                                  "description": "__Read-only__ Akamai internal use only.\n",
                                  "nullable": true,
                                  "readOnly": true,
                                  "type": "integer"
                                },
                                "location": {
                                  "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "matchURL": {
                                  "description": "The URL the Cloudlet uses to match the incoming request.\n",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "matches": {
                                  "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "The match rule criteria.\n",
                                    "oneOf": [
                                      {
                                        "required": [
                                          "matchType",
                                          "matchValue"
                                        ],
                                        "title": "matchType and matchValue required"
                                      },
                                      {
                                        "required": [
                                          "matchType",
                                          "objectMatchValue"
                                        ],
                                        "title": "matchType and objectMatchValue required"
                                      }
                                    ],
                                    "properties": {
                                      "caseSensitive": {
                                        "description": "If `true`, the match is case sensitive.\n",
                                        "type": "boolean"
                                      },
                                      "checkIPs": {
                                        "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                        "enum": [
                                          "CONNECTING_IP",
                                          "XFF_HEADERS",
                                          "CONNECTING_IP XFF_HEADERS"
                                        ],
                                        "type": "string"
                                      },
                                      "matchOperator": {
                                        "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                        "enum": [
                                          "contains",
                                          "exists",
                                          "equals"
                                        ],
                                        "type": "string"
                                      },
                                      "matchType": {
                                        "description": "The type of match used.\n",
                                        "enum": [
                                          "header",
                                          "hostname",
                                          "path",
                                          "extension",
                                          "query",
                                          "range",
                                          "regex",
                                          "cookie",
                                          "deviceCharacteristics",
                                          "clientip",
                                          "continent",
                                          "countrycode",
                                          "regioncode",
                                          "protocol",
                                          "method",
                                          "proxy"
                                        ],
                                        "type": "string"
                                      },
                                      "matchValue": {
                                        "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                        "maxLength": 8192,
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "negate": {
                                        "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                                        "type": "boolean"
                                      },
                                      "objectMatchValue": {
                                        "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.\n",
                                        "oneOf": [
                                          {
                                            "additionalProperties": false,
                                            "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.\n",
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `range`.\n",
                                                "enum": [
                                                  "range"
                                                ],
                                                "type": "string"
                                              },
                                              "value": {
                                                "description": "An inclusive range comprised of two numbers to match on.\n",
                                                "items": {
                                                  "type": "integer"
                                                },
                                                "nullable": true,
                                                "type": "array"
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "title": "Range",
                                            "type": "object"
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `simple`.\n",
                                                "enum": [
                                                  "simple"
                                                ],
                                                "type": "string"
                                              },
                                              "value": {
                                                "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                                "items": {
                                                  "type": "string"
                                                },
                                                "nullable": true,
                                                "type": "array"
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "title": "Simple",
                                            "type": "object"
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                            "properties": {
                                              "name": {
                                                "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                                "maxLength": 8192,
                                                "minLength": 1,
                                                "type": "string"
                                              },
                                              "nameCaseSensitive": {
                                                "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                                "type": "boolean"
                                              },
                                              "nameHasWildcard": {
                                                "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                                "type": "boolean"
                                              },
                                              "options": {
                                                "additionalProperties": false,
                                                "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                                "properties": {
                                                  "value": {
                                                    "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                                    "items": {
                                                      "type": "string"
                                                    },
                                                    "nullable": true,
                                                    "type": "array"
                                                  },
                                                  "valueCaseSensitive": {
                                                    "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                                    "type": "boolean"
                                                  },
                                                  "valueEscaped": {
                                                    "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                                    "type": "boolean"
                                                  },
                                                  "valueHasWildcard": {
                                                    "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                                    "type": "boolean"
                                                  }
                                                },
                                                "type": "object"
                                              },
                                              "type": {
                                                "description": "The array type, which is `object`.\n",
                                                "enum": [
                                                  "object"
                                                ],
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "name",
                                              "type"
                                            ],
                                            "title": "Object",
                                            "type": "object"
                                          }
                                        ],
                                        "title": "Object match value",
                                        "type": "object"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "nullable": true,
                                  "type": "array"
                                },
                                "name": {
                                  "description": "The name of the rule.\n",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "start": {
                                  "default": 0,
                                  "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "type": {
                                  "description": "The type of Cloudlet the rule is for. For example, the string for Audience Segmentation is `asMatchRule`.\n",
                                  "enum": [
                                    "asMatchRule"
                                  ],
                                  "type": "string"
                                }
                              },
                              "required": [
                                "type"
                              ],
                              "title": "Audience Segmentation",
                              "type": "object",
                              "x-akamai": {
                                "file-path": "schemas/match-rule-as.yaml"
                              }
                            },
                            {
                              "additionalProperties": false,
                              "description": "Contains match rule information for Phased Release.\n",
                              "properties": {
                                "akaRuleId": {
                                  "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "disabled": {
                                  "default": false,
                                  "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                                  "type": "boolean"
                                },
                                "end": {
                                  "default": 0,
                                  "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "forwardSettings": {
                                  "additionalProperties": false,
                                  "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, and `percent`.\n",
                                  "properties": {
                                    "originId": {
                                      "description": "The conditional origin's unique identifier.\n",
                                      "maxLength": 8192,
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "percent": {
                                      "description": "The percentage of visitors directed to a different origin.\n",
                                      "maximum": 100,
                                      "minimum": 0,
                                      "type": "number"
                                    }
                                  },
                                  "type": "object"
                                },
                                "id": {
                                  "description": "__Read-only__ Akamai internal use only.\n",
                                  "nullable": true,
                                  "readOnly": true,
                                  "type": "integer"
                                },
                                "location": {
                                  "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "matchURL": {
                                  "description": "The URL the Cloudlet uses to match the incoming request.\n",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "matches": {
                                  "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "The match rule criteria.\n",
                                    "oneOf": [
                                      {
                                        "required": [
                                          "matchType",
                                          "matchValue"
                                        ],
                                        "title": "matchType and matchValue required"
                                      },
                                      {
                                        "required": [
                                          "matchType",
                                          "objectMatchValue"
                                        ],
                                        "title": "matchType and objectMatchValue required"
                                      }
                                    ],
                                    "properties": {
                                      "caseSensitive": {
                                        "description": "If `true`, the match is case sensitive.\n",
                                        "type": "boolean"
                                      },
                                      "checkIPs": {
                                        "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                        "enum": [
                                          "CONNECTING_IP",
                                          "XFF_HEADERS",
                                          "CONNECTING_IP XFF_HEADERS"
                                        ],
                                        "nullable": true,
                                        "type": "string"
                                      },
                                      "matchOperator": {
                                        "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                        "enum": [
                                          "contains",
                                          "exists",
                                          "equals"
                                        ],
                                        "type": "string"
                                      },
                                      "matchType": {
                                        "description": "The type of match used.\n",
                                        "enum": [
                                          "header",
                                          "hostname",
                                          "path",
                                          "extension",
                                          "query",
                                          "cookie",
                                          "deviceCharacteristics",
                                          "clientip",
                                          "continent",
                                          "countrycode",
                                          "regioncode",
                                          "protocol",
                                          "method",
                                          "proxy"
                                        ],
                                        "type": "string"
                                      },
                                      "matchValue": {
                                        "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                        "maxLength": 8192,
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "negate": {
                                        "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                                        "type": "boolean"
                                      },
                                      "objectMatchValue": {
                                        "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                        "oneOf": [
                                          {
                                            "additionalProperties": false,
                                            "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `simple`.\n",
                                                "enum": [
                                                  "simple"
                                                ],
                                                "type": "string"
                                              },
                                              "value": {
                                                "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                                "items": {
                                                  "type": "string"
                                                },
                                                "nullable": true,
                                                "type": "array"
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "title": "Simple",
                                            "type": "object"
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use this for more complex match criteria.\n",
                                            "properties": {
                                              "name": {
                                                "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                                "maxLength": 8192,
                                                "minLength": 1,
                                                "type": "string"
                                              },
                                              "nameCaseSensitive": {
                                                "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                                "type": "boolean"
                                              },
                                              "nameHasWildcard": {
                                                "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                                "type": "boolean"
                                              },
                                              "options": {
                                                "additionalProperties": false,
                                                "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                                "properties": {
                                                  "value": {
                                                    "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                                    "items": {
                                                      "type": "string"
                                                    },
                                                    "nullable": true,
                                                    "type": "array"
                                                  },
                                                  "valueCaseSensitive": {
                                                    "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                                    "type": "boolean"
                                                  },
                                                  "valueEscaped": {
                                                    "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                                    "type": "boolean"
                                                  },
                                                  "valueHasWildcard": {
                                                    "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                                    "type": "boolean"
                                                  }
                                                },
                                                "type": "object"
                                              },
                                              "type": {
                                                "description": "The array type, which is `object`.\n",
                                                "enum": [
                                                  "object"
                                                ],
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "name",
                                              "type"
                                            ],
                                            "title": "Object",
                                            "type": "object"
                                          }
                                        ],
                                        "title": "Object match value",
                                        "type": "object"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "nullable": true,
                                  "type": "array"
                                },
                                "matchesAlways": {
                                  "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n",
                                  "type": "boolean"
                                },
                                "name": {
                                  "description": "The name of the rule.\n",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "start": {
                                  "default": 0,
                                  "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "type": {
                                  "description": "The type of Cloudlet the rule is for. For example, the string for Phased Release is `cdMatchRule`.\n",
                                  "enum": [
                                    "cdMatchRule"
                                  ],
                                  "type": "string"
                                }
                              },
                              "required": [
                                "type"
                              ],
                              "title": "Phased Release",
                              "type": "object",
                              "x-akamai": {
                                "file-path": "schemas/match-rule-cd.yaml"
                              }
                            },
                            {
                              "additionalProperties": false,
                              "description": "Contains match rule information for Edge Redirector.\n",
                              "properties": {
                                "akaRuleId": {
                                  "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "disabled": {
                                  "default": false,
                                  "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                                  "type": "boolean"
                                },
                                "end": {
                                  "default": 0,
                                  "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "id": {
                                  "description": "__Read-only__ Akamai internal use only.\n",
                                  "nullable": true,
                                  "readOnly": true,
                                  "type": "integer"
                                },
                                "location": {
                                  "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "matchURL": {
                                  "description": "The URL the Cloudlet uses to match the incoming request.\n",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "matches": {
                                  "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "The match rule criteria.\n",
                                    "oneOf": [
                                      {
                                        "required": [
                                          "matchType",
                                          "matchValue"
                                        ],
                                        "title": "matchType and matchValue required"
                                      },
                                      {
                                        "required": [
                                          "matchType",
                                          "objectMatchValue"
                                        ],
                                        "title": "matchType and objectMatchValue required"
                                      }
                                    ],
                                    "properties": {
                                      "caseSensitive": {
                                        "description": "If `true`, the match is case sensitive.\n",
                                        "type": "boolean"
                                      },
                                      "checkIPs": {
                                        "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                        "enum": [
                                          "CONNECTING_IP",
                                          "XFF_HEADERS",
                                          "CONNECTING_IP XFF_HEADERS"
                                        ],
                                        "nullable": true,
                                        "type": "string"
                                      },
                                      "matchOperator": {
                                        "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                        "enum": [
                                          "contains",
                                          "exists",
                                          "equals"
                                        ],
                                        "type": "string"
                                      },
                                      "matchType": {
                                        "description": "The type of match used.\n",
                                        "enum": [
                                          "header",
                                          "hostname",
                                          "path",
                                          "extension",
                                          "query",
                                          "regex",
                                          "cookie",
                                          "deviceCharacteristics",
                                          "clientip",
                                          "continent",
                                          "countrycode",
                                          "regioncode",
                                          "protocol",
                                          "method",
                                          "proxy"
                                        ],
                                        "type": "string"
                                      },
                                      "matchValue": {
                                        "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                        "maxLength": 8192,
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "negate": {
                                        "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                                        "type": "boolean"
                                      },
                                      "objectMatchValue": {
                                        "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                        "oneOf": [
                                          {
                                            "additionalProperties": false,
                                            "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `simple`.\n",
                                                "enum": [
                                                  "simple"
                                                ],
                                                "type": "string"
                                              },
                                              "value": {
                                                "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                                "items": {
                                                  "type": "string"
                                                },
                                                "nullable": true,
                                                "type": "array"
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "title": "Simple",
                                            "type": "object"
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                            "properties": {
                                              "name": {
                                                "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                                "maxLength": 8192,
                                                "minLength": 1,
                                                "type": "string"
                                              },
                                              "nameCaseSensitive": {
                                                "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                                "type": "boolean"
                                              },
                                              "nameHasWildcard": {
                                                "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                                "type": "boolean"
                                              },
                                              "options": {
                                                "additionalProperties": false,
                                                "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                                "properties": {
                                                  "value": {
                                                    "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                                    "items": {
                                                      "type": "string"
                                                    },
                                                    "nullable": true,
                                                    "type": "array"
                                                  },
                                                  "valueCaseSensitive": {
                                                    "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                                    "type": "boolean"
                                                  },
                                                  "valueEscaped": {
                                                    "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                                    "type": "boolean"
                                                  },
                                                  "valueHasWildcard": {
                                                    "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                                    "type": "boolean"
                                                  }
                                                },
                                                "type": "object"
                                              },
                                              "type": {
                                                "description": "The array type, which is `object`.\n",
                                                "enum": [
                                                  "object"
                                                ],
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "name",
                                              "type"
                                            ],
                                            "title": "Object",
                                            "type": "object"
                                          }
                                        ],
                                        "title": "Object match value",
                                        "type": "object"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "nullable": true,
                                  "type": "array"
                                },
                                "matchesAlways": {
                                  "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n",
                                  "type": "boolean"
                                },
                                "name": {
                                  "description": "The name of the rule.\n",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "redirectURL": {
                                  "description": "The URL Edge Redirector redirects the request to. If using `useRelativeUrl`, you can enter a path for the value. If `useRelativeUrl` is not used or set to `none`, then the `redirectUrl` should be a fully qualified URL.\n",
                                  "maxLength": 8192,
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "start": {
                                  "default": 0,
                                  "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "statusCode": {
                                  "description": "The HTTP response redirect type status code: `301` for permanent redirect, `302` for temporary redirect, `303` for temporary using GET, `307` for temporary retain method, or `308` for permanent retain method.\n",
                                  "enum": [
                                    301,
                                    302,
                                    303,
                                    307,
                                    308
                                  ],
                                  "type": "integer"
                                },
                                "type": {
                                  "description": "The type of Cloudlet the rule is for. For example, the string for Edge Redirector is `erMatchRule`.\n",
                                  "enum": [
                                    "erMatchRule"
                                  ],
                                  "type": "string"
                                },
                                "useIncomingQueryString": {
                                  "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n",
                                  "type": "boolean"
                                },
                                "useIncomingSchemeAndHost": {
                                  "description": "If set to `true`, the Cloudlet copies both the scheme and the hostname from the incoming request to use in the redirect URL.\n",
                                  "type": "boolean"
                                },
                                "useRelativeUrl": {
                                  "description": "If set to `relative_url`, takes the path entered for the `redirectUrl` and sets it in the response’s `Location` header. The client browser receiving the request decides which protocol and hostname to use. If set to `copy_scheme_hostname`, it creates an absolute path by taking the protocol and hostname from the incoming request and combining them with path information entered for the `redirectUrl`. This absolute path is set in the response’s `Location` header. If you don't include `useRelativeUrl`, or if you set it to `none`, then specify the `redirectUrl` as a fully qualified URL.\n",
                                  "enum": [
                                    "relative_url",
                                    "copy_scheme_hostname",
                                    "none"
                                  ],
                                  "type": "string"
                                }
                              },
                              "required": [
                                "type",
                                "redirectURL",
                                "statusCode"
                              ],
                              "title": "Edge Redirector",
                              "type": "object",
                              "x-akamai": {
                                "file-path": "schemas/match-rule-er.yaml"
                              }
                            },
                            {
                              "additionalProperties": false,
                              "description": "Contains match rule information for Forward Rewrite.\n",
                              "properties": {
                                "akaRuleId": {
                                  "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "disabled": {
                                  "default": false,
                                  "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                                  "type": "boolean"
                                },
                                "end": {
                                  "default": 0,
                                  "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "forwardSettings": {
                                  "additionalProperties": false,
                                  "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                                  "properties": {
                                    "originId": {
                                      "description": "The conditional origin's unique identifier.\n",
                                      "maxLength": 8192,
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "pathAndQS": {
                                      "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "useIncomingQueryString": {
                                      "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n",
                                      "type": "boolean"
                                    }
                                  },
                                  "type": "object"
                                },
                                "id": {
                                  "description": "__Read-only__ Akamai internal use only.\n",
                                  "nullable": true,
                                  "readOnly": true,
                                  "type": "integer"
                                },
                                "location": {
                                  "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "matchURL": {
                                  "description": "The URL the Cloudlet uses to match the incoming request.\n",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "matches": {
                                  "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "The match rule criteria.\n",
                                    "oneOf": [
                                      {
                                        "required": [
                                          "matchType",
                                          "matchValue"
                                        ],
                                        "title": "matchType and matchValue required"
                                      },
                                      {
                                        "required": [
                                          "matchType",
                                          "objectMatchValue"
                                        ],
                                        "title": "matchType and objectMatchValue required"
                                      }
                                    ],
                                    "properties": {
                                      "caseSensitive": {
                                        "description": "If `true`, the match is case sensitive.\n",
                                        "type": "boolean"
                                      },
                                      "checkIPs": {
                                        "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                        "enum": [
                                          "CONNECTING_IP",
                                          "XFF_HEADERS",
                                          "CONNECTING_IP XFF_HEADERS"
                                        ],
                                        "type": "string"
                                      },
                                      "matchOperator": {
                                        "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                        "enum": [
                                          "contains",
                                          "exists",
                                          "equals"
                                        ],
                                        "type": "string"
                                      },
                                      "matchType": {
                                        "description": "The type of match used.\n",
                                        "enum": [
                                          "header",
                                          "hostname",
                                          "path",
                                          "extension",
                                          "query",
                                          "regex",
                                          "cookie",
                                          "deviceCharacteristics",
                                          "clientip",
                                          "continent",
                                          "countrycode",
                                          "regioncode",
                                          "protocol",
                                          "method",
                                          "proxy"
                                        ],
                                        "type": "string"
                                      },
                                      "matchValue": {
                                        "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                        "maxLength": 8192,
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "negate": {
                                        "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                                        "type": "boolean"
                                      },
                                      "objectMatchValue": {
                                        "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                        "oneOf": [
                                          {
                                            "additionalProperties": false,
                                            "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `simple`.\n",
                                                "enum": [
                                                  "simple"
                                                ],
                                                "type": "string"
                                              },
                                              "value": {
                                                "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                                "items": {
                                                  "type": "string"
                                                },
                                                "nullable": true,
                                                "type": "array"
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "title": "Simple",
                                            "type": "object"
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                            "properties": {
                                              "name": {
                                                "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                                "maxLength": 8192,
                                                "minLength": 1,
                                                "type": "string"
                                              },
                                              "nameCaseSensitive": {
                                                "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                                "type": "boolean"
                                              },
                                              "nameHasWildcard": {
                                                "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                                "type": "boolean"
                                              },
                                              "options": {
                                                "additionalProperties": false,
                                                "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                                "properties": {
                                                  "value": {
                                                    "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                                    "items": {
                                                      "type": "string"
                                                    },
                                                    "nullable": true,
                                                    "type": "array"
                                                  },
                                                  "valueCaseSensitive": {
                                                    "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                                    "type": "boolean"
                                                  },
                                                  "valueEscaped": {
                                                    "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                                    "type": "boolean"
                                                  },
                                                  "valueHasWildcard": {
                                                    "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                                    "type": "boolean"
                                                  }
                                                },
                                                "type": "object"
                                              },
                                              "type": {
                                                "description": "The array type, which is `object`.\n",
                                                "enum": [
                                                  "object"
                                                ],
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "name",
                                              "type"
                                            ],
                                            "title": "Object",
                                            "type": "object"
                                          }
                                        ],
                                        "title": "Object match value",
                                        "type": "object"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "nullable": true,
                                  "type": "array"
                                },
                                "name": {
                                  "description": "The name of the rule.\n",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "start": {
                                  "default": 0,
                                  "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "type": {
                                  "description": "The type of Cloudlet the rule is for. For example, the string for Forward Rewrite is `frMatchRule`.\n",
                                  "enum": [
                                    "frMatchRule"
                                  ],
                                  "type": "string"
                                }
                              },
                              "required": [
                                "type",
                                "forwardSettings"
                              ],
                              "title": "Forward Rewrite",
                              "type": "object",
                              "x-akamai": {
                                "file-path": "schemas/match-rule-fr.yaml"
                              }
                            },
                            {
                              "additionalProperties": false,
                              "description": "Contains match rule information for Request Control.\n",
                              "properties": {
                                "akaRuleId": {
                                  "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "allowDeny": {
                                  "description": "If set to `allow`, the request is sent to origin when all conditions are true. If `deny`, the request is denied when all conditions are true. If `denybranded`, the request is denied and rerouted according to the configuration of the [Request Control behavior](https://techdocs.akamai.com/property-mgr/reference/latest-request-control).\n",
                                  "enum": [
                                    "allow",
                                    "deny",
                                    "denybranded"
                                  ],
                                  "type": "string"
                                },
                                "disabled": {
                                  "default": false,
                                  "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                                  "type": "boolean"
                                },
                                "end": {
                                  "default": 0,
                                  "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "id": {
                                  "description": "__Read-only__ Akamai internal use only.\n",
                                  "nullable": true,
                                  "readOnly": true,
                                  "type": "integer"
                                },
                                "location": {
                                  "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "matches": {
                                  "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "The match rule criteria.\n",
                                    "oneOf": [
                                      {
                                        "required": [
                                          "matchType",
                                          "matchValue"
                                        ],
                                        "title": "matchType and matchValue required"
                                      },
                                      {
                                        "required": [
                                          "matchType",
                                          "objectMatchValue"
                                        ],
                                        "title": "matchType and objectMatchValue required"
                                      }
                                    ],
                                    "properties": {
                                      "caseSensitive": {
                                        "description": "If `true`, the match is case sensitive.\n",
                                        "type": "boolean"
                                      },
                                      "checkIPs": {
                                        "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                        "enum": [
                                          "CONNECTING_IP",
                                          "XFF_HEADERS",
                                          "CONNECTING_IP XFF_HEADERS"
                                        ],
                                        "type": "string"
                                      },
                                      "matchOperator": {
                                        "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                        "enum": [
                                          "contains",
                                          "exists",
                                          "equals"
                                        ],
                                        "type": "string"
                                      },
                                      "matchType": {
                                        "description": "The type of match used.\n",
                                        "enum": [
                                          "clientip",
                                          "continent",
                                          "cookie",
                                          "countrycode",
                                          "deviceCharacteristics",
                                          "extension",
                                          "header",
                                          "hostname",
                                          "method",
                                          "path",
                                          "protocol",
                                          "proxy",
                                          "query",
                                          "regioncode"
                                        ],
                                        "type": "string"
                                      },
                                      "matchValue": {
                                        "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                        "maxLength": 8192,
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "negate": {
                                        "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                                        "type": "boolean"
                                      },
                                      "objectMatchValue": {
                                        "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                        "oneOf": [
                                          {
                                            "additionalProperties": false,
                                            "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `simple`.\n",
                                                "enum": [
                                                  "simple"
                                                ],
                                                "type": "string"
                                              },
                                              "value": {
                                                "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                                "items": {
                                                  "type": "string"
                                                },
                                                "nullable": true,
                                                "type": "array"
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "title": "Simple",
                                            "type": "object"
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                            "properties": {
                                              "name": {
                                                "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                                "maxLength": 8192,
                                                "minLength": 1,
                                                "type": "string"
                                              },
                                              "nameCaseSensitive": {
                                                "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                                "type": "boolean"
                                              },
                                              "nameHasWildcard": {
                                                "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                                "type": "boolean"
                                              },
                                              "options": {
                                                "additionalProperties": false,
                                                "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                                "properties": {
                                                  "value": {
                                                    "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                                    "items": {
                                                      "type": "string"
                                                    },
                                                    "nullable": true,
                                                    "type": "array"
                                                  },
                                                  "valueCaseSensitive": {
                                                    "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                                    "type": "boolean"
                                                  },
                                                  "valueEscaped": {
                                                    "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                                    "type": "boolean"
                                                  },
                                                  "valueHasWildcard": {
                                                    "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                                    "type": "boolean"
                                                  }
                                                },
                                                "type": "object"
                                              },
                                              "type": {
                                                "description": "The array type, which is `object`.\n",
                                                "enum": [
                                                  "object"
                                                ],
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "name",
                                              "type"
                                            ],
                                            "title": "Object",
                                            "type": "object"
                                          }
                                        ],
                                        "title": "Object match value",
                                        "type": "object"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "nullable": true,
                                  "type": "array"
                                },
                                "matchesAlways": {
                                  "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n",
                                  "type": "boolean"
                                },
                                "name": {
                                  "description": "The name of the rule.\n",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "start": {
                                  "default": 0,
                                  "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "type": {
                                  "description": "The type of Cloudlet the rule is for. For example, the string for Request Control is `igMatchRule`.\n",
                                  "enum": [
                                    "igMatchRule"
                                  ],
                                  "type": "string"
                                }
                              },
                              "required": [
                                "type",
                                "allowDeny"
                              ],
                              "title": "Request Control",
                              "type": "object",
                              "x-akamai": {
                                "file-path": "schemas/match-rule-ig.yaml"
                              }
                            },
                            {
                              "type": "object",
                              "description": "Contains match rule information for Visitor Prioritization.\n",
                              "title": "Visitor Prioritization",
                              "additionalProperties": false,
                              "required": [
                                "type",
                                "passThroughPercent"
                              ],
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "description": "Akamai internal use only.\n",
                                  "nullable": true,
                                  "readOnly": true
                                },
                                "location": {
                                  "type": "string",
                                  "description": "The navigable endpoint used for the object referred to in the operation.\n",
                                  "readOnly": true
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the rule.\n",
                                  "nullable": true,
                                  "maxLength": 8192
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of Cloudlet the rule is for. For example, the string for Visitor Prioritization is `vpMatchRule`.\n",
                                  "enum": [
                                    "vpMatchRule"
                                  ]
                                },
                                "akaRuleId": {
                                  "type": "string",
                                  "description": "The rule's unique identifier within the policy version.\n",
                                  "readOnly": true
                                },
                                "start": {
                                  "type": "integer",
                                  "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                                  "default": 0,
                                  "minimum": 0
                                },
                                "end": {
                                  "type": "integer",
                                  "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                                  "default": 0,
                                  "minimum": 0
                                },
                                "matches": {
                                  "type": "array",
                                  "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                                  "nullable": true,
                                  "items": {
                                    "type": "object",
                                    "description": "The match rule criteria.\n",
                                    "additionalProperties": false,
                                    "oneOf": [
                                      {
                                        "required": [
                                          "matchType",
                                          "matchValue"
                                        ],
                                        "title": "matchType and matchValue required"
                                      },
                                      {
                                        "required": [
                                          "matchType",
                                          "objectMatchValue"
                                        ],
                                        "title": "matchType and objectMatchValue required"
                                      }
                                    ],
                                    "properties": {
                                      "caseSensitive": {
                                        "type": "boolean",
                                        "description": "If `true`, the match is case sensitive.\n"
                                      },
                                      "matchValue": {
                                        "type": "string",
                                        "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                        "minLength": 1,
                                        "maxLength": 8192
                                      },
                                      "negate": {
                                        "type": "boolean",
                                        "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                                      },
                                      "matchOperator": {
                                        "type": "string",
                                        "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                        "enum": [
                                          "contains",
                                          "exists",
                                          "equals"
                                        ]
                                      },
                                      "matchType": {
                                        "type": "string",
                                        "description": "The type of match used.\n",
                                        "enum": [
                                          "hostname",
                                          "path",
                                          "extension",
                                          "query",
                                          "cookie",
                                          "deviceCharacteristics",
                                          "clientip",
                                          "continent",
                                          "countrycode",
                                          "regioncode",
                                          "protocol",
                                          "header",
                                          "method",
                                          "proxy"
                                        ]
                                      },
                                      "checkIPs": {
                                        "type": "string",
                                        "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                        "enum": [
                                          "CONNECTING_IP",
                                          "XFF_HEADERS",
                                          "CONNECTING_IP XFF_HEADERS"
                                        ]
                                      },
                                      "objectMatchValue": {
                                        "type": "object",
                                        "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                        "title": "Object match value",
                                        "oneOf": [
                                          {
                                            "type": "object",
                                            "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                            "title": "Simple",
                                            "additionalProperties": false,
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "description": "The object type, which is `simple`.\n",
                                                "enum": [
                                                  "simple"
                                                ]
                                              },
                                              "value": {
                                                "type": "array",
                                                "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                                "nullable": true,
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "type": "object",
                                            "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                            "title": "Object",
                                            "additionalProperties": false,
                                            "required": [
                                              "name",
                                              "type"
                                            ],
                                            "properties": {
                                              "name": {
                                                "type": "string",
                                                "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                                "minLength": 1,
                                                "maxLength": 8192
                                              },
                                              "type": {
                                                "type": "string",
                                                "description": "The array type, which is `object`.\n",
                                                "enum": [
                                                  "object"
                                                ]
                                              },
                                              "options": {
                                                "type": "object",
                                                "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                                "additionalProperties": false,
                                                "properties": {
                                                  "value": {
                                                    "type": "array",
                                                    "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                                    "nullable": true,
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "valueHasWildcard": {
                                                    "type": "boolean",
                                                    "description": "Set to `true` if the entries for `value` includes wildcards.\n"
                                                  },
                                                  "valueCaseSensitive": {
                                                    "type": "boolean",
                                                    "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n"
                                                  },
                                                  "valueEscaped": {
                                                    "type": "boolean",
                                                    "description": "Set to `true` if the entries for `value` includes escaped characters.\n"
                                                  }
                                                }
                                              },
                                              "nameCaseSensitive": {
                                                "type": "boolean",
                                                "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                              },
                                              "nameHasWildcard": {
                                                "type": "boolean",
                                                "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  }
                                },
                                "disabled": {
                                  "type": "boolean",
                                  "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                                  "default": false
                                },
                                "passThroughPercent": {
                                  "type": "number",
                                  "description": "The range `0.000: 99.000` specifies the percentage of requests that pass through to the origin. The value of `100` means the request always passes through to the origin. For Visitor Prioritization, a value of `-1` means send everyone to the waiting room.\n",
                                  "minimum": -1,
                                  "maximum": 100
                                },
                                "matchURL": {
                                  "type": "string",
                                  "description": "The URL the Cloudlet uses to match the incoming request.\n",
                                  "nullable": true,
                                  "maxLength": 8192
                                },
                                "useIncomingQueryString": {
                                  "type": "boolean",
                                  "description": "If set to `true`, the Cloudlet includes the request's query string in the rewritten or forwarded URL.\n"
                                }
                              }
                            }
                          ]
                        },
                        "type": "array",
                        "x-akamai": {
                          "file-path": "schemas/match-rules.yaml"
                        }
                      },
                      "policyId": {
                        "description": "ID of the policy the version is associated to.\n",
                        "type": "integer"
                      },
                      "revisionId": {
                        "description": "ID of the revision.\n",
                        "type": "integer"
                      },
                      "rulesLocked": {
                        "description": "Flag determining whether the rules are locked or not.\n",
                        "type": "boolean"
                      },
                      "version": {
                        "description": "Version of the policy.\n",
                        "type": "integer"
                      }
                    },
                    "required": [
                      "activations",
                      "createdBy",
                      "createDate",
                      "deleted",
                      "description",
                      "lastModifiedBy",
                      "lastModifiedDate",
                      "location",
                      "matchRuleFormat",
                      "matchRules",
                      "policyId",
                      "revisionId",
                      "rulesLocked",
                      "version"
                    ],
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/policy-version.yaml"
                    }
                  },
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/get-policy-versions-response.yaml"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/policies/{policyId}/versions/{version}": {
      "x-akamai": {
        "path-info": "/policies/{policyId}/versions/{version}"
      },
      "parameters": [
        {
          "description": "The version number of the policy.\n",
          "in": "path",
          "name": "version",
          "required": true,
          "schema": {
            "example": 2,
            "type": "number"
          },
          "x-akamai": {
            "file-path": "parameters/version-path.yaml"
          }
        },
        {
          "description": "The ID of the policy.\n",
          "in": "path",
          "name": "policyId",
          "required": true,
          "schema": {
            "example": 1001,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/policy-id-path.yaml"
          }
        }
      ],
      "get": {
        "operationId": "get-policy-version",
        "summary": "Get a policy version",
        "tags": [
          "Policy versions"
        ],
        "description": "Returns information about a specific Cloudlet policy version.\n",
        "parameters": [
          {
            "name": "omitRules",
            "in": "query",
            "description": "Excludes the match rules from the results. Defaults to `false`.\n",
            "schema": {
              "type": "boolean",
              "example": true,
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns details of a policy version.\n",
            "content": {
              "application/json": {
                "example": {
                  "revisionId": 11870,
                  "policyId": 1001,
                  "version": 2,
                  "description": "v2",
                  "createdBy": "jsmith",
                  "createDate": 1427133784903,
                  "lastModifiedBy": "afero",
                  "lastModifiedDate": 1427133805767,
                  "rulesLocked": false,
                  "deleted": false,
                  "activations": [],
                  "matchRules": []
                },
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "activations",
                    "createdBy",
                    "createDate",
                    "deleted",
                    "description",
                    "lastModifiedBy",
                    "lastModifiedDate",
                    "location",
                    "matchRuleFormat",
                    "matchRules",
                    "policyId",
                    "revisionId",
                    "rulesLocked",
                    "version"
                  ],
                  "properties": {
                    "description": {
                      "type": "string",
                      "description": "Description of the policy version.\n"
                    },
                    "version": {
                      "type": "integer",
                      "description": "Version of the policy.\n"
                    },
                    "activations": {
                      "type": "array",
                      "description": "List of activations related to the policy version.\n",
                      "items": {
                        "additionalProperties": false,
                        "description": "Returns details of a policy activation.\n",
                        "properties": {
                          "apiVersion": {
                            "description": "The specific version of this API.\n",
                            "type": "string"
                          },
                          "network": {
                            "description": "The network, either `STAGING`, `PRODUCTION`, or `prod` as shorthand, on which a load balancing configuration for Application Load Balancer has been activated. Values are case-insensitive in requests.\n",
                            "enum": [
                              "prod",
                              "staging"
                            ],
                            "type": "string"
                          },
                          "policyInfo": {
                            "type": "object",
                            "description": "Returns details of a policy associated with policy activation.\n",
                            "additionalProperties": false,
                            "required": [
                              "policyId",
                              "name",
                              "version",
                              "status",
                              "statusDetail",
                              "activatedBy",
                              "activationDate"
                            ],
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of the policy.\n"
                              },
                              "version": {
                                "type": "integer",
                                "description": "Version of the policy.\n"
                              },
                              "policyId": {
                                "type": "integer",
                                "description": "ID of the policy.\n"
                              },
                              "status": {
                                "type": "string",
                                "description": "Value representing activation status.\n",
                                "enum": [
                                  "INACTIVE",
                                  "PENDING",
                                  "ACTIVE",
                                  "FAILED",
                                  "DEACTIVATED"
                                ]
                              },
                              "statusDetail": {
                                "type": "string",
                                "description": "Details of the activation status.\n"
                              },
                              "activatedBy": {
                                "type": "string",
                                "description": "User name who issued the activation.\n",
                                "nullable": true
                              },
                              "activationDate": {
                                "type": "integer",
                                "description": "Date of the activation in milliseconds.\n"
                              }
                            }
                          },
                          "propertyInfo": {
                            "type": "object",
                            "description": "Returns details of a property associated with policy activation.\n",
                            "additionalProperties": false,
                            "required": [
                              "name",
                              "version",
                              "groupId",
                              "status",
                              "activatedBy",
                              "activationDate",
                              "id"
                            ],
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "ID of the property.\n"
                              },
                              "name": {
                                "type": "string",
                                "description": "Name of the property.\n"
                              },
                              "version": {
                                "type": "integer",
                                "description": "Version of the property.\n"
                              },
                              "groupId": {
                                "type": "integer",
                                "description": "Identifies the group where the property is placed.\n"
                              },
                              "status": {
                                "type": "string",
                                "description": "Value representing activation status.\n",
                                "enum": [
                                  "INACTIVE",
                                  "PENDING",
                                  "ACTIVE",
                                  "FAILED",
                                  "DEACTIVATED"
                                ]
                              },
                              "activatedBy": {
                                "type": "string",
                                "description": "User name who issued the activation.\n",
                                "nullable": true
                              },
                              "activationDate": {
                                "type": "integer",
                                "description": "Date of the activation in milliseconds.\n"
                              }
                            }
                          },
                          "serviceVersion": {
                            "description": "__Deprecated__ The build of the software running on the server. The value can be `null`.\n",
                            "nullable": true,
                            "type": "string",
                            "x-akamai": {
                              "status": "DEPRECATED"
                            }
                          }
                        },
                        "required": [
                          "network",
                          "policyInfo",
                          "propertyInfo"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/policy-activation.yaml"
                        }
                      }
                    },
                    "createDate": {
                      "type": "integer",
                      "description": "Date of the policy version creation in milliseconds.\n"
                    },
                    "createdBy": {
                      "type": "string",
                      "description": "User name who created the policy version.\n"
                    },
                    "deleted": {
                      "type": "boolean",
                      "description": "Flag determining whether the policy version is deleted or not.\n"
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "User name who recently modified the policy version.\n"
                    },
                    "lastModifiedDate": {
                      "type": "integer",
                      "description": "Date of the recent policy version modification in milliseconds.\n"
                    },
                    "location": {
                      "type": "string",
                      "description": "The navigable endpoint used for the object referred to in the operation.\n"
                    },
                    "matchRuleFormat": {
                      "type": "string",
                      "description": "The version of the `matchRules` format.\n"
                    },
                    "matchRules": {
                      "description": "A list of Cloudlet-specific match rules for this policy.\n",
                      "items": {
                        "description": "Contains information about match rules.\n",
                        "oneOf": [
                          {
                            "type": "object",
                            "description": "Contains match rule information for Application Load Balancer.\n",
                            "title": "Application Load Balancer",
                            "additionalProperties": false,
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "Akamai internal use only.\n",
                                "nullable": true,
                                "readOnly": true
                              },
                              "location": {
                                "type": "string",
                                "description": "The navigable endpoint used for the object referred to in the operation.\n",
                                "readOnly": true
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the rule.\n",
                                "nullable": true,
                                "maxLength": 8192
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of Cloudlet the rule is for. For example, the string for Application Load Balancer is `albMatchRule`.\n",
                                "enum": [
                                  "albMatchRule"
                                ]
                              },
                              "akaRuleId": {
                                "type": "string",
                                "description": "The rule's unique identifier within the policy version.\n",
                                "readOnly": true
                              },
                              "disabled": {
                                "type": "boolean",
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                                "default": false
                              },
                              "start": {
                                "type": "integer",
                                "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                                "default": 0,
                                "minimum": 0
                              },
                              "end": {
                                "type": "integer",
                                "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                                "default": 0,
                                "minimum": 0
                              },
                              "matchURL": {
                                "type": "string",
                                "description": "The URL the Cloudlet uses to match the incoming request.\n",
                                "nullable": true,
                                "maxLength": 8192
                              },
                              "matches": {
                                "type": "array",
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                                "nullable": true,
                                "items": {
                                  "type": "object",
                                  "description": "The match rule criteria.\n",
                                  "additionalProperties": false,
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ],
                                      "title": "matchType and matchValue required"
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ],
                                      "title": "matchType and objectMatchValue required"
                                    }
                                  ],
                                  "properties": {
                                    "caseSensitive": {
                                      "type": "boolean",
                                      "description": "If `true`, the match is case sensitive.\n"
                                    },
                                    "checkIPs": {
                                      "type": "string",
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                      "nullable": true,
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "type": "string",
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "type": "string",
                                      "description": "The type of match used.\n",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "regex",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "matchValue": {
                                      "type": "string",
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                      "minLength": 1,
                                      "maxLength": 8192
                                    },
                                    "negate": {
                                      "type": "boolean",
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                                    },
                                    "objectMatchValue": {
                                      "type": "object",
                                      "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                      "title": "Object match value",
                                      "oneOf": [
                                        {
                                          "type": "object",
                                          "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                          "title": "Simple",
                                          "additionalProperties": false,
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "description": "The object type, which is `simple`.\n",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "type": "array",
                                              "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                              "nullable": true,
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "description": "Use this for more complex match criteria.\n",
                                          "title": "Object",
                                          "additionalProperties": false,
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                              "minLength": 1,
                                              "maxLength": 8192
                                            },
                                            "type": {
                                              "type": "string",
                                              "description": "The array type, which is `object`.\n",
                                              "enum": [
                                                "object"
                                              ]
                                            },
                                            "options": {
                                              "type": "object",
                                              "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                              "additionalProperties": false,
                                              "properties": {
                                                "value": {
                                                  "type": "array",
                                                  "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                                  "nullable": true,
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n"
                                                },
                                                "valueEscaped": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for `value` includes escaped characters.\n"
                                                },
                                                "valueHasWildcard": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for `value` includes wildcards.\n"
                                                }
                                              }
                                            },
                                            "nameCaseSensitive": {
                                              "type": "boolean",
                                              "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                            },
                                            "nameHasWildcard": {
                                              "type": "boolean",
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              },
                              "matchesAlways": {
                                "type": "boolean",
                                "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n"
                              },
                              "forwardSettings": {
                                "type": "object",
                                "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                                "additionalProperties": false,
                                "properties": {
                                  "pathAndQS": {
                                    "type": "string",
                                    "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                                    "minLength": 1,
                                    "maxLength": 8192
                                  },
                                  "useIncomingQueryString": {
                                    "type": "boolean",
                                    "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n"
                                  },
                                  "originId": {
                                    "type": "string",
                                    "description": "The conditional origin's unique identifier.\n",
                                    "nullable": true,
                                    "maxLength": 8192
                                  }
                                }
                              }
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Contains match rule information for API Prioritization.\n",
                            "properties": {
                              "akaRuleId": {
                                "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                                "readOnly": true,
                                "type": "string"
                              },
                              "disabled": {
                                "default": false,
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                                "type": "boolean"
                              },
                              "end": {
                                "default": 0,
                                "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "id": {
                                "description": "__Read-only__ Akamai internal use only.\n",
                                "nullable": true,
                                "readOnly": true,
                                "type": "integer"
                              },
                              "location": {
                                "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                                "readOnly": true,
                                "type": "string"
                              },
                              "matchURL": {
                                "description": "The URL the Cloudlet uses to match the incoming request.\n",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "matches": {
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.\n",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ],
                                      "title": "matchType and matchValue required"
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ],
                                      "title": "matchType and objectMatchValue required"
                                    }
                                  ],
                                  "properties": {
                                    "caseSensitive": {
                                      "description": "If `true`, the match is case sensitive.\n",
                                      "type": "boolean"
                                    },
                                    "checkIPs": {
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ],
                                      "type": "string"
                                    },
                                    "matchOperator": {
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ],
                                      "type": "string"
                                    },
                                    "matchType": {
                                      "description": "The type of match used.\n",
                                      "enum": [
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "header",
                                        "method",
                                        "proxy"
                                      ],
                                      "type": "string"
                                    },
                                    "matchValue": {
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "negate": {
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                                      "type": "boolean"
                                    },
                                    "objectMatchValue": {
                                      "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                      "oneOf": [
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `simple`.\n",
                                              "enum": [
                                                "simple"
                                              ],
                                              "type": "string"
                                            },
                                            "value": {
                                              "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                              "items": {
                                                "type": "string"
                                              },
                                              "nullable": true,
                                              "type": "array"
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "title": "Simple",
                                          "type": "object"
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use this for more complex match criteria.\n",
                                          "properties": {
                                            "name": {
                                              "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                              "maxLength": 8192,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "nameCaseSensitive": {
                                              "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                              "type": "boolean"
                                            },
                                            "nameHasWildcard": {
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                              "type": "boolean"
                                            },
                                            "options": {
                                              "additionalProperties": false,
                                              "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                              "properties": {
                                                "value": {
                                                  "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "nullable": true,
                                                  "type": "array"
                                                },
                                                "valueCaseSensitive": {
                                                  "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                                  "type": "boolean"
                                                },
                                                "valueEscaped": {
                                                  "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                                  "type": "boolean"
                                                },
                                                "valueHasWildcard": {
                                                  "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                                  "type": "boolean"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "type": {
                                              "description": "The array type, which is `object`.\n",
                                              "enum": [
                                                "object"
                                              ],
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "title": "Object",
                                          "type": "object"
                                        }
                                      ],
                                      "title": "Object match value",
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                },
                                "nullable": true,
                                "type": "array"
                              },
                              "name": {
                                "description": "The name of the rule.\n",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "passThroughPercent": {
                                "description": "The percentage of requests that pass through to the origin, with `100` indicating the request always passes through to the origin. For Visitor Prioritization, a value of -1 sends everyone to the waiting room.\n",
                                "maximum": 100,
                                "minimum": -1,
                                "type": "number"
                              },
                              "start": {
                                "default": 0,
                                "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "type": {
                                "description": "The type of Cloudlet the rule is for. For example, the string for API Prioritization is `apMatchRule`.\n",
                                "enum": [
                                  "apMatchRule"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "passThroughPercent"
                            ],
                            "title": "API Prioritization",
                            "type": "object",
                            "x-akamai": {
                              "file-path": "schemas/match-rule-ap.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Contains match rule information for Audience Segmentation.\n",
                            "properties": {
                              "akaRuleId": {
                                "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                                "readOnly": true,
                                "type": "string"
                              },
                              "disabled": {
                                "default": false,
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                                "type": "boolean"
                              },
                              "end": {
                                "default": 0,
                                "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "forwardSettings": {
                                "additionalProperties": false,
                                "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                                "properties": {
                                  "originId": {
                                    "description": "The conditional origin's unique identifier.\n",
                                    "maxLength": 8192,
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "pathAndQS": {
                                    "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "useIncomingQueryString": {
                                    "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n",
                                    "type": "boolean"
                                  }
                                },
                                "type": "object"
                              },
                              "id": {
                                "description": "__Read-only__ Akamai internal use only.\n",
                                "nullable": true,
                                "readOnly": true,
                                "type": "integer"
                              },
                              "location": {
                                "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                                "readOnly": true,
                                "type": "string"
                              },
                              "matchURL": {
                                "description": "The URL the Cloudlet uses to match the incoming request.\n",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "matches": {
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.\n",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ],
                                      "title": "matchType and matchValue required"
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ],
                                      "title": "matchType and objectMatchValue required"
                                    }
                                  ],
                                  "properties": {
                                    "caseSensitive": {
                                      "description": "If `true`, the match is case sensitive.\n",
                                      "type": "boolean"
                                    },
                                    "checkIPs": {
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ],
                                      "type": "string"
                                    },
                                    "matchOperator": {
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ],
                                      "type": "string"
                                    },
                                    "matchType": {
                                      "description": "The type of match used.\n",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "range",
                                        "regex",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ],
                                      "type": "string"
                                    },
                                    "matchValue": {
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "negate": {
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                                      "type": "boolean"
                                    },
                                    "objectMatchValue": {
                                      "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.\n",
                                      "oneOf": [
                                        {
                                          "additionalProperties": false,
                                          "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.\n",
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `range`.\n",
                                              "enum": [
                                                "range"
                                              ],
                                              "type": "string"
                                            },
                                            "value": {
                                              "description": "An inclusive range comprised of two numbers to match on.\n",
                                              "items": {
                                                "type": "integer"
                                              },
                                              "nullable": true,
                                              "type": "array"
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "title": "Range",
                                          "type": "object"
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `simple`.\n",
                                              "enum": [
                                                "simple"
                                              ],
                                              "type": "string"
                                            },
                                            "value": {
                                              "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                              "items": {
                                                "type": "string"
                                              },
                                              "nullable": true,
                                              "type": "array"
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "title": "Simple",
                                          "type": "object"
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                          "properties": {
                                            "name": {
                                              "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                              "maxLength": 8192,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "nameCaseSensitive": {
                                              "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                              "type": "boolean"
                                            },
                                            "nameHasWildcard": {
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                              "type": "boolean"
                                            },
                                            "options": {
                                              "additionalProperties": false,
                                              "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                              "properties": {
                                                "value": {
                                                  "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "nullable": true,
                                                  "type": "array"
                                                },
                                                "valueCaseSensitive": {
                                                  "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                                  "type": "boolean"
                                                },
                                                "valueEscaped": {
                                                  "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                                  "type": "boolean"
                                                },
                                                "valueHasWildcard": {
                                                  "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                                  "type": "boolean"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "type": {
                                              "description": "The array type, which is `object`.\n",
                                              "enum": [
                                                "object"
                                              ],
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "title": "Object",
                                          "type": "object"
                                        }
                                      ],
                                      "title": "Object match value",
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                },
                                "nullable": true,
                                "type": "array"
                              },
                              "name": {
                                "description": "The name of the rule.\n",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "start": {
                                "default": 0,
                                "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "type": {
                                "description": "The type of Cloudlet the rule is for. For example, the string for Audience Segmentation is `asMatchRule`.\n",
                                "enum": [
                                  "asMatchRule"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "title": "Audience Segmentation",
                            "type": "object",
                            "x-akamai": {
                              "file-path": "schemas/match-rule-as.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Contains match rule information for Phased Release.\n",
                            "properties": {
                              "akaRuleId": {
                                "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                                "readOnly": true,
                                "type": "string"
                              },
                              "disabled": {
                                "default": false,
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                                "type": "boolean"
                              },
                              "end": {
                                "default": 0,
                                "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "forwardSettings": {
                                "additionalProperties": false,
                                "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, and `percent`.\n",
                                "properties": {
                                  "originId": {
                                    "description": "The conditional origin's unique identifier.\n",
                                    "maxLength": 8192,
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "percent": {
                                    "description": "The percentage of visitors directed to a different origin.\n",
                                    "maximum": 100,
                                    "minimum": 0,
                                    "type": "number"
                                  }
                                },
                                "type": "object"
                              },
                              "id": {
                                "description": "__Read-only__ Akamai internal use only.\n",
                                "nullable": true,
                                "readOnly": true,
                                "type": "integer"
                              },
                              "location": {
                                "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                                "readOnly": true,
                                "type": "string"
                              },
                              "matchURL": {
                                "description": "The URL the Cloudlet uses to match the incoming request.\n",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "matches": {
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.\n",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ],
                                      "title": "matchType and matchValue required"
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ],
                                      "title": "matchType and objectMatchValue required"
                                    }
                                  ],
                                  "properties": {
                                    "caseSensitive": {
                                      "description": "If `true`, the match is case sensitive.\n",
                                      "type": "boolean"
                                    },
                                    "checkIPs": {
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ],
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "matchOperator": {
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ],
                                      "type": "string"
                                    },
                                    "matchType": {
                                      "description": "The type of match used.\n",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ],
                                      "type": "string"
                                    },
                                    "matchValue": {
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "negate": {
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                                      "type": "boolean"
                                    },
                                    "objectMatchValue": {
                                      "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                      "oneOf": [
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `simple`.\n",
                                              "enum": [
                                                "simple"
                                              ],
                                              "type": "string"
                                            },
                                            "value": {
                                              "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                              "items": {
                                                "type": "string"
                                              },
                                              "nullable": true,
                                              "type": "array"
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "title": "Simple",
                                          "type": "object"
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use this for more complex match criteria.\n",
                                          "properties": {
                                            "name": {
                                              "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                              "maxLength": 8192,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "nameCaseSensitive": {
                                              "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                              "type": "boolean"
                                            },
                                            "nameHasWildcard": {
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                              "type": "boolean"
                                            },
                                            "options": {
                                              "additionalProperties": false,
                                              "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                              "properties": {
                                                "value": {
                                                  "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "nullable": true,
                                                  "type": "array"
                                                },
                                                "valueCaseSensitive": {
                                                  "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                                  "type": "boolean"
                                                },
                                                "valueEscaped": {
                                                  "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                                  "type": "boolean"
                                                },
                                                "valueHasWildcard": {
                                                  "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                                  "type": "boolean"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "type": {
                                              "description": "The array type, which is `object`.\n",
                                              "enum": [
                                                "object"
                                              ],
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "title": "Object",
                                          "type": "object"
                                        }
                                      ],
                                      "title": "Object match value",
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                },
                                "nullable": true,
                                "type": "array"
                              },
                              "matchesAlways": {
                                "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "The name of the rule.\n",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "start": {
                                "default": 0,
                                "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "type": {
                                "description": "The type of Cloudlet the rule is for. For example, the string for Phased Release is `cdMatchRule`.\n",
                                "enum": [
                                  "cdMatchRule"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "title": "Phased Release",
                            "type": "object",
                            "x-akamai": {
                              "file-path": "schemas/match-rule-cd.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Contains match rule information for Edge Redirector.\n",
                            "properties": {
                              "akaRuleId": {
                                "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                                "readOnly": true,
                                "type": "string"
                              },
                              "disabled": {
                                "default": false,
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                                "type": "boolean"
                              },
                              "end": {
                                "default": 0,
                                "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "id": {
                                "description": "__Read-only__ Akamai internal use only.\n",
                                "nullable": true,
                                "readOnly": true,
                                "type": "integer"
                              },
                              "location": {
                                "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                                "readOnly": true,
                                "type": "string"
                              },
                              "matchURL": {
                                "description": "The URL the Cloudlet uses to match the incoming request.\n",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "matches": {
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.\n",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ],
                                      "title": "matchType and matchValue required"
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ],
                                      "title": "matchType and objectMatchValue required"
                                    }
                                  ],
                                  "properties": {
                                    "caseSensitive": {
                                      "description": "If `true`, the match is case sensitive.\n",
                                      "type": "boolean"
                                    },
                                    "checkIPs": {
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ],
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "matchOperator": {
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ],
                                      "type": "string"
                                    },
                                    "matchType": {
                                      "description": "The type of match used.\n",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "regex",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ],
                                      "type": "string"
                                    },
                                    "matchValue": {
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "negate": {
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                                      "type": "boolean"
                                    },
                                    "objectMatchValue": {
                                      "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                      "oneOf": [
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `simple`.\n",
                                              "enum": [
                                                "simple"
                                              ],
                                              "type": "string"
                                            },
                                            "value": {
                                              "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                              "items": {
                                                "type": "string"
                                              },
                                              "nullable": true,
                                              "type": "array"
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "title": "Simple",
                                          "type": "object"
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                          "properties": {
                                            "name": {
                                              "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                              "maxLength": 8192,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "nameCaseSensitive": {
                                              "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                              "type": "boolean"
                                            },
                                            "nameHasWildcard": {
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                              "type": "boolean"
                                            },
                                            "options": {
                                              "additionalProperties": false,
                                              "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                              "properties": {
                                                "value": {
                                                  "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "nullable": true,
                                                  "type": "array"
                                                },
                                                "valueCaseSensitive": {
                                                  "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                                  "type": "boolean"
                                                },
                                                "valueEscaped": {
                                                  "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                                  "type": "boolean"
                                                },
                                                "valueHasWildcard": {
                                                  "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                                  "type": "boolean"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "type": {
                                              "description": "The array type, which is `object`.\n",
                                              "enum": [
                                                "object"
                                              ],
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "title": "Object",
                                          "type": "object"
                                        }
                                      ],
                                      "title": "Object match value",
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                },
                                "nullable": true,
                                "type": "array"
                              },
                              "matchesAlways": {
                                "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "The name of the rule.\n",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "redirectURL": {
                                "description": "The URL Edge Redirector redirects the request to. If using `useRelativeUrl`, you can enter a path for the value. If `useRelativeUrl` is not used or set to `none`, then the `redirectUrl` should be a fully qualified URL.\n",
                                "maxLength": 8192,
                                "minLength": 1,
                                "type": "string"
                              },
                              "start": {
                                "default": 0,
                                "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "statusCode": {
                                "description": "The HTTP response redirect type status code: `301` for permanent redirect, `302` for temporary redirect, `303` for temporary using GET, `307` for temporary retain method, or `308` for permanent retain method.\n",
                                "enum": [
                                  301,
                                  302,
                                  303,
                                  307,
                                  308
                                ],
                                "type": "integer"
                              },
                              "type": {
                                "description": "The type of Cloudlet the rule is for. For example, the string for Edge Redirector is `erMatchRule`.\n",
                                "enum": [
                                  "erMatchRule"
                                ],
                                "type": "string"
                              },
                              "useIncomingQueryString": {
                                "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n",
                                "type": "boolean"
                              },
                              "useIncomingSchemeAndHost": {
                                "description": "If set to `true`, the Cloudlet copies both the scheme and the hostname from the incoming request to use in the redirect URL.\n",
                                "type": "boolean"
                              },
                              "useRelativeUrl": {
                                "description": "If set to `relative_url`, takes the path entered for the `redirectUrl` and sets it in the response’s `Location` header. The client browser receiving the request decides which protocol and hostname to use. If set to `copy_scheme_hostname`, it creates an absolute path by taking the protocol and hostname from the incoming request and combining them with path information entered for the `redirectUrl`. This absolute path is set in the response’s `Location` header. If you don't include `useRelativeUrl`, or if you set it to `none`, then specify the `redirectUrl` as a fully qualified URL.\n",
                                "enum": [
                                  "relative_url",
                                  "copy_scheme_hostname",
                                  "none"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "redirectURL",
                              "statusCode"
                            ],
                            "title": "Edge Redirector",
                            "type": "object",
                            "x-akamai": {
                              "file-path": "schemas/match-rule-er.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Contains match rule information for Forward Rewrite.\n",
                            "properties": {
                              "akaRuleId": {
                                "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                                "readOnly": true,
                                "type": "string"
                              },
                              "disabled": {
                                "default": false,
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                                "type": "boolean"
                              },
                              "end": {
                                "default": 0,
                                "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "forwardSettings": {
                                "additionalProperties": false,
                                "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                                "properties": {
                                  "originId": {
                                    "description": "The conditional origin's unique identifier.\n",
                                    "maxLength": 8192,
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "pathAndQS": {
                                    "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "useIncomingQueryString": {
                                    "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n",
                                    "type": "boolean"
                                  }
                                },
                                "type": "object"
                              },
                              "id": {
                                "description": "__Read-only__ Akamai internal use only.\n",
                                "nullable": true,
                                "readOnly": true,
                                "type": "integer"
                              },
                              "location": {
                                "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                                "readOnly": true,
                                "type": "string"
                              },
                              "matchURL": {
                                "description": "The URL the Cloudlet uses to match the incoming request.\n",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "matches": {
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.\n",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ],
                                      "title": "matchType and matchValue required"
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ],
                                      "title": "matchType and objectMatchValue required"
                                    }
                                  ],
                                  "properties": {
                                    "caseSensitive": {
                                      "description": "If `true`, the match is case sensitive.\n",
                                      "type": "boolean"
                                    },
                                    "checkIPs": {
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ],
                                      "type": "string"
                                    },
                                    "matchOperator": {
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ],
                                      "type": "string"
                                    },
                                    "matchType": {
                                      "description": "The type of match used.\n",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "regex",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ],
                                      "type": "string"
                                    },
                                    "matchValue": {
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "negate": {
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                                      "type": "boolean"
                                    },
                                    "objectMatchValue": {
                                      "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                      "oneOf": [
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `simple`.\n",
                                              "enum": [
                                                "simple"
                                              ],
                                              "type": "string"
                                            },
                                            "value": {
                                              "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                              "items": {
                                                "type": "string"
                                              },
                                              "nullable": true,
                                              "type": "array"
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "title": "Simple",
                                          "type": "object"
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                          "properties": {
                                            "name": {
                                              "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                              "maxLength": 8192,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "nameCaseSensitive": {
                                              "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                              "type": "boolean"
                                            },
                                            "nameHasWildcard": {
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                              "type": "boolean"
                                            },
                                            "options": {
                                              "additionalProperties": false,
                                              "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                              "properties": {
                                                "value": {
                                                  "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "nullable": true,
                                                  "type": "array"
                                                },
                                                "valueCaseSensitive": {
                                                  "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                                  "type": "boolean"
                                                },
                                                "valueEscaped": {
                                                  "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                                  "type": "boolean"
                                                },
                                                "valueHasWildcard": {
                                                  "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                                  "type": "boolean"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "type": {
                                              "description": "The array type, which is `object`.\n",
                                              "enum": [
                                                "object"
                                              ],
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "title": "Object",
                                          "type": "object"
                                        }
                                      ],
                                      "title": "Object match value",
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                },
                                "nullable": true,
                                "type": "array"
                              },
                              "name": {
                                "description": "The name of the rule.\n",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "start": {
                                "default": 0,
                                "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "type": {
                                "description": "The type of Cloudlet the rule is for. For example, the string for Forward Rewrite is `frMatchRule`.\n",
                                "enum": [
                                  "frMatchRule"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "forwardSettings"
                            ],
                            "title": "Forward Rewrite",
                            "type": "object",
                            "x-akamai": {
                              "file-path": "schemas/match-rule-fr.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Contains match rule information for Request Control.\n",
                            "properties": {
                              "akaRuleId": {
                                "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                                "readOnly": true,
                                "type": "string"
                              },
                              "allowDeny": {
                                "description": "If set to `allow`, the request is sent to origin when all conditions are true. If `deny`, the request is denied when all conditions are true. If `denybranded`, the request is denied and rerouted according to the configuration of the [Request Control behavior](https://techdocs.akamai.com/property-mgr/reference/latest-request-control).\n",
                                "enum": [
                                  "allow",
                                  "deny",
                                  "denybranded"
                                ],
                                "type": "string"
                              },
                              "disabled": {
                                "default": false,
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                                "type": "boolean"
                              },
                              "end": {
                                "default": 0,
                                "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "id": {
                                "description": "__Read-only__ Akamai internal use only.\n",
                                "nullable": true,
                                "readOnly": true,
                                "type": "integer"
                              },
                              "location": {
                                "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                                "readOnly": true,
                                "type": "string"
                              },
                              "matches": {
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.\n",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ],
                                      "title": "matchType and matchValue required"
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ],
                                      "title": "matchType and objectMatchValue required"
                                    }
                                  ],
                                  "properties": {
                                    "caseSensitive": {
                                      "description": "If `true`, the match is case sensitive.\n",
                                      "type": "boolean"
                                    },
                                    "checkIPs": {
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ],
                                      "type": "string"
                                    },
                                    "matchOperator": {
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ],
                                      "type": "string"
                                    },
                                    "matchType": {
                                      "description": "The type of match used.\n",
                                      "enum": [
                                        "clientip",
                                        "continent",
                                        "cookie",
                                        "countrycode",
                                        "deviceCharacteristics",
                                        "extension",
                                        "header",
                                        "hostname",
                                        "method",
                                        "path",
                                        "protocol",
                                        "proxy",
                                        "query",
                                        "regioncode"
                                      ],
                                      "type": "string"
                                    },
                                    "matchValue": {
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "negate": {
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                                      "type": "boolean"
                                    },
                                    "objectMatchValue": {
                                      "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                      "oneOf": [
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `simple`.\n",
                                              "enum": [
                                                "simple"
                                              ],
                                              "type": "string"
                                            },
                                            "value": {
                                              "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                              "items": {
                                                "type": "string"
                                              },
                                              "nullable": true,
                                              "type": "array"
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "title": "Simple",
                                          "type": "object"
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                          "properties": {
                                            "name": {
                                              "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                              "maxLength": 8192,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "nameCaseSensitive": {
                                              "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                              "type": "boolean"
                                            },
                                            "nameHasWildcard": {
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                              "type": "boolean"
                                            },
                                            "options": {
                                              "additionalProperties": false,
                                              "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                              "properties": {
                                                "value": {
                                                  "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "nullable": true,
                                                  "type": "array"
                                                },
                                                "valueCaseSensitive": {
                                                  "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                                  "type": "boolean"
                                                },
                                                "valueEscaped": {
                                                  "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                                  "type": "boolean"
                                                },
                                                "valueHasWildcard": {
                                                  "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                                  "type": "boolean"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "type": {
                                              "description": "The array type, which is `object`.\n",
                                              "enum": [
                                                "object"
                                              ],
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "title": "Object",
                                          "type": "object"
                                        }
                                      ],
                                      "title": "Object match value",
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                },
                                "nullable": true,
                                "type": "array"
                              },
                              "matchesAlways": {
                                "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "The name of the rule.\n",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "start": {
                                "default": 0,
                                "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "type": {
                                "description": "The type of Cloudlet the rule is for. For example, the string for Request Control is `igMatchRule`.\n",
                                "enum": [
                                  "igMatchRule"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "allowDeny"
                            ],
                            "title": "Request Control",
                            "type": "object",
                            "x-akamai": {
                              "file-path": "schemas/match-rule-ig.yaml"
                            }
                          },
                          {
                            "type": "object",
                            "description": "Contains match rule information for Visitor Prioritization.\n",
                            "title": "Visitor Prioritization",
                            "additionalProperties": false,
                            "required": [
                              "type",
                              "passThroughPercent"
                            ],
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "Akamai internal use only.\n",
                                "nullable": true,
                                "readOnly": true
                              },
                              "location": {
                                "type": "string",
                                "description": "The navigable endpoint used for the object referred to in the operation.\n",
                                "readOnly": true
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the rule.\n",
                                "nullable": true,
                                "maxLength": 8192
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of Cloudlet the rule is for. For example, the string for Visitor Prioritization is `vpMatchRule`.\n",
                                "enum": [
                                  "vpMatchRule"
                                ]
                              },
                              "akaRuleId": {
                                "type": "string",
                                "description": "The rule's unique identifier within the policy version.\n",
                                "readOnly": true
                              },
                              "start": {
                                "type": "integer",
                                "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                                "default": 0,
                                "minimum": 0
                              },
                              "end": {
                                "type": "integer",
                                "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                                "default": 0,
                                "minimum": 0
                              },
                              "matches": {
                                "type": "array",
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                                "nullable": true,
                                "items": {
                                  "type": "object",
                                  "description": "The match rule criteria.\n",
                                  "additionalProperties": false,
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ],
                                      "title": "matchType and matchValue required"
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ],
                                      "title": "matchType and objectMatchValue required"
                                    }
                                  ],
                                  "properties": {
                                    "caseSensitive": {
                                      "type": "boolean",
                                      "description": "If `true`, the match is case sensitive.\n"
                                    },
                                    "matchValue": {
                                      "type": "string",
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                      "minLength": 1,
                                      "maxLength": 8192
                                    },
                                    "negate": {
                                      "type": "boolean",
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                                    },
                                    "matchOperator": {
                                      "type": "string",
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "type": "string",
                                      "description": "The type of match used.\n",
                                      "enum": [
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "header",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "checkIPs": {
                                      "type": "string",
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "objectMatchValue": {
                                      "type": "object",
                                      "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                      "title": "Object match value",
                                      "oneOf": [
                                        {
                                          "type": "object",
                                          "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                          "title": "Simple",
                                          "additionalProperties": false,
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "description": "The object type, which is `simple`.\n",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "type": "array",
                                              "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                              "nullable": true,
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                          "title": "Object",
                                          "additionalProperties": false,
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                              "minLength": 1,
                                              "maxLength": 8192
                                            },
                                            "type": {
                                              "type": "string",
                                              "description": "The array type, which is `object`.\n",
                                              "enum": [
                                                "object"
                                              ]
                                            },
                                            "options": {
                                              "type": "object",
                                              "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                              "additionalProperties": false,
                                              "properties": {
                                                "value": {
                                                  "type": "array",
                                                  "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                                  "nullable": true,
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueHasWildcard": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for `value` includes wildcards.\n"
                                                },
                                                "valueCaseSensitive": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n"
                                                },
                                                "valueEscaped": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for `value` includes escaped characters.\n"
                                                }
                                              }
                                            },
                                            "nameCaseSensitive": {
                                              "type": "boolean",
                                              "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                            },
                                            "nameHasWildcard": {
                                              "type": "boolean",
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              },
                              "disabled": {
                                "type": "boolean",
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                                "default": false
                              },
                              "passThroughPercent": {
                                "type": "number",
                                "description": "The range `0.000: 99.000` specifies the percentage of requests that pass through to the origin. The value of `100` means the request always passes through to the origin. For Visitor Prioritization, a value of `-1` means send everyone to the waiting room.\n",
                                "minimum": -1,
                                "maximum": 100
                              },
                              "matchURL": {
                                "type": "string",
                                "description": "The URL the Cloudlet uses to match the incoming request.\n",
                                "nullable": true,
                                "maxLength": 8192
                              },
                              "useIncomingQueryString": {
                                "type": "boolean",
                                "description": "If set to `true`, the Cloudlet includes the request's query string in the rewritten or forwarded URL.\n"
                              }
                            }
                          }
                        ]
                      },
                      "type": "array",
                      "x-akamai": {
                        "file-path": "schemas/match-rules.yaml"
                      }
                    },
                    "policyId": {
                      "type": "integer",
                      "description": "ID of the policy the version is associated to.\n"
                    },
                    "revisionId": {
                      "type": "integer",
                      "description": "ID of the revision.\n"
                    },
                    "rulesLocked": {
                      "type": "boolean",
                      "description": "Flag determining whether the rules are locked or not.\n"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "put-policy-version",
        "summary": "Update a policy version",
        "tags": [
          "Policy versions"
        ],
        "description": "Update attributes of an existing policy version.\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "description": "v1 for Q1 sales"
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "description": {
                    "description": "Description of the policy version.\n",
                    "type": "string"
                  },
                  "matchRules": {
                    "description": "Cloudlet-specific match rules for this policy.\n",
                    "items": {
                      "description": "Contains information about match rules.\n",
                      "oneOf": [
                        {
                          "type": "object",
                          "description": "Contains match rule information for Application Load Balancer.\n",
                          "title": "Application Load Balancer",
                          "additionalProperties": false,
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "Akamai internal use only.\n",
                              "nullable": true,
                              "readOnly": true
                            },
                            "location": {
                              "type": "string",
                              "description": "The navigable endpoint used for the object referred to in the operation.\n",
                              "readOnly": true
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the rule.\n",
                              "nullable": true,
                              "maxLength": 8192
                            },
                            "type": {
                              "type": "string",
                              "description": "The type of Cloudlet the rule is for. For example, the string for Application Load Balancer is `albMatchRule`.\n",
                              "enum": [
                                "albMatchRule"
                              ]
                            },
                            "akaRuleId": {
                              "type": "string",
                              "description": "The rule's unique identifier within the policy version.\n",
                              "readOnly": true
                            },
                            "disabled": {
                              "type": "boolean",
                              "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                              "default": false
                            },
                            "start": {
                              "type": "integer",
                              "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                              "default": 0,
                              "minimum": 0
                            },
                            "end": {
                              "type": "integer",
                              "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                              "default": 0,
                              "minimum": 0
                            },
                            "matchURL": {
                              "type": "string",
                              "description": "The URL the Cloudlet uses to match the incoming request.\n",
                              "nullable": true,
                              "maxLength": 8192
                            },
                            "matches": {
                              "type": "array",
                              "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                              "nullable": true,
                              "items": {
                                "type": "object",
                                "description": "The match rule criteria.\n",
                                "additionalProperties": false,
                                "oneOf": [
                                  {
                                    "required": [
                                      "matchType",
                                      "matchValue"
                                    ],
                                    "title": "matchType and matchValue required"
                                  },
                                  {
                                    "required": [
                                      "matchType",
                                      "objectMatchValue"
                                    ],
                                    "title": "matchType and objectMatchValue required"
                                  }
                                ],
                                "properties": {
                                  "caseSensitive": {
                                    "type": "boolean",
                                    "description": "If `true`, the match is case sensitive.\n"
                                  },
                                  "checkIPs": {
                                    "type": "string",
                                    "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                    "nullable": true,
                                    "enum": [
                                      "CONNECTING_IP",
                                      "XFF_HEADERS",
                                      "CONNECTING_IP XFF_HEADERS"
                                    ]
                                  },
                                  "matchOperator": {
                                    "type": "string",
                                    "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                    "enum": [
                                      "contains",
                                      "exists",
                                      "equals"
                                    ]
                                  },
                                  "matchType": {
                                    "type": "string",
                                    "description": "The type of match used.\n",
                                    "enum": [
                                      "header",
                                      "hostname",
                                      "path",
                                      "extension",
                                      "query",
                                      "regex",
                                      "cookie",
                                      "deviceCharacteristics",
                                      "clientip",
                                      "continent",
                                      "countrycode",
                                      "regioncode",
                                      "protocol",
                                      "method",
                                      "proxy"
                                    ]
                                  },
                                  "matchValue": {
                                    "type": "string",
                                    "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                    "minLength": 1,
                                    "maxLength": 8192
                                  },
                                  "negate": {
                                    "type": "boolean",
                                    "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                                  },
                                  "objectMatchValue": {
                                    "type": "object",
                                    "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                    "title": "Object match value",
                                    "oneOf": [
                                      {
                                        "type": "object",
                                        "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                        "title": "Simple",
                                        "additionalProperties": false,
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "description": "The object type, which is `simple`.\n",
                                            "enum": [
                                              "simple"
                                            ]
                                          },
                                          "value": {
                                            "type": "array",
                                            "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                            "nullable": true,
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "description": "Use this for more complex match criteria.\n",
                                        "title": "Object",
                                        "additionalProperties": false,
                                        "required": [
                                          "name",
                                          "type"
                                        ],
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                            "minLength": 1,
                                            "maxLength": 8192
                                          },
                                          "type": {
                                            "type": "string",
                                            "description": "The array type, which is `object`.\n",
                                            "enum": [
                                              "object"
                                            ]
                                          },
                                          "options": {
                                            "type": "object",
                                            "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                            "additionalProperties": false,
                                            "properties": {
                                              "value": {
                                                "type": "array",
                                                "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                                "nullable": true,
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "valueCaseSensitive": {
                                                "type": "boolean",
                                                "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n"
                                              },
                                              "valueEscaped": {
                                                "type": "boolean",
                                                "description": "Set to `true` if the entries for `value` includes escaped characters.\n"
                                              },
                                              "valueHasWildcard": {
                                                "type": "boolean",
                                                "description": "Set to `true` if the entries for `value` includes wildcards.\n"
                                              }
                                            }
                                          },
                                          "nameCaseSensitive": {
                                            "type": "boolean",
                                            "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                          },
                                          "nameHasWildcard": {
                                            "type": "boolean",
                                            "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "matchesAlways": {
                              "type": "boolean",
                              "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n"
                            },
                            "forwardSettings": {
                              "type": "object",
                              "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                              "additionalProperties": false,
                              "properties": {
                                "pathAndQS": {
                                  "type": "string",
                                  "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                                  "minLength": 1,
                                  "maxLength": 8192
                                },
                                "useIncomingQueryString": {
                                  "type": "boolean",
                                  "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n"
                                },
                                "originId": {
                                  "type": "string",
                                  "description": "The conditional origin's unique identifier.\n",
                                  "nullable": true,
                                  "maxLength": 8192
                                }
                              }
                            }
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Contains match rule information for API Prioritization.\n",
                          "properties": {
                            "akaRuleId": {
                              "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                              "readOnly": true,
                              "type": "string"
                            },
                            "disabled": {
                              "default": false,
                              "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                              "type": "boolean"
                            },
                            "end": {
                              "default": 0,
                              "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "id": {
                              "description": "__Read-only__ Akamai internal use only.\n",
                              "nullable": true,
                              "readOnly": true,
                              "type": "integer"
                            },
                            "location": {
                              "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                              "readOnly": true,
                              "type": "string"
                            },
                            "matchURL": {
                              "description": "The URL the Cloudlet uses to match the incoming request.\n",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "matches": {
                              "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                              "items": {
                                "additionalProperties": false,
                                "description": "The match rule criteria.\n",
                                "oneOf": [
                                  {
                                    "required": [
                                      "matchType",
                                      "matchValue"
                                    ],
                                    "title": "matchType and matchValue required"
                                  },
                                  {
                                    "required": [
                                      "matchType",
                                      "objectMatchValue"
                                    ],
                                    "title": "matchType and objectMatchValue required"
                                  }
                                ],
                                "properties": {
                                  "caseSensitive": {
                                    "description": "If `true`, the match is case sensitive.\n",
                                    "type": "boolean"
                                  },
                                  "checkIPs": {
                                    "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                    "enum": [
                                      "CONNECTING_IP",
                                      "XFF_HEADERS",
                                      "CONNECTING_IP XFF_HEADERS"
                                    ],
                                    "type": "string"
                                  },
                                  "matchOperator": {
                                    "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                    "enum": [
                                      "contains",
                                      "exists",
                                      "equals"
                                    ],
                                    "type": "string"
                                  },
                                  "matchType": {
                                    "description": "The type of match used.\n",
                                    "enum": [
                                      "hostname",
                                      "path",
                                      "extension",
                                      "query",
                                      "cookie",
                                      "deviceCharacteristics",
                                      "clientip",
                                      "continent",
                                      "countrycode",
                                      "regioncode",
                                      "protocol",
                                      "header",
                                      "method",
                                      "proxy"
                                    ],
                                    "type": "string"
                                  },
                                  "matchValue": {
                                    "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "negate": {
                                    "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                                    "type": "boolean"
                                  },
                                  "objectMatchValue": {
                                    "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                    "oneOf": [
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `simple`.\n",
                                            "enum": [
                                              "simple"
                                            ],
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                            "items": {
                                              "type": "string"
                                            },
                                            "nullable": true,
                                            "type": "array"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "title": "Simple",
                                        "type": "object"
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use this for more complex match criteria.\n",
                                        "properties": {
                                          "name": {
                                            "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                            "maxLength": 8192,
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "nameCaseSensitive": {
                                            "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                            "type": "boolean"
                                          },
                                          "nameHasWildcard": {
                                            "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                            "type": "boolean"
                                          },
                                          "options": {
                                            "additionalProperties": false,
                                            "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                            "properties": {
                                              "value": {
                                                "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                                "items": {
                                                  "type": "string"
                                                },
                                                "nullable": true,
                                                "type": "array"
                                              },
                                              "valueCaseSensitive": {
                                                "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                                "type": "boolean"
                                              },
                                              "valueEscaped": {
                                                "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                                "type": "boolean"
                                              },
                                              "valueHasWildcard": {
                                                "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                                "type": "boolean"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "type": {
                                            "description": "The array type, which is `object`.\n",
                                            "enum": [
                                              "object"
                                            ],
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "name",
                                          "type"
                                        ],
                                        "title": "Object",
                                        "type": "object"
                                      }
                                    ],
                                    "title": "Object match value",
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              },
                              "nullable": true,
                              "type": "array"
                            },
                            "name": {
                              "description": "The name of the rule.\n",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "passThroughPercent": {
                              "description": "The percentage of requests that pass through to the origin, with `100` indicating the request always passes through to the origin. For Visitor Prioritization, a value of -1 sends everyone to the waiting room.\n",
                              "maximum": 100,
                              "minimum": -1,
                              "type": "number"
                            },
                            "start": {
                              "default": 0,
                              "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "type": {
                              "description": "The type of Cloudlet the rule is for. For example, the string for API Prioritization is `apMatchRule`.\n",
                              "enum": [
                                "apMatchRule"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "passThroughPercent"
                          ],
                          "title": "API Prioritization",
                          "type": "object",
                          "x-akamai": {
                            "file-path": "schemas/match-rule-ap.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Contains match rule information for Audience Segmentation.\n",
                          "properties": {
                            "akaRuleId": {
                              "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                              "readOnly": true,
                              "type": "string"
                            },
                            "disabled": {
                              "default": false,
                              "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                              "type": "boolean"
                            },
                            "end": {
                              "default": 0,
                              "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "forwardSettings": {
                              "additionalProperties": false,
                              "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                              "properties": {
                                "originId": {
                                  "description": "The conditional origin's unique identifier.\n",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "pathAndQS": {
                                  "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                                  "maxLength": 8192,
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "useIncomingQueryString": {
                                  "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n",
                                  "type": "boolean"
                                }
                              },
                              "type": "object"
                            },
                            "id": {
                              "description": "__Read-only__ Akamai internal use only.\n",
                              "nullable": true,
                              "readOnly": true,
                              "type": "integer"
                            },
                            "location": {
                              "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                              "readOnly": true,
                              "type": "string"
                            },
                            "matchURL": {
                              "description": "The URL the Cloudlet uses to match the incoming request.\n",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "matches": {
                              "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                              "items": {
                                "additionalProperties": false,
                                "description": "The match rule criteria.\n",
                                "oneOf": [
                                  {
                                    "required": [
                                      "matchType",
                                      "matchValue"
                                    ],
                                    "title": "matchType and matchValue required"
                                  },
                                  {
                                    "required": [
                                      "matchType",
                                      "objectMatchValue"
                                    ],
                                    "title": "matchType and objectMatchValue required"
                                  }
                                ],
                                "properties": {
                                  "caseSensitive": {
                                    "description": "If `true`, the match is case sensitive.\n",
                                    "type": "boolean"
                                  },
                                  "checkIPs": {
                                    "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                    "enum": [
                                      "CONNECTING_IP",
                                      "XFF_HEADERS",
                                      "CONNECTING_IP XFF_HEADERS"
                                    ],
                                    "type": "string"
                                  },
                                  "matchOperator": {
                                    "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                    "enum": [
                                      "contains",
                                      "exists",
                                      "equals"
                                    ],
                                    "type": "string"
                                  },
                                  "matchType": {
                                    "description": "The type of match used.\n",
                                    "enum": [
                                      "header",
                                      "hostname",
                                      "path",
                                      "extension",
                                      "query",
                                      "range",
                                      "regex",
                                      "cookie",
                                      "deviceCharacteristics",
                                      "clientip",
                                      "continent",
                                      "countrycode",
                                      "regioncode",
                                      "protocol",
                                      "method",
                                      "proxy"
                                    ],
                                    "type": "string"
                                  },
                                  "matchValue": {
                                    "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "negate": {
                                    "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                                    "type": "boolean"
                                  },
                                  "objectMatchValue": {
                                    "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.\n",
                                    "oneOf": [
                                      {
                                        "additionalProperties": false,
                                        "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.\n",
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `range`.\n",
                                            "enum": [
                                              "range"
                                            ],
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "An inclusive range comprised of two numbers to match on.\n",
                                            "items": {
                                              "type": "integer"
                                            },
                                            "nullable": true,
                                            "type": "array"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "title": "Range",
                                        "type": "object"
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `simple`.\n",
                                            "enum": [
                                              "simple"
                                            ],
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                            "items": {
                                              "type": "string"
                                            },
                                            "nullable": true,
                                            "type": "array"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "title": "Simple",
                                        "type": "object"
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                        "properties": {
                                          "name": {
                                            "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                            "maxLength": 8192,
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "nameCaseSensitive": {
                                            "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                            "type": "boolean"
                                          },
                                          "nameHasWildcard": {
                                            "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                            "type": "boolean"
                                          },
                                          "options": {
                                            "additionalProperties": false,
                                            "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                            "properties": {
                                              "value": {
                                                "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                                "items": {
                                                  "type": "string"
                                                },
                                                "nullable": true,
                                                "type": "array"
                                              },
                                              "valueCaseSensitive": {
                                                "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                                "type": "boolean"
                                              },
                                              "valueEscaped": {
                                                "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                                "type": "boolean"
                                              },
                                              "valueHasWildcard": {
                                                "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                                "type": "boolean"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "type": {
                                            "description": "The array type, which is `object`.\n",
                                            "enum": [
                                              "object"
                                            ],
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "name",
                                          "type"
                                        ],
                                        "title": "Object",
                                        "type": "object"
                                      }
                                    ],
                                    "title": "Object match value",
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              },
                              "nullable": true,
                              "type": "array"
                            },
                            "name": {
                              "description": "The name of the rule.\n",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "start": {
                              "default": 0,
                              "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "type": {
                              "description": "The type of Cloudlet the rule is for. For example, the string for Audience Segmentation is `asMatchRule`.\n",
                              "enum": [
                                "asMatchRule"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [
                            "type"
                          ],
                          "title": "Audience Segmentation",
                          "type": "object",
                          "x-akamai": {
                            "file-path": "schemas/match-rule-as.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Contains match rule information for Phased Release.\n",
                          "properties": {
                            "akaRuleId": {
                              "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                              "readOnly": true,
                              "type": "string"
                            },
                            "disabled": {
                              "default": false,
                              "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                              "type": "boolean"
                            },
                            "end": {
                              "default": 0,
                              "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "forwardSettings": {
                              "additionalProperties": false,
                              "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, and `percent`.\n",
                              "properties": {
                                "originId": {
                                  "description": "The conditional origin's unique identifier.\n",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "percent": {
                                  "description": "The percentage of visitors directed to a different origin.\n",
                                  "maximum": 100,
                                  "minimum": 0,
                                  "type": "number"
                                }
                              },
                              "type": "object"
                            },
                            "id": {
                              "description": "__Read-only__ Akamai internal use only.\n",
                              "nullable": true,
                              "readOnly": true,
                              "type": "integer"
                            },
                            "location": {
                              "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                              "readOnly": true,
                              "type": "string"
                            },
                            "matchURL": {
                              "description": "The URL the Cloudlet uses to match the incoming request.\n",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "matches": {
                              "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                              "items": {
                                "additionalProperties": false,
                                "description": "The match rule criteria.\n",
                                "oneOf": [
                                  {
                                    "required": [
                                      "matchType",
                                      "matchValue"
                                    ],
                                    "title": "matchType and matchValue required"
                                  },
                                  {
                                    "required": [
                                      "matchType",
                                      "objectMatchValue"
                                    ],
                                    "title": "matchType and objectMatchValue required"
                                  }
                                ],
                                "properties": {
                                  "caseSensitive": {
                                    "description": "If `true`, the match is case sensitive.\n",
                                    "type": "boolean"
                                  },
                                  "checkIPs": {
                                    "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                    "enum": [
                                      "CONNECTING_IP",
                                      "XFF_HEADERS",
                                      "CONNECTING_IP XFF_HEADERS"
                                    ],
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "matchOperator": {
                                    "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                    "enum": [
                                      "contains",
                                      "exists",
                                      "equals"
                                    ],
                                    "type": "string"
                                  },
                                  "matchType": {
                                    "description": "The type of match used.\n",
                                    "enum": [
                                      "header",
                                      "hostname",
                                      "path",
                                      "extension",
                                      "query",
                                      "cookie",
                                      "deviceCharacteristics",
                                      "clientip",
                                      "continent",
                                      "countrycode",
                                      "regioncode",
                                      "protocol",
                                      "method",
                                      "proxy"
                                    ],
                                    "type": "string"
                                  },
                                  "matchValue": {
                                    "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "negate": {
                                    "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                                    "type": "boolean"
                                  },
                                  "objectMatchValue": {
                                    "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                    "oneOf": [
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `simple`.\n",
                                            "enum": [
                                              "simple"
                                            ],
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                            "items": {
                                              "type": "string"
                                            },
                                            "nullable": true,
                                            "type": "array"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "title": "Simple",
                                        "type": "object"
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use this for more complex match criteria.\n",
                                        "properties": {
                                          "name": {
                                            "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                            "maxLength": 8192,
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "nameCaseSensitive": {
                                            "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                            "type": "boolean"
                                          },
                                          "nameHasWildcard": {
                                            "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                            "type": "boolean"
                                          },
                                          "options": {
                                            "additionalProperties": false,
                                            "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                            "properties": {
                                              "value": {
                                                "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                                "items": {
                                                  "type": "string"
                                                },
                                                "nullable": true,
                                                "type": "array"
                                              },
                                              "valueCaseSensitive": {
                                                "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                                "type": "boolean"
                                              },
                                              "valueEscaped": {
                                                "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                                "type": "boolean"
                                              },
                                              "valueHasWildcard": {
                                                "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                                "type": "boolean"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "type": {
                                            "description": "The array type, which is `object`.\n",
                                            "enum": [
                                              "object"
                                            ],
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "name",
                                          "type"
                                        ],
                                        "title": "Object",
                                        "type": "object"
                                      }
                                    ],
                                    "title": "Object match value",
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              },
                              "nullable": true,
                              "type": "array"
                            },
                            "matchesAlways": {
                              "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n",
                              "type": "boolean"
                            },
                            "name": {
                              "description": "The name of the rule.\n",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "start": {
                              "default": 0,
                              "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "type": {
                              "description": "The type of Cloudlet the rule is for. For example, the string for Phased Release is `cdMatchRule`.\n",
                              "enum": [
                                "cdMatchRule"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [
                            "type"
                          ],
                          "title": "Phased Release",
                          "type": "object",
                          "x-akamai": {
                            "file-path": "schemas/match-rule-cd.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Contains match rule information for Edge Redirector.\n",
                          "properties": {
                            "akaRuleId": {
                              "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                              "readOnly": true,
                              "type": "string"
                            },
                            "disabled": {
                              "default": false,
                              "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                              "type": "boolean"
                            },
                            "end": {
                              "default": 0,
                              "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "id": {
                              "description": "__Read-only__ Akamai internal use only.\n",
                              "nullable": true,
                              "readOnly": true,
                              "type": "integer"
                            },
                            "location": {
                              "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                              "readOnly": true,
                              "type": "string"
                            },
                            "matchURL": {
                              "description": "The URL the Cloudlet uses to match the incoming request.\n",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "matches": {
                              "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                              "items": {
                                "additionalProperties": false,
                                "description": "The match rule criteria.\n",
                                "oneOf": [
                                  {
                                    "required": [
                                      "matchType",
                                      "matchValue"
                                    ],
                                    "title": "matchType and matchValue required"
                                  },
                                  {
                                    "required": [
                                      "matchType",
                                      "objectMatchValue"
                                    ],
                                    "title": "matchType and objectMatchValue required"
                                  }
                                ],
                                "properties": {
                                  "caseSensitive": {
                                    "description": "If `true`, the match is case sensitive.\n",
                                    "type": "boolean"
                                  },
                                  "checkIPs": {
                                    "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                    "enum": [
                                      "CONNECTING_IP",
                                      "XFF_HEADERS",
                                      "CONNECTING_IP XFF_HEADERS"
                                    ],
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "matchOperator": {
                                    "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                    "enum": [
                                      "contains",
                                      "exists",
                                      "equals"
                                    ],
                                    "type": "string"
                                  },
                                  "matchType": {
                                    "description": "The type of match used.\n",
                                    "enum": [
                                      "header",
                                      "hostname",
                                      "path",
                                      "extension",
                                      "query",
                                      "regex",
                                      "cookie",
                                      "deviceCharacteristics",
                                      "clientip",
                                      "continent",
                                      "countrycode",
                                      "regioncode",
                                      "protocol",
                                      "method",
                                      "proxy"
                                    ],
                                    "type": "string"
                                  },
                                  "matchValue": {
                                    "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "negate": {
                                    "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                                    "type": "boolean"
                                  },
                                  "objectMatchValue": {
                                    "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                    "oneOf": [
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `simple`.\n",
                                            "enum": [
                                              "simple"
                                            ],
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                            "items": {
                                              "type": "string"
                                            },
                                            "nullable": true,
                                            "type": "array"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "title": "Simple",
                                        "type": "object"
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                        "properties": {
                                          "name": {
                                            "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                            "maxLength": 8192,
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "nameCaseSensitive": {
                                            "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                            "type": "boolean"
                                          },
                                          "nameHasWildcard": {
                                            "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                            "type": "boolean"
                                          },
                                          "options": {
                                            "additionalProperties": false,
                                            "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                            "properties": {
                                              "value": {
                                                "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                                "items": {
                                                  "type": "string"
                                                },
                                                "nullable": true,
                                                "type": "array"
                                              },
                                              "valueCaseSensitive": {
                                                "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                                "type": "boolean"
                                              },
                                              "valueEscaped": {
                                                "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                                "type": "boolean"
                                              },
                                              "valueHasWildcard": {
                                                "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                                "type": "boolean"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "type": {
                                            "description": "The array type, which is `object`.\n",
                                            "enum": [
                                              "object"
                                            ],
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "name",
                                          "type"
                                        ],
                                        "title": "Object",
                                        "type": "object"
                                      }
                                    ],
                                    "title": "Object match value",
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              },
                              "nullable": true,
                              "type": "array"
                            },
                            "matchesAlways": {
                              "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n",
                              "type": "boolean"
                            },
                            "name": {
                              "description": "The name of the rule.\n",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "redirectURL": {
                              "description": "The URL Edge Redirector redirects the request to. If using `useRelativeUrl`, you can enter a path for the value. If `useRelativeUrl` is not used or set to `none`, then the `redirectUrl` should be a fully qualified URL.\n",
                              "maxLength": 8192,
                              "minLength": 1,
                              "type": "string"
                            },
                            "start": {
                              "default": 0,
                              "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "statusCode": {
                              "description": "The HTTP response redirect type status code: `301` for permanent redirect, `302` for temporary redirect, `303` for temporary using GET, `307` for temporary retain method, or `308` for permanent retain method.\n",
                              "enum": [
                                301,
                                302,
                                303,
                                307,
                                308
                              ],
                              "type": "integer"
                            },
                            "type": {
                              "description": "The type of Cloudlet the rule is for. For example, the string for Edge Redirector is `erMatchRule`.\n",
                              "enum": [
                                "erMatchRule"
                              ],
                              "type": "string"
                            },
                            "useIncomingQueryString": {
                              "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n",
                              "type": "boolean"
                            },
                            "useIncomingSchemeAndHost": {
                              "description": "If set to `true`, the Cloudlet copies both the scheme and the hostname from the incoming request to use in the redirect URL.\n",
                              "type": "boolean"
                            },
                            "useRelativeUrl": {
                              "description": "If set to `relative_url`, takes the path entered for the `redirectUrl` and sets it in the response’s `Location` header. The client browser receiving the request decides which protocol and hostname to use. If set to `copy_scheme_hostname`, it creates an absolute path by taking the protocol and hostname from the incoming request and combining them with path information entered for the `redirectUrl`. This absolute path is set in the response’s `Location` header. If you don't include `useRelativeUrl`, or if you set it to `none`, then specify the `redirectUrl` as a fully qualified URL.\n",
                              "enum": [
                                "relative_url",
                                "copy_scheme_hostname",
                                "none"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "redirectURL",
                            "statusCode"
                          ],
                          "title": "Edge Redirector",
                          "type": "object",
                          "x-akamai": {
                            "file-path": "schemas/match-rule-er.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Contains match rule information for Forward Rewrite.\n",
                          "properties": {
                            "akaRuleId": {
                              "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                              "readOnly": true,
                              "type": "string"
                            },
                            "disabled": {
                              "default": false,
                              "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                              "type": "boolean"
                            },
                            "end": {
                              "default": 0,
                              "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "forwardSettings": {
                              "additionalProperties": false,
                              "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                              "properties": {
                                "originId": {
                                  "description": "The conditional origin's unique identifier.\n",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "pathAndQS": {
                                  "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                                  "maxLength": 8192,
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "useIncomingQueryString": {
                                  "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n",
                                  "type": "boolean"
                                }
                              },
                              "type": "object"
                            },
                            "id": {
                              "description": "__Read-only__ Akamai internal use only.\n",
                              "nullable": true,
                              "readOnly": true,
                              "type": "integer"
                            },
                            "location": {
                              "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                              "readOnly": true,
                              "type": "string"
                            },
                            "matchURL": {
                              "description": "The URL the Cloudlet uses to match the incoming request.\n",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "matches": {
                              "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                              "items": {
                                "additionalProperties": false,
                                "description": "The match rule criteria.\n",
                                "oneOf": [
                                  {
                                    "required": [
                                      "matchType",
                                      "matchValue"
                                    ],
                                    "title": "matchType and matchValue required"
                                  },
                                  {
                                    "required": [
                                      "matchType",
                                      "objectMatchValue"
                                    ],
                                    "title": "matchType and objectMatchValue required"
                                  }
                                ],
                                "properties": {
                                  "caseSensitive": {
                                    "description": "If `true`, the match is case sensitive.\n",
                                    "type": "boolean"
                                  },
                                  "checkIPs": {
                                    "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                    "enum": [
                                      "CONNECTING_IP",
                                      "XFF_HEADERS",
                                      "CONNECTING_IP XFF_HEADERS"
                                    ],
                                    "type": "string"
                                  },
                                  "matchOperator": {
                                    "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                    "enum": [
                                      "contains",
                                      "exists",
                                      "equals"
                                    ],
                                    "type": "string"
                                  },
                                  "matchType": {
                                    "description": "The type of match used.\n",
                                    "enum": [
                                      "header",
                                      "hostname",
                                      "path",
                                      "extension",
                                      "query",
                                      "regex",
                                      "cookie",
                                      "deviceCharacteristics",
                                      "clientip",
                                      "continent",
                                      "countrycode",
                                      "regioncode",
                                      "protocol",
                                      "method",
                                      "proxy"
                                    ],
                                    "type": "string"
                                  },
                                  "matchValue": {
                                    "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "negate": {
                                    "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                                    "type": "boolean"
                                  },
                                  "objectMatchValue": {
                                    "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                    "oneOf": [
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `simple`.\n",
                                            "enum": [
                                              "simple"
                                            ],
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                            "items": {
                                              "type": "string"
                                            },
                                            "nullable": true,
                                            "type": "array"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "title": "Simple",
                                        "type": "object"
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                        "properties": {
                                          "name": {
                                            "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                            "maxLength": 8192,
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "nameCaseSensitive": {
                                            "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                            "type": "boolean"
                                          },
                                          "nameHasWildcard": {
                                            "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                            "type": "boolean"
                                          },
                                          "options": {
                                            "additionalProperties": false,
                                            "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                            "properties": {
                                              "value": {
                                                "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                                "items": {
                                                  "type": "string"
                                                },
                                                "nullable": true,
                                                "type": "array"
                                              },
                                              "valueCaseSensitive": {
                                                "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                                "type": "boolean"
                                              },
                                              "valueEscaped": {
                                                "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                                "type": "boolean"
                                              },
                                              "valueHasWildcard": {
                                                "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                                "type": "boolean"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "type": {
                                            "description": "The array type, which is `object`.\n",
                                            "enum": [
                                              "object"
                                            ],
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "name",
                                          "type"
                                        ],
                                        "title": "Object",
                                        "type": "object"
                                      }
                                    ],
                                    "title": "Object match value",
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              },
                              "nullable": true,
                              "type": "array"
                            },
                            "name": {
                              "description": "The name of the rule.\n",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "start": {
                              "default": 0,
                              "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "type": {
                              "description": "The type of Cloudlet the rule is for. For example, the string for Forward Rewrite is `frMatchRule`.\n",
                              "enum": [
                                "frMatchRule"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "forwardSettings"
                          ],
                          "title": "Forward Rewrite",
                          "type": "object",
                          "x-akamai": {
                            "file-path": "schemas/match-rule-fr.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Contains match rule information for Request Control.\n",
                          "properties": {
                            "akaRuleId": {
                              "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                              "readOnly": true,
                              "type": "string"
                            },
                            "allowDeny": {
                              "description": "If set to `allow`, the request is sent to origin when all conditions are true. If `deny`, the request is denied when all conditions are true. If `denybranded`, the request is denied and rerouted according to the configuration of the [Request Control behavior](https://techdocs.akamai.com/property-mgr/reference/latest-request-control).\n",
                              "enum": [
                                "allow",
                                "deny",
                                "denybranded"
                              ],
                              "type": "string"
                            },
                            "disabled": {
                              "default": false,
                              "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                              "type": "boolean"
                            },
                            "end": {
                              "default": 0,
                              "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "id": {
                              "description": "__Read-only__ Akamai internal use only.\n",
                              "nullable": true,
                              "readOnly": true,
                              "type": "integer"
                            },
                            "location": {
                              "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                              "readOnly": true,
                              "type": "string"
                            },
                            "matches": {
                              "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                              "items": {
                                "additionalProperties": false,
                                "description": "The match rule criteria.\n",
                                "oneOf": [
                                  {
                                    "required": [
                                      "matchType",
                                      "matchValue"
                                    ],
                                    "title": "matchType and matchValue required"
                                  },
                                  {
                                    "required": [
                                      "matchType",
                                      "objectMatchValue"
                                    ],
                                    "title": "matchType and objectMatchValue required"
                                  }
                                ],
                                "properties": {
                                  "caseSensitive": {
                                    "description": "If `true`, the match is case sensitive.\n",
                                    "type": "boolean"
                                  },
                                  "checkIPs": {
                                    "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                    "enum": [
                                      "CONNECTING_IP",
                                      "XFF_HEADERS",
                                      "CONNECTING_IP XFF_HEADERS"
                                    ],
                                    "type": "string"
                                  },
                                  "matchOperator": {
                                    "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                    "enum": [
                                      "contains",
                                      "exists",
                                      "equals"
                                    ],
                                    "type": "string"
                                  },
                                  "matchType": {
                                    "description": "The type of match used.\n",
                                    "enum": [
                                      "clientip",
                                      "continent",
                                      "cookie",
                                      "countrycode",
                                      "deviceCharacteristics",
                                      "extension",
                                      "header",
                                      "hostname",
                                      "method",
                                      "path",
                                      "protocol",
                                      "proxy",
                                      "query",
                                      "regioncode"
                                    ],
                                    "type": "string"
                                  },
                                  "matchValue": {
                                    "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "negate": {
                                    "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                                    "type": "boolean"
                                  },
                                  "objectMatchValue": {
                                    "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                    "oneOf": [
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `simple`.\n",
                                            "enum": [
                                              "simple"
                                            ],
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                            "items": {
                                              "type": "string"
                                            },
                                            "nullable": true,
                                            "type": "array"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "title": "Simple",
                                        "type": "object"
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                        "properties": {
                                          "name": {
                                            "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                            "maxLength": 8192,
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "nameCaseSensitive": {
                                            "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                            "type": "boolean"
                                          },
                                          "nameHasWildcard": {
                                            "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                            "type": "boolean"
                                          },
                                          "options": {
                                            "additionalProperties": false,
                                            "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                            "properties": {
                                              "value": {
                                                "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                                "items": {
                                                  "type": "string"
                                                },
                                                "nullable": true,
                                                "type": "array"
                                              },
                                              "valueCaseSensitive": {
                                                "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                                "type": "boolean"
                                              },
                                              "valueEscaped": {
                                                "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                                "type": "boolean"
                                              },
                                              "valueHasWildcard": {
                                                "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                                "type": "boolean"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "type": {
                                            "description": "The array type, which is `object`.\n",
                                            "enum": [
                                              "object"
                                            ],
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "name",
                                          "type"
                                        ],
                                        "title": "Object",
                                        "type": "object"
                                      }
                                    ],
                                    "title": "Object match value",
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              },
                              "nullable": true,
                              "type": "array"
                            },
                            "matchesAlways": {
                              "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n",
                              "type": "boolean"
                            },
                            "name": {
                              "description": "The name of the rule.\n",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "start": {
                              "default": 0,
                              "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "type": {
                              "description": "The type of Cloudlet the rule is for. For example, the string for Request Control is `igMatchRule`.\n",
                              "enum": [
                                "igMatchRule"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "allowDeny"
                          ],
                          "title": "Request Control",
                          "type": "object",
                          "x-akamai": {
                            "file-path": "schemas/match-rule-ig.yaml"
                          }
                        },
                        {
                          "type": "object",
                          "description": "Contains match rule information for Visitor Prioritization.\n",
                          "title": "Visitor Prioritization",
                          "additionalProperties": false,
                          "required": [
                            "type",
                            "passThroughPercent"
                          ],
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "Akamai internal use only.\n",
                              "nullable": true,
                              "readOnly": true
                            },
                            "location": {
                              "type": "string",
                              "description": "The navigable endpoint used for the object referred to in the operation.\n",
                              "readOnly": true
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the rule.\n",
                              "nullable": true,
                              "maxLength": 8192
                            },
                            "type": {
                              "type": "string",
                              "description": "The type of Cloudlet the rule is for. For example, the string for Visitor Prioritization is `vpMatchRule`.\n",
                              "enum": [
                                "vpMatchRule"
                              ]
                            },
                            "akaRuleId": {
                              "type": "string",
                              "description": "The rule's unique identifier within the policy version.\n",
                              "readOnly": true
                            },
                            "start": {
                              "type": "integer",
                              "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                              "default": 0,
                              "minimum": 0
                            },
                            "end": {
                              "type": "integer",
                              "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                              "default": 0,
                              "minimum": 0
                            },
                            "matches": {
                              "type": "array",
                              "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                              "nullable": true,
                              "items": {
                                "type": "object",
                                "description": "The match rule criteria.\n",
                                "additionalProperties": false,
                                "oneOf": [
                                  {
                                    "required": [
                                      "matchType",
                                      "matchValue"
                                    ],
                                    "title": "matchType and matchValue required"
                                  },
                                  {
                                    "required": [
                                      "matchType",
                                      "objectMatchValue"
                                    ],
                                    "title": "matchType and objectMatchValue required"
                                  }
                                ],
                                "properties": {
                                  "caseSensitive": {
                                    "type": "boolean",
                                    "description": "If `true`, the match is case sensitive.\n"
                                  },
                                  "matchValue": {
                                    "type": "string",
                                    "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                    "minLength": 1,
                                    "maxLength": 8192
                                  },
                                  "negate": {
                                    "type": "boolean",
                                    "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                                  },
                                  "matchOperator": {
                                    "type": "string",
                                    "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                    "enum": [
                                      "contains",
                                      "exists",
                                      "equals"
                                    ]
                                  },
                                  "matchType": {
                                    "type": "string",
                                    "description": "The type of match used.\n",
                                    "enum": [
                                      "hostname",
                                      "path",
                                      "extension",
                                      "query",
                                      "cookie",
                                      "deviceCharacteristics",
                                      "clientip",
                                      "continent",
                                      "countrycode",
                                      "regioncode",
                                      "protocol",
                                      "header",
                                      "method",
                                      "proxy"
                                    ]
                                  },
                                  "checkIPs": {
                                    "type": "string",
                                    "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                    "enum": [
                                      "CONNECTING_IP",
                                      "XFF_HEADERS",
                                      "CONNECTING_IP XFF_HEADERS"
                                    ]
                                  },
                                  "objectMatchValue": {
                                    "type": "object",
                                    "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                    "title": "Object match value",
                                    "oneOf": [
                                      {
                                        "type": "object",
                                        "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                        "title": "Simple",
                                        "additionalProperties": false,
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "description": "The object type, which is `simple`.\n",
                                            "enum": [
                                              "simple"
                                            ]
                                          },
                                          "value": {
                                            "type": "array",
                                            "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                            "nullable": true,
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                        "title": "Object",
                                        "additionalProperties": false,
                                        "required": [
                                          "name",
                                          "type"
                                        ],
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                            "minLength": 1,
                                            "maxLength": 8192
                                          },
                                          "type": {
                                            "type": "string",
                                            "description": "The array type, which is `object`.\n",
                                            "enum": [
                                              "object"
                                            ]
                                          },
                                          "options": {
                                            "type": "object",
                                            "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                            "additionalProperties": false,
                                            "properties": {
                                              "value": {
                                                "type": "array",
                                                "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                                "nullable": true,
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "valueHasWildcard": {
                                                "type": "boolean",
                                                "description": "Set to `true` if the entries for `value` includes wildcards.\n"
                                              },
                                              "valueCaseSensitive": {
                                                "type": "boolean",
                                                "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n"
                                              },
                                              "valueEscaped": {
                                                "type": "boolean",
                                                "description": "Set to `true` if the entries for `value` includes escaped characters.\n"
                                              }
                                            }
                                          },
                                          "nameCaseSensitive": {
                                            "type": "boolean",
                                            "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                          },
                                          "nameHasWildcard": {
                                            "type": "boolean",
                                            "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "disabled": {
                              "type": "boolean",
                              "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                              "default": false
                            },
                            "passThroughPercent": {
                              "type": "number",
                              "description": "The range `0.000: 99.000` specifies the percentage of requests that pass through to the origin. The value of `100` means the request always passes through to the origin. For Visitor Prioritization, a value of `-1` means send everyone to the waiting room.\n",
                              "minimum": -1,
                              "maximum": 100
                            },
                            "matchURL": {
                              "type": "string",
                              "description": "The URL the Cloudlet uses to match the incoming request.\n",
                              "nullable": true,
                              "maxLength": 8192
                            },
                            "useIncomingQueryString": {
                              "type": "boolean",
                              "description": "If set to `true`, the Cloudlet includes the request's query string in the rewritten or forwarded URL.\n"
                            }
                          }
                        }
                      ]
                    },
                    "type": "array",
                    "x-akamai": {
                      "file-path": "schemas/match-rules.yaml"
                    }
                  }
                },
                "required": [
                  "description"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/put-policy-version-request.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns details of a policy version.\n",
            "content": {
              "application/json": {
                "example": {
                  "revisionId": 11870,
                  "policyId": 1001,
                  "version": 1,
                  "description": "v1 for Q1 sales",
                  "createdBy": "tyamada",
                  "createDate": 1427133784903,
                  "lastModifiedBy": "jkowalski",
                  "lastModifiedDate": 1427133805767,
                  "rulesLocked": false,
                  "deleted": true,
                  "activations": [],
                  "matchRules": []
                },
                "schema": {
                  "type": "object",
                  "description": "Policy version details.\n",
                  "additionalProperties": false,
                  "required": [
                    "activations",
                    "createdBy",
                    "createDate",
                    "deleted",
                    "description",
                    "lastModifiedBy",
                    "lastModifiedDate",
                    "location",
                    "matchRuleFormat",
                    "matchRules",
                    "policyId",
                    "revisionId",
                    "rulesLocked",
                    "version"
                  ],
                  "properties": {
                    "description": {
                      "type": "string",
                      "description": "Description of the policy version.\n"
                    },
                    "version": {
                      "type": "integer",
                      "description": "Version of the policy.\n"
                    },
                    "activations": {
                      "type": "array",
                      "description": "List of activations related to the policy version.\n",
                      "items": {
                        "additionalProperties": false,
                        "description": "Returns details of a policy activation.\n",
                        "properties": {
                          "apiVersion": {
                            "description": "The specific version of this API.\n",
                            "type": "string"
                          },
                          "network": {
                            "description": "The network, either `STAGING`, `PRODUCTION`, or `prod` as shorthand, on which a load balancing configuration for Application Load Balancer has been activated. Values are case-insensitive in requests.\n",
                            "enum": [
                              "prod",
                              "staging"
                            ],
                            "type": "string"
                          },
                          "policyInfo": {
                            "type": "object",
                            "description": "Returns details of a policy associated with policy activation.\n",
                            "additionalProperties": false,
                            "required": [
                              "policyId",
                              "name",
                              "version",
                              "status",
                              "statusDetail",
                              "activatedBy",
                              "activationDate"
                            ],
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of the policy.\n"
                              },
                              "version": {
                                "type": "integer",
                                "description": "Version of the policy.\n"
                              },
                              "policyId": {
                                "type": "integer",
                                "description": "ID of the policy.\n"
                              },
                              "status": {
                                "type": "string",
                                "description": "Value representing activation status.\n",
                                "enum": [
                                  "INACTIVE",
                                  "PENDING",
                                  "ACTIVE",
                                  "FAILED",
                                  "DEACTIVATED"
                                ]
                              },
                              "statusDetail": {
                                "type": "string",
                                "description": "Details of the activation status.\n"
                              },
                              "activatedBy": {
                                "type": "string",
                                "description": "User name who issued the activation.\n",
                                "nullable": true
                              },
                              "activationDate": {
                                "type": "integer",
                                "description": "Date of the activation in milliseconds.\n"
                              }
                            }
                          },
                          "propertyInfo": {
                            "type": "object",
                            "description": "Returns details of a property associated with policy activation.\n",
                            "additionalProperties": false,
                            "required": [
                              "name",
                              "version",
                              "groupId",
                              "status",
                              "activatedBy",
                              "activationDate",
                              "id"
                            ],
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "ID of the property.\n"
                              },
                              "name": {
                                "type": "string",
                                "description": "Name of the property.\n"
                              },
                              "version": {
                                "type": "integer",
                                "description": "Version of the property.\n"
                              },
                              "groupId": {
                                "type": "integer",
                                "description": "Identifies the group where the property is placed.\n"
                              },
                              "status": {
                                "type": "string",
                                "description": "Value representing activation status.\n",
                                "enum": [
                                  "INACTIVE",
                                  "PENDING",
                                  "ACTIVE",
                                  "FAILED",
                                  "DEACTIVATED"
                                ]
                              },
                              "activatedBy": {
                                "type": "string",
                                "description": "User name who issued the activation.\n",
                                "nullable": true
                              },
                              "activationDate": {
                                "type": "integer",
                                "description": "Date of the activation in milliseconds.\n"
                              }
                            }
                          },
                          "serviceVersion": {
                            "description": "__Deprecated__ The build of the software running on the server. The value can be `null`.\n",
                            "nullable": true,
                            "type": "string",
                            "x-akamai": {
                              "status": "DEPRECATED"
                            }
                          }
                        },
                        "required": [
                          "network",
                          "policyInfo",
                          "propertyInfo"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/policy-activation.yaml"
                        }
                      }
                    },
                    "createDate": {
                      "type": "integer",
                      "description": "Date of the policy version creation in milliseconds.\n"
                    },
                    "createdBy": {
                      "type": "string",
                      "description": "User name who created the policy version.\n"
                    },
                    "deleted": {
                      "type": "boolean",
                      "description": "Flag determining whether the policy version is deleted or not.\n"
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "User name who recently modified the policy version.\n"
                    },
                    "lastModifiedDate": {
                      "type": "integer",
                      "description": "Date of the recent policy version modification in milliseconds.\n"
                    },
                    "location": {
                      "type": "string",
                      "description": "The navigable endpoint used for the object referred to in the operation.\n"
                    },
                    "matchRuleFormat": {
                      "type": "string",
                      "description": "The version of the `matchRules` format.\n"
                    },
                    "matchRules": {
                      "description": "A list of Cloudlet-specific match rules for this policy.\n",
                      "items": {
                        "description": "Contains information about match rules.\n",
                        "oneOf": [
                          {
                            "type": "object",
                            "description": "Contains match rule information for Application Load Balancer.\n",
                            "title": "Application Load Balancer",
                            "additionalProperties": false,
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "Akamai internal use only.\n",
                                "nullable": true,
                                "readOnly": true
                              },
                              "location": {
                                "type": "string",
                                "description": "The navigable endpoint used for the object referred to in the operation.\n",
                                "readOnly": true
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the rule.\n",
                                "nullable": true,
                                "maxLength": 8192
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of Cloudlet the rule is for. For example, the string for Application Load Balancer is `albMatchRule`.\n",
                                "enum": [
                                  "albMatchRule"
                                ]
                              },
                              "akaRuleId": {
                                "type": "string",
                                "description": "The rule's unique identifier within the policy version.\n",
                                "readOnly": true
                              },
                              "disabled": {
                                "type": "boolean",
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                                "default": false
                              },
                              "start": {
                                "type": "integer",
                                "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                                "default": 0,
                                "minimum": 0
                              },
                              "end": {
                                "type": "integer",
                                "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                                "default": 0,
                                "minimum": 0
                              },
                              "matchURL": {
                                "type": "string",
                                "description": "The URL the Cloudlet uses to match the incoming request.\n",
                                "nullable": true,
                                "maxLength": 8192
                              },
                              "matches": {
                                "type": "array",
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                                "nullable": true,
                                "items": {
                                  "type": "object",
                                  "description": "The match rule criteria.\n",
                                  "additionalProperties": false,
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ],
                                      "title": "matchType and matchValue required"
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ],
                                      "title": "matchType and objectMatchValue required"
                                    }
                                  ],
                                  "properties": {
                                    "caseSensitive": {
                                      "type": "boolean",
                                      "description": "If `true`, the match is case sensitive.\n"
                                    },
                                    "checkIPs": {
                                      "type": "string",
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                      "nullable": true,
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "type": "string",
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "type": "string",
                                      "description": "The type of match used.\n",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "regex",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "matchValue": {
                                      "type": "string",
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                      "minLength": 1,
                                      "maxLength": 8192
                                    },
                                    "negate": {
                                      "type": "boolean",
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                                    },
                                    "objectMatchValue": {
                                      "type": "object",
                                      "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                      "title": "Object match value",
                                      "oneOf": [
                                        {
                                          "type": "object",
                                          "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                          "title": "Simple",
                                          "additionalProperties": false,
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "description": "The object type, which is `simple`.\n",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "type": "array",
                                              "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                              "nullable": true,
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "description": "Use this for more complex match criteria.\n",
                                          "title": "Object",
                                          "additionalProperties": false,
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                              "minLength": 1,
                                              "maxLength": 8192
                                            },
                                            "type": {
                                              "type": "string",
                                              "description": "The array type, which is `object`.\n",
                                              "enum": [
                                                "object"
                                              ]
                                            },
                                            "options": {
                                              "type": "object",
                                              "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                              "additionalProperties": false,
                                              "properties": {
                                                "value": {
                                                  "type": "array",
                                                  "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                                  "nullable": true,
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n"
                                                },
                                                "valueEscaped": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for `value` includes escaped characters.\n"
                                                },
                                                "valueHasWildcard": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for `value` includes wildcards.\n"
                                                }
                                              }
                                            },
                                            "nameCaseSensitive": {
                                              "type": "boolean",
                                              "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                            },
                                            "nameHasWildcard": {
                                              "type": "boolean",
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              },
                              "matchesAlways": {
                                "type": "boolean",
                                "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n"
                              },
                              "forwardSettings": {
                                "type": "object",
                                "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                                "additionalProperties": false,
                                "properties": {
                                  "pathAndQS": {
                                    "type": "string",
                                    "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                                    "minLength": 1,
                                    "maxLength": 8192
                                  },
                                  "useIncomingQueryString": {
                                    "type": "boolean",
                                    "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n"
                                  },
                                  "originId": {
                                    "type": "string",
                                    "description": "The conditional origin's unique identifier.\n",
                                    "nullable": true,
                                    "maxLength": 8192
                                  }
                                }
                              }
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Contains match rule information for API Prioritization.\n",
                            "properties": {
                              "akaRuleId": {
                                "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                                "readOnly": true,
                                "type": "string"
                              },
                              "disabled": {
                                "default": false,
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                                "type": "boolean"
                              },
                              "end": {
                                "default": 0,
                                "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "id": {
                                "description": "__Read-only__ Akamai internal use only.\n",
                                "nullable": true,
                                "readOnly": true,
                                "type": "integer"
                              },
                              "location": {
                                "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                                "readOnly": true,
                                "type": "string"
                              },
                              "matchURL": {
                                "description": "The URL the Cloudlet uses to match the incoming request.\n",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "matches": {
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.\n",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ],
                                      "title": "matchType and matchValue required"
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ],
                                      "title": "matchType and objectMatchValue required"
                                    }
                                  ],
                                  "properties": {
                                    "caseSensitive": {
                                      "description": "If `true`, the match is case sensitive.\n",
                                      "type": "boolean"
                                    },
                                    "checkIPs": {
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ],
                                      "type": "string"
                                    },
                                    "matchOperator": {
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ],
                                      "type": "string"
                                    },
                                    "matchType": {
                                      "description": "The type of match used.\n",
                                      "enum": [
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "header",
                                        "method",
                                        "proxy"
                                      ],
                                      "type": "string"
                                    },
                                    "matchValue": {
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "negate": {
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                                      "type": "boolean"
                                    },
                                    "objectMatchValue": {
                                      "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                      "oneOf": [
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `simple`.\n",
                                              "enum": [
                                                "simple"
                                              ],
                                              "type": "string"
                                            },
                                            "value": {
                                              "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                              "items": {
                                                "type": "string"
                                              },
                                              "nullable": true,
                                              "type": "array"
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "title": "Simple",
                                          "type": "object"
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use this for more complex match criteria.\n",
                                          "properties": {
                                            "name": {
                                              "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                              "maxLength": 8192,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "nameCaseSensitive": {
                                              "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                              "type": "boolean"
                                            },
                                            "nameHasWildcard": {
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                              "type": "boolean"
                                            },
                                            "options": {
                                              "additionalProperties": false,
                                              "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                              "properties": {
                                                "value": {
                                                  "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "nullable": true,
                                                  "type": "array"
                                                },
                                                "valueCaseSensitive": {
                                                  "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                                  "type": "boolean"
                                                },
                                                "valueEscaped": {
                                                  "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                                  "type": "boolean"
                                                },
                                                "valueHasWildcard": {
                                                  "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                                  "type": "boolean"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "type": {
                                              "description": "The array type, which is `object`.\n",
                                              "enum": [
                                                "object"
                                              ],
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "title": "Object",
                                          "type": "object"
                                        }
                                      ],
                                      "title": "Object match value",
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                },
                                "nullable": true,
                                "type": "array"
                              },
                              "name": {
                                "description": "The name of the rule.\n",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "passThroughPercent": {
                                "description": "The percentage of requests that pass through to the origin, with `100` indicating the request always passes through to the origin. For Visitor Prioritization, a value of -1 sends everyone to the waiting room.\n",
                                "maximum": 100,
                                "minimum": -1,
                                "type": "number"
                              },
                              "start": {
                                "default": 0,
                                "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "type": {
                                "description": "The type of Cloudlet the rule is for. For example, the string for API Prioritization is `apMatchRule`.\n",
                                "enum": [
                                  "apMatchRule"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "passThroughPercent"
                            ],
                            "title": "API Prioritization",
                            "type": "object",
                            "x-akamai": {
                              "file-path": "schemas/match-rule-ap.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Contains match rule information for Audience Segmentation.\n",
                            "properties": {
                              "akaRuleId": {
                                "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                                "readOnly": true,
                                "type": "string"
                              },
                              "disabled": {
                                "default": false,
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                                "type": "boolean"
                              },
                              "end": {
                                "default": 0,
                                "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "forwardSettings": {
                                "additionalProperties": false,
                                "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                                "properties": {
                                  "originId": {
                                    "description": "The conditional origin's unique identifier.\n",
                                    "maxLength": 8192,
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "pathAndQS": {
                                    "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "useIncomingQueryString": {
                                    "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n",
                                    "type": "boolean"
                                  }
                                },
                                "type": "object"
                              },
                              "id": {
                                "description": "__Read-only__ Akamai internal use only.\n",
                                "nullable": true,
                                "readOnly": true,
                                "type": "integer"
                              },
                              "location": {
                                "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                                "readOnly": true,
                                "type": "string"
                              },
                              "matchURL": {
                                "description": "The URL the Cloudlet uses to match the incoming request.\n",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "matches": {
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.\n",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ],
                                      "title": "matchType and matchValue required"
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ],
                                      "title": "matchType and objectMatchValue required"
                                    }
                                  ],
                                  "properties": {
                                    "caseSensitive": {
                                      "description": "If `true`, the match is case sensitive.\n",
                                      "type": "boolean"
                                    },
                                    "checkIPs": {
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ],
                                      "type": "string"
                                    },
                                    "matchOperator": {
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ],
                                      "type": "string"
                                    },
                                    "matchType": {
                                      "description": "The type of match used.\n",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "range",
                                        "regex",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ],
                                      "type": "string"
                                    },
                                    "matchValue": {
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "negate": {
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                                      "type": "boolean"
                                    },
                                    "objectMatchValue": {
                                      "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.\n",
                                      "oneOf": [
                                        {
                                          "additionalProperties": false,
                                          "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.\n",
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `range`.\n",
                                              "enum": [
                                                "range"
                                              ],
                                              "type": "string"
                                            },
                                            "value": {
                                              "description": "An inclusive range comprised of two numbers to match on.\n",
                                              "items": {
                                                "type": "integer"
                                              },
                                              "nullable": true,
                                              "type": "array"
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "title": "Range",
                                          "type": "object"
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `simple`.\n",
                                              "enum": [
                                                "simple"
                                              ],
                                              "type": "string"
                                            },
                                            "value": {
                                              "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                              "items": {
                                                "type": "string"
                                              },
                                              "nullable": true,
                                              "type": "array"
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "title": "Simple",
                                          "type": "object"
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                          "properties": {
                                            "name": {
                                              "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                              "maxLength": 8192,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "nameCaseSensitive": {
                                              "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                              "type": "boolean"
                                            },
                                            "nameHasWildcard": {
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                              "type": "boolean"
                                            },
                                            "options": {
                                              "additionalProperties": false,
                                              "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                              "properties": {
                                                "value": {
                                                  "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "nullable": true,
                                                  "type": "array"
                                                },
                                                "valueCaseSensitive": {
                                                  "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                                  "type": "boolean"
                                                },
                                                "valueEscaped": {
                                                  "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                                  "type": "boolean"
                                                },
                                                "valueHasWildcard": {
                                                  "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                                  "type": "boolean"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "type": {
                                              "description": "The array type, which is `object`.\n",
                                              "enum": [
                                                "object"
                                              ],
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "title": "Object",
                                          "type": "object"
                                        }
                                      ],
                                      "title": "Object match value",
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                },
                                "nullable": true,
                                "type": "array"
                              },
                              "name": {
                                "description": "The name of the rule.\n",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "start": {
                                "default": 0,
                                "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "type": {
                                "description": "The type of Cloudlet the rule is for. For example, the string for Audience Segmentation is `asMatchRule`.\n",
                                "enum": [
                                  "asMatchRule"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "title": "Audience Segmentation",
                            "type": "object",
                            "x-akamai": {
                              "file-path": "schemas/match-rule-as.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Contains match rule information for Phased Release.\n",
                            "properties": {
                              "akaRuleId": {
                                "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                                "readOnly": true,
                                "type": "string"
                              },
                              "disabled": {
                                "default": false,
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                                "type": "boolean"
                              },
                              "end": {
                                "default": 0,
                                "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "forwardSettings": {
                                "additionalProperties": false,
                                "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, and `percent`.\n",
                                "properties": {
                                  "originId": {
                                    "description": "The conditional origin's unique identifier.\n",
                                    "maxLength": 8192,
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "percent": {
                                    "description": "The percentage of visitors directed to a different origin.\n",
                                    "maximum": 100,
                                    "minimum": 0,
                                    "type": "number"
                                  }
                                },
                                "type": "object"
                              },
                              "id": {
                                "description": "__Read-only__ Akamai internal use only.\n",
                                "nullable": true,
                                "readOnly": true,
                                "type": "integer"
                              },
                              "location": {
                                "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                                "readOnly": true,
                                "type": "string"
                              },
                              "matchURL": {
                                "description": "The URL the Cloudlet uses to match the incoming request.\n",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "matches": {
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.\n",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ],
                                      "title": "matchType and matchValue required"
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ],
                                      "title": "matchType and objectMatchValue required"
                                    }
                                  ],
                                  "properties": {
                                    "caseSensitive": {
                                      "description": "If `true`, the match is case sensitive.\n",
                                      "type": "boolean"
                                    },
                                    "checkIPs": {
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ],
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "matchOperator": {
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ],
                                      "type": "string"
                                    },
                                    "matchType": {
                                      "description": "The type of match used.\n",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ],
                                      "type": "string"
                                    },
                                    "matchValue": {
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "negate": {
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                                      "type": "boolean"
                                    },
                                    "objectMatchValue": {
                                      "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                      "oneOf": [
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `simple`.\n",
                                              "enum": [
                                                "simple"
                                              ],
                                              "type": "string"
                                            },
                                            "value": {
                                              "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                              "items": {
                                                "type": "string"
                                              },
                                              "nullable": true,
                                              "type": "array"
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "title": "Simple",
                                          "type": "object"
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use this for more complex match criteria.\n",
                                          "properties": {
                                            "name": {
                                              "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                              "maxLength": 8192,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "nameCaseSensitive": {
                                              "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                              "type": "boolean"
                                            },
                                            "nameHasWildcard": {
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                              "type": "boolean"
                                            },
                                            "options": {
                                              "additionalProperties": false,
                                              "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                              "properties": {
                                                "value": {
                                                  "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "nullable": true,
                                                  "type": "array"
                                                },
                                                "valueCaseSensitive": {
                                                  "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                                  "type": "boolean"
                                                },
                                                "valueEscaped": {
                                                  "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                                  "type": "boolean"
                                                },
                                                "valueHasWildcard": {
                                                  "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                                  "type": "boolean"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "type": {
                                              "description": "The array type, which is `object`.\n",
                                              "enum": [
                                                "object"
                                              ],
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "title": "Object",
                                          "type": "object"
                                        }
                                      ],
                                      "title": "Object match value",
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                },
                                "nullable": true,
                                "type": "array"
                              },
                              "matchesAlways": {
                                "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "The name of the rule.\n",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "start": {
                                "default": 0,
                                "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "type": {
                                "description": "The type of Cloudlet the rule is for. For example, the string for Phased Release is `cdMatchRule`.\n",
                                "enum": [
                                  "cdMatchRule"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "title": "Phased Release",
                            "type": "object",
                            "x-akamai": {
                              "file-path": "schemas/match-rule-cd.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Contains match rule information for Edge Redirector.\n",
                            "properties": {
                              "akaRuleId": {
                                "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                                "readOnly": true,
                                "type": "string"
                              },
                              "disabled": {
                                "default": false,
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                                "type": "boolean"
                              },
                              "end": {
                                "default": 0,
                                "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "id": {
                                "description": "__Read-only__ Akamai internal use only.\n",
                                "nullable": true,
                                "readOnly": true,
                                "type": "integer"
                              },
                              "location": {
                                "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                                "readOnly": true,
                                "type": "string"
                              },
                              "matchURL": {
                                "description": "The URL the Cloudlet uses to match the incoming request.\n",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "matches": {
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.\n",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ],
                                      "title": "matchType and matchValue required"
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ],
                                      "title": "matchType and objectMatchValue required"
                                    }
                                  ],
                                  "properties": {
                                    "caseSensitive": {
                                      "description": "If `true`, the match is case sensitive.\n",
                                      "type": "boolean"
                                    },
                                    "checkIPs": {
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ],
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "matchOperator": {
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ],
                                      "type": "string"
                                    },
                                    "matchType": {
                                      "description": "The type of match used.\n",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "regex",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ],
                                      "type": "string"
                                    },
                                    "matchValue": {
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "negate": {
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                                      "type": "boolean"
                                    },
                                    "objectMatchValue": {
                                      "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                      "oneOf": [
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `simple`.\n",
                                              "enum": [
                                                "simple"
                                              ],
                                              "type": "string"
                                            },
                                            "value": {
                                              "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                              "items": {
                                                "type": "string"
                                              },
                                              "nullable": true,
                                              "type": "array"
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "title": "Simple",
                                          "type": "object"
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                          "properties": {
                                            "name": {
                                              "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                              "maxLength": 8192,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "nameCaseSensitive": {
                                              "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                              "type": "boolean"
                                            },
                                            "nameHasWildcard": {
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                              "type": "boolean"
                                            },
                                            "options": {
                                              "additionalProperties": false,
                                              "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                              "properties": {
                                                "value": {
                                                  "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "nullable": true,
                                                  "type": "array"
                                                },
                                                "valueCaseSensitive": {
                                                  "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                                  "type": "boolean"
                                                },
                                                "valueEscaped": {
                                                  "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                                  "type": "boolean"
                                                },
                                                "valueHasWildcard": {
                                                  "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                                  "type": "boolean"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "type": {
                                              "description": "The array type, which is `object`.\n",
                                              "enum": [
                                                "object"
                                              ],
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "title": "Object",
                                          "type": "object"
                                        }
                                      ],
                                      "title": "Object match value",
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                },
                                "nullable": true,
                                "type": "array"
                              },
                              "matchesAlways": {
                                "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "The name of the rule.\n",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "redirectURL": {
                                "description": "The URL Edge Redirector redirects the request to. If using `useRelativeUrl`, you can enter a path for the value. If `useRelativeUrl` is not used or set to `none`, then the `redirectUrl` should be a fully qualified URL.\n",
                                "maxLength": 8192,
                                "minLength": 1,
                                "type": "string"
                              },
                              "start": {
                                "default": 0,
                                "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "statusCode": {
                                "description": "The HTTP response redirect type status code: `301` for permanent redirect, `302` for temporary redirect, `303` for temporary using GET, `307` for temporary retain method, or `308` for permanent retain method.\n",
                                "enum": [
                                  301,
                                  302,
                                  303,
                                  307,
                                  308
                                ],
                                "type": "integer"
                              },
                              "type": {
                                "description": "The type of Cloudlet the rule is for. For example, the string for Edge Redirector is `erMatchRule`.\n",
                                "enum": [
                                  "erMatchRule"
                                ],
                                "type": "string"
                              },
                              "useIncomingQueryString": {
                                "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n",
                                "type": "boolean"
                              },
                              "useIncomingSchemeAndHost": {
                                "description": "If set to `true`, the Cloudlet copies both the scheme and the hostname from the incoming request to use in the redirect URL.\n",
                                "type": "boolean"
                              },
                              "useRelativeUrl": {
                                "description": "If set to `relative_url`, takes the path entered for the `redirectUrl` and sets it in the response’s `Location` header. The client browser receiving the request decides which protocol and hostname to use. If set to `copy_scheme_hostname`, it creates an absolute path by taking the protocol and hostname from the incoming request and combining them with path information entered for the `redirectUrl`. This absolute path is set in the response’s `Location` header. If you don't include `useRelativeUrl`, or if you set it to `none`, then specify the `redirectUrl` as a fully qualified URL.\n",
                                "enum": [
                                  "relative_url",
                                  "copy_scheme_hostname",
                                  "none"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "redirectURL",
                              "statusCode"
                            ],
                            "title": "Edge Redirector",
                            "type": "object",
                            "x-akamai": {
                              "file-path": "schemas/match-rule-er.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Contains match rule information for Forward Rewrite.\n",
                            "properties": {
                              "akaRuleId": {
                                "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                                "readOnly": true,
                                "type": "string"
                              },
                              "disabled": {
                                "default": false,
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                                "type": "boolean"
                              },
                              "end": {
                                "default": 0,
                                "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "forwardSettings": {
                                "additionalProperties": false,
                                "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                                "properties": {
                                  "originId": {
                                    "description": "The conditional origin's unique identifier.\n",
                                    "maxLength": 8192,
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "pathAndQS": {
                                    "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "useIncomingQueryString": {
                                    "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n",
                                    "type": "boolean"
                                  }
                                },
                                "type": "object"
                              },
                              "id": {
                                "description": "__Read-only__ Akamai internal use only.\n",
                                "nullable": true,
                                "readOnly": true,
                                "type": "integer"
                              },
                              "location": {
                                "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                                "readOnly": true,
                                "type": "string"
                              },
                              "matchURL": {
                                "description": "The URL the Cloudlet uses to match the incoming request.\n",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "matches": {
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.\n",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ],
                                      "title": "matchType and matchValue required"
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ],
                                      "title": "matchType and objectMatchValue required"
                                    }
                                  ],
                                  "properties": {
                                    "caseSensitive": {
                                      "description": "If `true`, the match is case sensitive.\n",
                                      "type": "boolean"
                                    },
                                    "checkIPs": {
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ],
                                      "type": "string"
                                    },
                                    "matchOperator": {
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ],
                                      "type": "string"
                                    },
                                    "matchType": {
                                      "description": "The type of match used.\n",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "regex",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ],
                                      "type": "string"
                                    },
                                    "matchValue": {
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "negate": {
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                                      "type": "boolean"
                                    },
                                    "objectMatchValue": {
                                      "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                      "oneOf": [
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `simple`.\n",
                                              "enum": [
                                                "simple"
                                              ],
                                              "type": "string"
                                            },
                                            "value": {
                                              "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                              "items": {
                                                "type": "string"
                                              },
                                              "nullable": true,
                                              "type": "array"
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "title": "Simple",
                                          "type": "object"
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                          "properties": {
                                            "name": {
                                              "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                              "maxLength": 8192,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "nameCaseSensitive": {
                                              "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                              "type": "boolean"
                                            },
                                            "nameHasWildcard": {
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                              "type": "boolean"
                                            },
                                            "options": {
                                              "additionalProperties": false,
                                              "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                              "properties": {
                                                "value": {
                                                  "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "nullable": true,
                                                  "type": "array"
                                                },
                                                "valueCaseSensitive": {
                                                  "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                                  "type": "boolean"
                                                },
                                                "valueEscaped": {
                                                  "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                                  "type": "boolean"
                                                },
                                                "valueHasWildcard": {
                                                  "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                                  "type": "boolean"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "type": {
                                              "description": "The array type, which is `object`.\n",
                                              "enum": [
                                                "object"
                                              ],
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "title": "Object",
                                          "type": "object"
                                        }
                                      ],
                                      "title": "Object match value",
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                },
                                "nullable": true,
                                "type": "array"
                              },
                              "name": {
                                "description": "The name of the rule.\n",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "start": {
                                "default": 0,
                                "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "type": {
                                "description": "The type of Cloudlet the rule is for. For example, the string for Forward Rewrite is `frMatchRule`.\n",
                                "enum": [
                                  "frMatchRule"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "forwardSettings"
                            ],
                            "title": "Forward Rewrite",
                            "type": "object",
                            "x-akamai": {
                              "file-path": "schemas/match-rule-fr.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Contains match rule information for Request Control.\n",
                            "properties": {
                              "akaRuleId": {
                                "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                                "readOnly": true,
                                "type": "string"
                              },
                              "allowDeny": {
                                "description": "If set to `allow`, the request is sent to origin when all conditions are true. If `deny`, the request is denied when all conditions are true. If `denybranded`, the request is denied and rerouted according to the configuration of the [Request Control behavior](https://techdocs.akamai.com/property-mgr/reference/latest-request-control).\n",
                                "enum": [
                                  "allow",
                                  "deny",
                                  "denybranded"
                                ],
                                "type": "string"
                              },
                              "disabled": {
                                "default": false,
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                                "type": "boolean"
                              },
                              "end": {
                                "default": 0,
                                "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "id": {
                                "description": "__Read-only__ Akamai internal use only.\n",
                                "nullable": true,
                                "readOnly": true,
                                "type": "integer"
                              },
                              "location": {
                                "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                                "readOnly": true,
                                "type": "string"
                              },
                              "matches": {
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.\n",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ],
                                      "title": "matchType and matchValue required"
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ],
                                      "title": "matchType and objectMatchValue required"
                                    }
                                  ],
                                  "properties": {
                                    "caseSensitive": {
                                      "description": "If `true`, the match is case sensitive.\n",
                                      "type": "boolean"
                                    },
                                    "checkIPs": {
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ],
                                      "type": "string"
                                    },
                                    "matchOperator": {
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ],
                                      "type": "string"
                                    },
                                    "matchType": {
                                      "description": "The type of match used.\n",
                                      "enum": [
                                        "clientip",
                                        "continent",
                                        "cookie",
                                        "countrycode",
                                        "deviceCharacteristics",
                                        "extension",
                                        "header",
                                        "hostname",
                                        "method",
                                        "path",
                                        "protocol",
                                        "proxy",
                                        "query",
                                        "regioncode"
                                      ],
                                      "type": "string"
                                    },
                                    "matchValue": {
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "negate": {
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                                      "type": "boolean"
                                    },
                                    "objectMatchValue": {
                                      "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                      "oneOf": [
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `simple`.\n",
                                              "enum": [
                                                "simple"
                                              ],
                                              "type": "string"
                                            },
                                            "value": {
                                              "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                              "items": {
                                                "type": "string"
                                              },
                                              "nullable": true,
                                              "type": "array"
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "title": "Simple",
                                          "type": "object"
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                          "properties": {
                                            "name": {
                                              "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                              "maxLength": 8192,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "nameCaseSensitive": {
                                              "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                              "type": "boolean"
                                            },
                                            "nameHasWildcard": {
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                              "type": "boolean"
                                            },
                                            "options": {
                                              "additionalProperties": false,
                                              "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                              "properties": {
                                                "value": {
                                                  "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "nullable": true,
                                                  "type": "array"
                                                },
                                                "valueCaseSensitive": {
                                                  "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                                  "type": "boolean"
                                                },
                                                "valueEscaped": {
                                                  "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                                  "type": "boolean"
                                                },
                                                "valueHasWildcard": {
                                                  "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                                  "type": "boolean"
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "type": {
                                              "description": "The array type, which is `object`.\n",
                                              "enum": [
                                                "object"
                                              ],
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "title": "Object",
                                          "type": "object"
                                        }
                                      ],
                                      "title": "Object match value",
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                },
                                "nullable": true,
                                "type": "array"
                              },
                              "matchesAlways": {
                                "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "The name of the rule.\n",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "start": {
                                "default": 0,
                                "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "type": {
                                "description": "The type of Cloudlet the rule is for. For example, the string for Request Control is `igMatchRule`.\n",
                                "enum": [
                                  "igMatchRule"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "allowDeny"
                            ],
                            "title": "Request Control",
                            "type": "object",
                            "x-akamai": {
                              "file-path": "schemas/match-rule-ig.yaml"
                            }
                          },
                          {
                            "type": "object",
                            "description": "Contains match rule information for Visitor Prioritization.\n",
                            "title": "Visitor Prioritization",
                            "additionalProperties": false,
                            "required": [
                              "type",
                              "passThroughPercent"
                            ],
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "Akamai internal use only.\n",
                                "nullable": true,
                                "readOnly": true
                              },
                              "location": {
                                "type": "string",
                                "description": "The navigable endpoint used for the object referred to in the operation.\n",
                                "readOnly": true
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the rule.\n",
                                "nullable": true,
                                "maxLength": 8192
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of Cloudlet the rule is for. For example, the string for Visitor Prioritization is `vpMatchRule`.\n",
                                "enum": [
                                  "vpMatchRule"
                                ]
                              },
                              "akaRuleId": {
                                "type": "string",
                                "description": "The rule's unique identifier within the policy version.\n",
                                "readOnly": true
                              },
                              "start": {
                                "type": "integer",
                                "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                                "default": 0,
                                "minimum": 0
                              },
                              "end": {
                                "type": "integer",
                                "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                                "default": 0,
                                "minimum": 0
                              },
                              "matches": {
                                "type": "array",
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                                "nullable": true,
                                "items": {
                                  "type": "object",
                                  "description": "The match rule criteria.\n",
                                  "additionalProperties": false,
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ],
                                      "title": "matchType and matchValue required"
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ],
                                      "title": "matchType and objectMatchValue required"
                                    }
                                  ],
                                  "properties": {
                                    "caseSensitive": {
                                      "type": "boolean",
                                      "description": "If `true`, the match is case sensitive.\n"
                                    },
                                    "matchValue": {
                                      "type": "string",
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                      "minLength": 1,
                                      "maxLength": 8192
                                    },
                                    "negate": {
                                      "type": "boolean",
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                                    },
                                    "matchOperator": {
                                      "type": "string",
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "type": "string",
                                      "description": "The type of match used.\n",
                                      "enum": [
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "header",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "checkIPs": {
                                      "type": "string",
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "objectMatchValue": {
                                      "type": "object",
                                      "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                      "title": "Object match value",
                                      "oneOf": [
                                        {
                                          "type": "object",
                                          "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                          "title": "Simple",
                                          "additionalProperties": false,
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "description": "The object type, which is `simple`.\n",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "type": "array",
                                              "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                              "nullable": true,
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                          "title": "Object",
                                          "additionalProperties": false,
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                              "minLength": 1,
                                              "maxLength": 8192
                                            },
                                            "type": {
                                              "type": "string",
                                              "description": "The array type, which is `object`.\n",
                                              "enum": [
                                                "object"
                                              ]
                                            },
                                            "options": {
                                              "type": "object",
                                              "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                              "additionalProperties": false,
                                              "properties": {
                                                "value": {
                                                  "type": "array",
                                                  "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                                  "nullable": true,
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueHasWildcard": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for `value` includes wildcards.\n"
                                                },
                                                "valueCaseSensitive": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n"
                                                },
                                                "valueEscaped": {
                                                  "type": "boolean",
                                                  "description": "Set to `true` if the entries for `value` includes escaped characters.\n"
                                                }
                                              }
                                            },
                                            "nameCaseSensitive": {
                                              "type": "boolean",
                                              "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                            },
                                            "nameHasWildcard": {
                                              "type": "boolean",
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              },
                              "disabled": {
                                "type": "boolean",
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                                "default": false
                              },
                              "passThroughPercent": {
                                "type": "number",
                                "description": "The range `0.000: 99.000` specifies the percentage of requests that pass through to the origin. The value of `100` means the request always passes through to the origin. For Visitor Prioritization, a value of `-1` means send everyone to the waiting room.\n",
                                "minimum": -1,
                                "maximum": 100
                              },
                              "matchURL": {
                                "type": "string",
                                "description": "The URL the Cloudlet uses to match the incoming request.\n",
                                "nullable": true,
                                "maxLength": 8192
                              },
                              "useIncomingQueryString": {
                                "type": "boolean",
                                "description": "If set to `true`, the Cloudlet includes the request's query string in the rewritten or forwarded URL.\n"
                              }
                            }
                          }
                        ]
                      },
                      "type": "array",
                      "x-akamai": {
                        "file-path": "schemas/match-rules.yaml"
                      }
                    },
                    "policyId": {
                      "type": "integer",
                      "description": "ID of the policy the version is associated to.\n"
                    },
                    "revisionId": {
                      "type": "integer",
                      "description": "ID of the revision.\n"
                    },
                    "rulesLocked": {
                      "type": "boolean",
                      "description": "Flag determining whether the rules are locked or not.\n"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete-policy-version",
        "summary": "Remove a policy version",
        "tags": [
          "Policy versions"
        ],
        "description": "You have the option of removing policy versions, including those that are currently active on either the staging or production network.\n",
        "responses": {
          "204": {
            "description": "The policy version is deleted.\n"
          }
        }
      }
    },
    "/policies/{policyId}/versions/{version}/rules": {
      "x-akamai": {
        "path-info": "/policies/{policyId}/versions/{version}/rules"
      },
      "parameters": [
        {
          "description": "The version number of the policy.\n",
          "in": "path",
          "name": "version",
          "required": true,
          "schema": {
            "example": 2,
            "type": "number"
          },
          "x-akamai": {
            "file-path": "parameters/version-path.yaml"
          }
        },
        {
          "description": "The ID of the policy.\n",
          "in": "path",
          "name": "policyId",
          "required": true,
          "schema": {
            "example": 1001,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/policy-id-path.yaml"
          }
        }
      ],
      "post": {
        "operationId": "post-policy-version-rules",
        "summary": "Add a version rule",
        "tags": [
          "Version rules"
        ],
        "description": "Add a new rule to an existing policy version. You can only add one rule at a time.\n",
        "parameters": [
          {
            "name": "index",
            "in": "query",
            "description": "The order within the current list of rules where you want to add the new rule. If you do not set this parameter, the new rule is added to the end of the current rule list. For Cloudlets, the first rule listed is the first rule evaluated.\n",
            "schema": {
              "type": "integer",
              "example": 3
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "start": 0,
                "end": 0,
                "type": "asMatchRule",
                "disabled": "false",
                "name": "Q1Sales",
                "id": null,
                "forwardSettings": {
                  "originId": "originremote2",
                  "useIncomingQueryString": true,
                  "pathAndQS": "/sales/Q1/"
                },
                "matches": [
                  {
                    "matchType": "range",
                    "matchOperator": "equals",
                    "negate": false,
                    "caseSensitive": false,
                    "objectMatchValue": {
                      "type": "range",
                      "value": [
                        1,
                        25
                      ]
                    }
                  }
                ]
              },
              "schema": {
                "description": "Contains information about match rules.\n",
                "oneOf": [
                  {
                    "type": "object",
                    "description": "Contains match rule information for Application Load Balancer.\n",
                    "title": "Application Load Balancer",
                    "additionalProperties": false,
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "Akamai internal use only.\n",
                        "nullable": true,
                        "readOnly": true
                      },
                      "location": {
                        "type": "string",
                        "description": "The navigable endpoint used for the object referred to in the operation.\n",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the rule.\n",
                        "nullable": true,
                        "maxLength": 8192
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of Cloudlet the rule is for. For example, the string for Application Load Balancer is `albMatchRule`.\n",
                        "enum": [
                          "albMatchRule"
                        ]
                      },
                      "akaRuleId": {
                        "type": "string",
                        "description": "The rule's unique identifier within the policy version.\n",
                        "readOnly": true
                      },
                      "disabled": {
                        "type": "boolean",
                        "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                        "default": false
                      },
                      "start": {
                        "type": "integer",
                        "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                        "default": 0,
                        "minimum": 0
                      },
                      "end": {
                        "type": "integer",
                        "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                        "default": 0,
                        "minimum": 0
                      },
                      "matchURL": {
                        "type": "string",
                        "description": "The URL the Cloudlet uses to match the incoming request.\n",
                        "nullable": true,
                        "maxLength": 8192
                      },
                      "matches": {
                        "type": "array",
                        "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                        "nullable": true,
                        "items": {
                          "type": "object",
                          "description": "The match rule criteria.\n",
                          "additionalProperties": false,
                          "oneOf": [
                            {
                              "required": [
                                "matchType",
                                "matchValue"
                              ],
                              "title": "matchType and matchValue required"
                            },
                            {
                              "required": [
                                "matchType",
                                "objectMatchValue"
                              ],
                              "title": "matchType and objectMatchValue required"
                            }
                          ],
                          "properties": {
                            "caseSensitive": {
                              "type": "boolean",
                              "description": "If `true`, the match is case sensitive.\n"
                            },
                            "checkIPs": {
                              "type": "string",
                              "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                              "nullable": true,
                              "enum": [
                                "CONNECTING_IP",
                                "XFF_HEADERS",
                                "CONNECTING_IP XFF_HEADERS"
                              ]
                            },
                            "matchOperator": {
                              "type": "string",
                              "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                              "enum": [
                                "contains",
                                "exists",
                                "equals"
                              ]
                            },
                            "matchType": {
                              "type": "string",
                              "description": "The type of match used.\n",
                              "enum": [
                                "header",
                                "hostname",
                                "path",
                                "extension",
                                "query",
                                "regex",
                                "cookie",
                                "deviceCharacteristics",
                                "clientip",
                                "continent",
                                "countrycode",
                                "regioncode",
                                "protocol",
                                "method",
                                "proxy"
                              ]
                            },
                            "matchValue": {
                              "type": "string",
                              "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                              "minLength": 1,
                              "maxLength": 8192
                            },
                            "negate": {
                              "type": "boolean",
                              "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                            },
                            "objectMatchValue": {
                              "type": "object",
                              "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                              "title": "Object match value",
                              "oneOf": [
                                {
                                  "type": "object",
                                  "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                  "title": "Simple",
                                  "additionalProperties": false,
                                  "required": [
                                    "type",
                                    "value"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "description": "The object type, which is `simple`.\n",
                                      "enum": [
                                        "simple"
                                      ]
                                    },
                                    "value": {
                                      "type": "array",
                                      "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                      "nullable": true,
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "description": "Use this for more complex match criteria.\n",
                                  "title": "Object",
                                  "additionalProperties": false,
                                  "required": [
                                    "name",
                                    "type"
                                  ],
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                      "minLength": 1,
                                      "maxLength": 8192
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "The array type, which is `object`.\n",
                                      "enum": [
                                        "object"
                                      ]
                                    },
                                    "options": {
                                      "type": "object",
                                      "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                      "additionalProperties": false,
                                      "properties": {
                                        "value": {
                                          "type": "array",
                                          "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                          "nullable": true,
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "valueCaseSensitive": {
                                          "type": "boolean",
                                          "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n"
                                        },
                                        "valueEscaped": {
                                          "type": "boolean",
                                          "description": "Set to `true` if the entries for `value` includes escaped characters.\n"
                                        },
                                        "valueHasWildcard": {
                                          "type": "boolean",
                                          "description": "Set to `true` if the entries for `value` includes wildcards.\n"
                                        }
                                      }
                                    },
                                    "nameCaseSensitive": {
                                      "type": "boolean",
                                      "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                    },
                                    "nameHasWildcard": {
                                      "type": "boolean",
                                      "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      },
                      "matchesAlways": {
                        "type": "boolean",
                        "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n"
                      },
                      "forwardSettings": {
                        "type": "object",
                        "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                        "additionalProperties": false,
                        "properties": {
                          "pathAndQS": {
                            "type": "string",
                            "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                            "minLength": 1,
                            "maxLength": 8192
                          },
                          "useIncomingQueryString": {
                            "type": "boolean",
                            "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n"
                          },
                          "originId": {
                            "type": "string",
                            "description": "The conditional origin's unique identifier.\n",
                            "nullable": true,
                            "maxLength": 8192
                          }
                        }
                      }
                    }
                  },
                  {
                    "additionalProperties": false,
                    "description": "Contains match rule information for API Prioritization.\n",
                    "properties": {
                      "akaRuleId": {
                        "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                        "readOnly": true,
                        "type": "string"
                      },
                      "disabled": {
                        "default": false,
                        "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                        "type": "boolean"
                      },
                      "end": {
                        "default": 0,
                        "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "id": {
                        "description": "__Read-only__ Akamai internal use only.\n",
                        "nullable": true,
                        "readOnly": true,
                        "type": "integer"
                      },
                      "location": {
                        "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                        "readOnly": true,
                        "type": "string"
                      },
                      "matchURL": {
                        "description": "The URL the Cloudlet uses to match the incoming request.\n",
                        "maxLength": 8192,
                        "nullable": true,
                        "type": "string"
                      },
                      "matches": {
                        "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                        "items": {
                          "additionalProperties": false,
                          "description": "The match rule criteria.\n",
                          "oneOf": [
                            {
                              "required": [
                                "matchType",
                                "matchValue"
                              ],
                              "title": "matchType and matchValue required"
                            },
                            {
                              "required": [
                                "matchType",
                                "objectMatchValue"
                              ],
                              "title": "matchType and objectMatchValue required"
                            }
                          ],
                          "properties": {
                            "caseSensitive": {
                              "description": "If `true`, the match is case sensitive.\n",
                              "type": "boolean"
                            },
                            "checkIPs": {
                              "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                              "enum": [
                                "CONNECTING_IP",
                                "XFF_HEADERS",
                                "CONNECTING_IP XFF_HEADERS"
                              ],
                              "type": "string"
                            },
                            "matchOperator": {
                              "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                              "enum": [
                                "contains",
                                "exists",
                                "equals"
                              ],
                              "type": "string"
                            },
                            "matchType": {
                              "description": "The type of match used.\n",
                              "enum": [
                                "hostname",
                                "path",
                                "extension",
                                "query",
                                "cookie",
                                "deviceCharacteristics",
                                "clientip",
                                "continent",
                                "countrycode",
                                "regioncode",
                                "protocol",
                                "header",
                                "method",
                                "proxy"
                              ],
                              "type": "string"
                            },
                            "matchValue": {
                              "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                              "maxLength": 8192,
                              "minLength": 1,
                              "type": "string"
                            },
                            "negate": {
                              "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                              "type": "boolean"
                            },
                            "objectMatchValue": {
                              "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                              "oneOf": [
                                {
                                  "additionalProperties": false,
                                  "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                  "properties": {
                                    "type": {
                                      "description": "The object type, which is `simple`.\n",
                                      "enum": [
                                        "simple"
                                      ],
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                      "items": {
                                        "type": "string"
                                      },
                                      "nullable": true,
                                      "type": "array"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "value"
                                  ],
                                  "title": "Simple",
                                  "type": "object"
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Use this for more complex match criteria.\n",
                                  "properties": {
                                    "name": {
                                      "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "nameCaseSensitive": {
                                      "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                      "type": "boolean"
                                    },
                                    "nameHasWildcard": {
                                      "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                      "type": "boolean"
                                    },
                                    "options": {
                                      "additionalProperties": false,
                                      "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                      "properties": {
                                        "value": {
                                          "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                          "items": {
                                            "type": "string"
                                          },
                                          "nullable": true,
                                          "type": "array"
                                        },
                                        "valueCaseSensitive": {
                                          "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                          "type": "boolean"
                                        },
                                        "valueEscaped": {
                                          "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                          "type": "boolean"
                                        },
                                        "valueHasWildcard": {
                                          "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                          "type": "boolean"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": {
                                      "description": "The array type, which is `object`.\n",
                                      "enum": [
                                        "object"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "type"
                                  ],
                                  "title": "Object",
                                  "type": "object"
                                }
                              ],
                              "title": "Object match value",
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "nullable": true,
                        "type": "array"
                      },
                      "name": {
                        "description": "The name of the rule.\n",
                        "maxLength": 8192,
                        "nullable": true,
                        "type": "string"
                      },
                      "passThroughPercent": {
                        "description": "The percentage of requests that pass through to the origin, with `100` indicating the request always passes through to the origin. For Visitor Prioritization, a value of -1 sends everyone to the waiting room.\n",
                        "maximum": 100,
                        "minimum": -1,
                        "type": "number"
                      },
                      "start": {
                        "default": 0,
                        "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "type": {
                        "description": "The type of Cloudlet the rule is for. For example, the string for API Prioritization is `apMatchRule`.\n",
                        "enum": [
                          "apMatchRule"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "passThroughPercent"
                    ],
                    "title": "API Prioritization",
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/match-rule-ap.yaml"
                    }
                  },
                  {
                    "additionalProperties": false,
                    "description": "Contains match rule information for Audience Segmentation.\n",
                    "properties": {
                      "akaRuleId": {
                        "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                        "readOnly": true,
                        "type": "string"
                      },
                      "disabled": {
                        "default": false,
                        "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                        "type": "boolean"
                      },
                      "end": {
                        "default": 0,
                        "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "forwardSettings": {
                        "additionalProperties": false,
                        "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                        "properties": {
                          "originId": {
                            "description": "The conditional origin's unique identifier.\n",
                            "maxLength": 8192,
                            "nullable": true,
                            "type": "string"
                          },
                          "pathAndQS": {
                            "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                            "maxLength": 8192,
                            "minLength": 1,
                            "type": "string"
                          },
                          "useIncomingQueryString": {
                            "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n",
                            "type": "boolean"
                          }
                        },
                        "type": "object"
                      },
                      "id": {
                        "description": "__Read-only__ Akamai internal use only.\n",
                        "nullable": true,
                        "readOnly": true,
                        "type": "integer"
                      },
                      "location": {
                        "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                        "readOnly": true,
                        "type": "string"
                      },
                      "matchURL": {
                        "description": "The URL the Cloudlet uses to match the incoming request.\n",
                        "maxLength": 8192,
                        "nullable": true,
                        "type": "string"
                      },
                      "matches": {
                        "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                        "items": {
                          "additionalProperties": false,
                          "description": "The match rule criteria.\n",
                          "oneOf": [
                            {
                              "required": [
                                "matchType",
                                "matchValue"
                              ],
                              "title": "matchType and matchValue required"
                            },
                            {
                              "required": [
                                "matchType",
                                "objectMatchValue"
                              ],
                              "title": "matchType and objectMatchValue required"
                            }
                          ],
                          "properties": {
                            "caseSensitive": {
                              "description": "If `true`, the match is case sensitive.\n",
                              "type": "boolean"
                            },
                            "checkIPs": {
                              "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                              "enum": [
                                "CONNECTING_IP",
                                "XFF_HEADERS",
                                "CONNECTING_IP XFF_HEADERS"
                              ],
                              "type": "string"
                            },
                            "matchOperator": {
                              "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                              "enum": [
                                "contains",
                                "exists",
                                "equals"
                              ],
                              "type": "string"
                            },
                            "matchType": {
                              "description": "The type of match used.\n",
                              "enum": [
                                "header",
                                "hostname",
                                "path",
                                "extension",
                                "query",
                                "range",
                                "regex",
                                "cookie",
                                "deviceCharacteristics",
                                "clientip",
                                "continent",
                                "countrycode",
                                "regioncode",
                                "protocol",
                                "method",
                                "proxy"
                              ],
                              "type": "string"
                            },
                            "matchValue": {
                              "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                              "maxLength": 8192,
                              "minLength": 1,
                              "type": "string"
                            },
                            "negate": {
                              "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                              "type": "boolean"
                            },
                            "objectMatchValue": {
                              "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.\n",
                              "oneOf": [
                                {
                                  "additionalProperties": false,
                                  "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.\n",
                                  "properties": {
                                    "type": {
                                      "description": "The object type, which is `range`.\n",
                                      "enum": [
                                        "range"
                                      ],
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "An inclusive range comprised of two numbers to match on.\n",
                                      "items": {
                                        "type": "integer"
                                      },
                                      "nullable": true,
                                      "type": "array"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "value"
                                  ],
                                  "title": "Range",
                                  "type": "object"
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                  "properties": {
                                    "type": {
                                      "description": "The object type, which is `simple`.\n",
                                      "enum": [
                                        "simple"
                                      ],
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                      "items": {
                                        "type": "string"
                                      },
                                      "nullable": true,
                                      "type": "array"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "value"
                                  ],
                                  "title": "Simple",
                                  "type": "object"
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                  "properties": {
                                    "name": {
                                      "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "nameCaseSensitive": {
                                      "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                      "type": "boolean"
                                    },
                                    "nameHasWildcard": {
                                      "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                      "type": "boolean"
                                    },
                                    "options": {
                                      "additionalProperties": false,
                                      "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                      "properties": {
                                        "value": {
                                          "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                          "items": {
                                            "type": "string"
                                          },
                                          "nullable": true,
                                          "type": "array"
                                        },
                                        "valueCaseSensitive": {
                                          "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                          "type": "boolean"
                                        },
                                        "valueEscaped": {
                                          "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                          "type": "boolean"
                                        },
                                        "valueHasWildcard": {
                                          "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                          "type": "boolean"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": {
                                      "description": "The array type, which is `object`.\n",
                                      "enum": [
                                        "object"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "type"
                                  ],
                                  "title": "Object",
                                  "type": "object"
                                }
                              ],
                              "title": "Object match value",
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "nullable": true,
                        "type": "array"
                      },
                      "name": {
                        "description": "The name of the rule.\n",
                        "maxLength": 8192,
                        "nullable": true,
                        "type": "string"
                      },
                      "start": {
                        "default": 0,
                        "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "type": {
                        "description": "The type of Cloudlet the rule is for. For example, the string for Audience Segmentation is `asMatchRule`.\n",
                        "enum": [
                          "asMatchRule"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "type"
                    ],
                    "title": "Audience Segmentation",
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/match-rule-as.yaml"
                    }
                  },
                  {
                    "additionalProperties": false,
                    "description": "Contains match rule information for Phased Release.\n",
                    "properties": {
                      "akaRuleId": {
                        "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                        "readOnly": true,
                        "type": "string"
                      },
                      "disabled": {
                        "default": false,
                        "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                        "type": "boolean"
                      },
                      "end": {
                        "default": 0,
                        "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "forwardSettings": {
                        "additionalProperties": false,
                        "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, and `percent`.\n",
                        "properties": {
                          "originId": {
                            "description": "The conditional origin's unique identifier.\n",
                            "maxLength": 8192,
                            "nullable": true,
                            "type": "string"
                          },
                          "percent": {
                            "description": "The percentage of visitors directed to a different origin.\n",
                            "maximum": 100,
                            "minimum": 0,
                            "type": "number"
                          }
                        },
                        "type": "object"
                      },
                      "id": {
                        "description": "__Read-only__ Akamai internal use only.\n",
                        "nullable": true,
                        "readOnly": true,
                        "type": "integer"
                      },
                      "location": {
                        "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                        "readOnly": true,
                        "type": "string"
                      },
                      "matchURL": {
                        "description": "The URL the Cloudlet uses to match the incoming request.\n",
                        "maxLength": 8192,
                        "nullable": true,
                        "type": "string"
                      },
                      "matches": {
                        "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                        "items": {
                          "additionalProperties": false,
                          "description": "The match rule criteria.\n",
                          "oneOf": [
                            {
                              "required": [
                                "matchType",
                                "matchValue"
                              ],
                              "title": "matchType and matchValue required"
                            },
                            {
                              "required": [
                                "matchType",
                                "objectMatchValue"
                              ],
                              "title": "matchType and objectMatchValue required"
                            }
                          ],
                          "properties": {
                            "caseSensitive": {
                              "description": "If `true`, the match is case sensitive.\n",
                              "type": "boolean"
                            },
                            "checkIPs": {
                              "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                              "enum": [
                                "CONNECTING_IP",
                                "XFF_HEADERS",
                                "CONNECTING_IP XFF_HEADERS"
                              ],
                              "nullable": true,
                              "type": "string"
                            },
                            "matchOperator": {
                              "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                              "enum": [
                                "contains",
                                "exists",
                                "equals"
                              ],
                              "type": "string"
                            },
                            "matchType": {
                              "description": "The type of match used.\n",
                              "enum": [
                                "header",
                                "hostname",
                                "path",
                                "extension",
                                "query",
                                "cookie",
                                "deviceCharacteristics",
                                "clientip",
                                "continent",
                                "countrycode",
                                "regioncode",
                                "protocol",
                                "method",
                                "proxy"
                              ],
                              "type": "string"
                            },
                            "matchValue": {
                              "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                              "maxLength": 8192,
                              "minLength": 1,
                              "type": "string"
                            },
                            "negate": {
                              "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                              "type": "boolean"
                            },
                            "objectMatchValue": {
                              "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                              "oneOf": [
                                {
                                  "additionalProperties": false,
                                  "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                  "properties": {
                                    "type": {
                                      "description": "The object type, which is `simple`.\n",
                                      "enum": [
                                        "simple"
                                      ],
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                      "items": {
                                        "type": "string"
                                      },
                                      "nullable": true,
                                      "type": "array"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "value"
                                  ],
                                  "title": "Simple",
                                  "type": "object"
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Use this for more complex match criteria.\n",
                                  "properties": {
                                    "name": {
                                      "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "nameCaseSensitive": {
                                      "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                      "type": "boolean"
                                    },
                                    "nameHasWildcard": {
                                      "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                      "type": "boolean"
                                    },
                                    "options": {
                                      "additionalProperties": false,
                                      "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                      "properties": {
                                        "value": {
                                          "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                          "items": {
                                            "type": "string"
                                          },
                                          "nullable": true,
                                          "type": "array"
                                        },
                                        "valueCaseSensitive": {
                                          "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                          "type": "boolean"
                                        },
                                        "valueEscaped": {
                                          "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                          "type": "boolean"
                                        },
                                        "valueHasWildcard": {
                                          "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                          "type": "boolean"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": {
                                      "description": "The array type, which is `object`.\n",
                                      "enum": [
                                        "object"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "type"
                                  ],
                                  "title": "Object",
                                  "type": "object"
                                }
                              ],
                              "title": "Object match value",
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "nullable": true,
                        "type": "array"
                      },
                      "matchesAlways": {
                        "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n",
                        "type": "boolean"
                      },
                      "name": {
                        "description": "The name of the rule.\n",
                        "maxLength": 8192,
                        "nullable": true,
                        "type": "string"
                      },
                      "start": {
                        "default": 0,
                        "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "type": {
                        "description": "The type of Cloudlet the rule is for. For example, the string for Phased Release is `cdMatchRule`.\n",
                        "enum": [
                          "cdMatchRule"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "type"
                    ],
                    "title": "Phased Release",
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/match-rule-cd.yaml"
                    }
                  },
                  {
                    "additionalProperties": false,
                    "description": "Contains match rule information for Edge Redirector.\n",
                    "properties": {
                      "akaRuleId": {
                        "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                        "readOnly": true,
                        "type": "string"
                      },
                      "disabled": {
                        "default": false,
                        "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                        "type": "boolean"
                      },
                      "end": {
                        "default": 0,
                        "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "id": {
                        "description": "__Read-only__ Akamai internal use only.\n",
                        "nullable": true,
                        "readOnly": true,
                        "type": "integer"
                      },
                      "location": {
                        "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                        "readOnly": true,
                        "type": "string"
                      },
                      "matchURL": {
                        "description": "The URL the Cloudlet uses to match the incoming request.\n",
                        "maxLength": 8192,
                        "nullable": true,
                        "type": "string"
                      },
                      "matches": {
                        "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                        "items": {
                          "additionalProperties": false,
                          "description": "The match rule criteria.\n",
                          "oneOf": [
                            {
                              "required": [
                                "matchType",
                                "matchValue"
                              ],
                              "title": "matchType and matchValue required"
                            },
                            {
                              "required": [
                                "matchType",
                                "objectMatchValue"
                              ],
                              "title": "matchType and objectMatchValue required"
                            }
                          ],
                          "properties": {
                            "caseSensitive": {
                              "description": "If `true`, the match is case sensitive.\n",
                              "type": "boolean"
                            },
                            "checkIPs": {
                              "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                              "enum": [
                                "CONNECTING_IP",
                                "XFF_HEADERS",
                                "CONNECTING_IP XFF_HEADERS"
                              ],
                              "nullable": true,
                              "type": "string"
                            },
                            "matchOperator": {
                              "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                              "enum": [
                                "contains",
                                "exists",
                                "equals"
                              ],
                              "type": "string"
                            },
                            "matchType": {
                              "description": "The type of match used.\n",
                              "enum": [
                                "header",
                                "hostname",
                                "path",
                                "extension",
                                "query",
                                "regex",
                                "cookie",
                                "deviceCharacteristics",
                                "clientip",
                                "continent",
                                "countrycode",
                                "regioncode",
                                "protocol",
                                "method",
                                "proxy"
                              ],
                              "type": "string"
                            },
                            "matchValue": {
                              "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                              "maxLength": 8192,
                              "minLength": 1,
                              "type": "string"
                            },
                            "negate": {
                              "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                              "type": "boolean"
                            },
                            "objectMatchValue": {
                              "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                              "oneOf": [
                                {
                                  "additionalProperties": false,
                                  "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                  "properties": {
                                    "type": {
                                      "description": "The object type, which is `simple`.\n",
                                      "enum": [
                                        "simple"
                                      ],
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                      "items": {
                                        "type": "string"
                                      },
                                      "nullable": true,
                                      "type": "array"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "value"
                                  ],
                                  "title": "Simple",
                                  "type": "object"
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                  "properties": {
                                    "name": {
                                      "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "nameCaseSensitive": {
                                      "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                      "type": "boolean"
                                    },
                                    "nameHasWildcard": {
                                      "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                      "type": "boolean"
                                    },
                                    "options": {
                                      "additionalProperties": false,
                                      "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                      "properties": {
                                        "value": {
                                          "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                          "items": {
                                            "type": "string"
                                          },
                                          "nullable": true,
                                          "type": "array"
                                        },
                                        "valueCaseSensitive": {
                                          "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                          "type": "boolean"
                                        },
                                        "valueEscaped": {
                                          "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                          "type": "boolean"
                                        },
                                        "valueHasWildcard": {
                                          "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                          "type": "boolean"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": {
                                      "description": "The array type, which is `object`.\n",
                                      "enum": [
                                        "object"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "type"
                                  ],
                                  "title": "Object",
                                  "type": "object"
                                }
                              ],
                              "title": "Object match value",
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "nullable": true,
                        "type": "array"
                      },
                      "matchesAlways": {
                        "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n",
                        "type": "boolean"
                      },
                      "name": {
                        "description": "The name of the rule.\n",
                        "maxLength": 8192,
                        "nullable": true,
                        "type": "string"
                      },
                      "redirectURL": {
                        "description": "The URL Edge Redirector redirects the request to. If using `useRelativeUrl`, you can enter a path for the value. If `useRelativeUrl` is not used or set to `none`, then the `redirectUrl` should be a fully qualified URL.\n",
                        "maxLength": 8192,
                        "minLength": 1,
                        "type": "string"
                      },
                      "start": {
                        "default": 0,
                        "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "statusCode": {
                        "description": "The HTTP response redirect type status code: `301` for permanent redirect, `302` for temporary redirect, `303` for temporary using GET, `307` for temporary retain method, or `308` for permanent retain method.\n",
                        "enum": [
                          301,
                          302,
                          303,
                          307,
                          308
                        ],
                        "type": "integer"
                      },
                      "type": {
                        "description": "The type of Cloudlet the rule is for. For example, the string for Edge Redirector is `erMatchRule`.\n",
                        "enum": [
                          "erMatchRule"
                        ],
                        "type": "string"
                      },
                      "useIncomingQueryString": {
                        "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n",
                        "type": "boolean"
                      },
                      "useIncomingSchemeAndHost": {
                        "description": "If set to `true`, the Cloudlet copies both the scheme and the hostname from the incoming request to use in the redirect URL.\n",
                        "type": "boolean"
                      },
                      "useRelativeUrl": {
                        "description": "If set to `relative_url`, takes the path entered for the `redirectUrl` and sets it in the response’s `Location` header. The client browser receiving the request decides which protocol and hostname to use. If set to `copy_scheme_hostname`, it creates an absolute path by taking the protocol and hostname from the incoming request and combining them with path information entered for the `redirectUrl`. This absolute path is set in the response’s `Location` header. If you don't include `useRelativeUrl`, or if you set it to `none`, then specify the `redirectUrl` as a fully qualified URL.\n",
                        "enum": [
                          "relative_url",
                          "copy_scheme_hostname",
                          "none"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "redirectURL",
                      "statusCode"
                    ],
                    "title": "Edge Redirector",
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/match-rule-er.yaml"
                    }
                  },
                  {
                    "additionalProperties": false,
                    "description": "Contains match rule information for Forward Rewrite.\n",
                    "properties": {
                      "akaRuleId": {
                        "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                        "readOnly": true,
                        "type": "string"
                      },
                      "disabled": {
                        "default": false,
                        "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                        "type": "boolean"
                      },
                      "end": {
                        "default": 0,
                        "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "forwardSettings": {
                        "additionalProperties": false,
                        "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                        "properties": {
                          "originId": {
                            "description": "The conditional origin's unique identifier.\n",
                            "maxLength": 8192,
                            "nullable": true,
                            "type": "string"
                          },
                          "pathAndQS": {
                            "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                            "maxLength": 8192,
                            "minLength": 1,
                            "type": "string"
                          },
                          "useIncomingQueryString": {
                            "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n",
                            "type": "boolean"
                          }
                        },
                        "type": "object"
                      },
                      "id": {
                        "description": "__Read-only__ Akamai internal use only.\n",
                        "nullable": true,
                        "readOnly": true,
                        "type": "integer"
                      },
                      "location": {
                        "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                        "readOnly": true,
                        "type": "string"
                      },
                      "matchURL": {
                        "description": "The URL the Cloudlet uses to match the incoming request.\n",
                        "maxLength": 8192,
                        "nullable": true,
                        "type": "string"
                      },
                      "matches": {
                        "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                        "items": {
                          "additionalProperties": false,
                          "description": "The match rule criteria.\n",
                          "oneOf": [
                            {
                              "required": [
                                "matchType",
                                "matchValue"
                              ],
                              "title": "matchType and matchValue required"
                            },
                            {
                              "required": [
                                "matchType",
                                "objectMatchValue"
                              ],
                              "title": "matchType and objectMatchValue required"
                            }
                          ],
                          "properties": {
                            "caseSensitive": {
                              "description": "If `true`, the match is case sensitive.\n",
                              "type": "boolean"
                            },
                            "checkIPs": {
                              "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                              "enum": [
                                "CONNECTING_IP",
                                "XFF_HEADERS",
                                "CONNECTING_IP XFF_HEADERS"
                              ],
                              "type": "string"
                            },
                            "matchOperator": {
                              "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                              "enum": [
                                "contains",
                                "exists",
                                "equals"
                              ],
                              "type": "string"
                            },
                            "matchType": {
                              "description": "The type of match used.\n",
                              "enum": [
                                "header",
                                "hostname",
                                "path",
                                "extension",
                                "query",
                                "regex",
                                "cookie",
                                "deviceCharacteristics",
                                "clientip",
                                "continent",
                                "countrycode",
                                "regioncode",
                                "protocol",
                                "method",
                                "proxy"
                              ],
                              "type": "string"
                            },
                            "matchValue": {
                              "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                              "maxLength": 8192,
                              "minLength": 1,
                              "type": "string"
                            },
                            "negate": {
                              "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                              "type": "boolean"
                            },
                            "objectMatchValue": {
                              "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                              "oneOf": [
                                {
                                  "additionalProperties": false,
                                  "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                  "properties": {
                                    "type": {
                                      "description": "The object type, which is `simple`.\n",
                                      "enum": [
                                        "simple"
                                      ],
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                      "items": {
                                        "type": "string"
                                      },
                                      "nullable": true,
                                      "type": "array"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "value"
                                  ],
                                  "title": "Simple",
                                  "type": "object"
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                  "properties": {
                                    "name": {
                                      "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "nameCaseSensitive": {
                                      "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                      "type": "boolean"
                                    },
                                    "nameHasWildcard": {
                                      "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                      "type": "boolean"
                                    },
                                    "options": {
                                      "additionalProperties": false,
                                      "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                      "properties": {
                                        "value": {
                                          "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                          "items": {
                                            "type": "string"
                                          },
                                          "nullable": true,
                                          "type": "array"
                                        },
                                        "valueCaseSensitive": {
                                          "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                          "type": "boolean"
                                        },
                                        "valueEscaped": {
                                          "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                          "type": "boolean"
                                        },
                                        "valueHasWildcard": {
                                          "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                          "type": "boolean"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": {
                                      "description": "The array type, which is `object`.\n",
                                      "enum": [
                                        "object"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "type"
                                  ],
                                  "title": "Object",
                                  "type": "object"
                                }
                              ],
                              "title": "Object match value",
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "nullable": true,
                        "type": "array"
                      },
                      "name": {
                        "description": "The name of the rule.\n",
                        "maxLength": 8192,
                        "nullable": true,
                        "type": "string"
                      },
                      "start": {
                        "default": 0,
                        "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "type": {
                        "description": "The type of Cloudlet the rule is for. For example, the string for Forward Rewrite is `frMatchRule`.\n",
                        "enum": [
                          "frMatchRule"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "forwardSettings"
                    ],
                    "title": "Forward Rewrite",
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/match-rule-fr.yaml"
                    }
                  },
                  {
                    "additionalProperties": false,
                    "description": "Contains match rule information for Request Control.\n",
                    "properties": {
                      "akaRuleId": {
                        "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                        "readOnly": true,
                        "type": "string"
                      },
                      "allowDeny": {
                        "description": "If set to `allow`, the request is sent to origin when all conditions are true. If `deny`, the request is denied when all conditions are true. If `denybranded`, the request is denied and rerouted according to the configuration of the [Request Control behavior](https://techdocs.akamai.com/property-mgr/reference/latest-request-control).\n",
                        "enum": [
                          "allow",
                          "deny",
                          "denybranded"
                        ],
                        "type": "string"
                      },
                      "disabled": {
                        "default": false,
                        "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                        "type": "boolean"
                      },
                      "end": {
                        "default": 0,
                        "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "id": {
                        "description": "__Read-only__ Akamai internal use only.\n",
                        "nullable": true,
                        "readOnly": true,
                        "type": "integer"
                      },
                      "location": {
                        "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                        "readOnly": true,
                        "type": "string"
                      },
                      "matches": {
                        "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                        "items": {
                          "additionalProperties": false,
                          "description": "The match rule criteria.\n",
                          "oneOf": [
                            {
                              "required": [
                                "matchType",
                                "matchValue"
                              ],
                              "title": "matchType and matchValue required"
                            },
                            {
                              "required": [
                                "matchType",
                                "objectMatchValue"
                              ],
                              "title": "matchType and objectMatchValue required"
                            }
                          ],
                          "properties": {
                            "caseSensitive": {
                              "description": "If `true`, the match is case sensitive.\n",
                              "type": "boolean"
                            },
                            "checkIPs": {
                              "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                              "enum": [
                                "CONNECTING_IP",
                                "XFF_HEADERS",
                                "CONNECTING_IP XFF_HEADERS"
                              ],
                              "type": "string"
                            },
                            "matchOperator": {
                              "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                              "enum": [
                                "contains",
                                "exists",
                                "equals"
                              ],
                              "type": "string"
                            },
                            "matchType": {
                              "description": "The type of match used.\n",
                              "enum": [
                                "clientip",
                                "continent",
                                "cookie",
                                "countrycode",
                                "deviceCharacteristics",
                                "extension",
                                "header",
                                "hostname",
                                "method",
                                "path",
                                "protocol",
                                "proxy",
                                "query",
                                "regioncode"
                              ],
                              "type": "string"
                            },
                            "matchValue": {
                              "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                              "maxLength": 8192,
                              "minLength": 1,
                              "type": "string"
                            },
                            "negate": {
                              "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                              "type": "boolean"
                            },
                            "objectMatchValue": {
                              "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                              "oneOf": [
                                {
                                  "additionalProperties": false,
                                  "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                  "properties": {
                                    "type": {
                                      "description": "The object type, which is `simple`.\n",
                                      "enum": [
                                        "simple"
                                      ],
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                      "items": {
                                        "type": "string"
                                      },
                                      "nullable": true,
                                      "type": "array"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "value"
                                  ],
                                  "title": "Simple",
                                  "type": "object"
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                  "properties": {
                                    "name": {
                                      "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "nameCaseSensitive": {
                                      "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                      "type": "boolean"
                                    },
                                    "nameHasWildcard": {
                                      "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                      "type": "boolean"
                                    },
                                    "options": {
                                      "additionalProperties": false,
                                      "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                      "properties": {
                                        "value": {
                                          "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                          "items": {
                                            "type": "string"
                                          },
                                          "nullable": true,
                                          "type": "array"
                                        },
                                        "valueCaseSensitive": {
                                          "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                          "type": "boolean"
                                        },
                                        "valueEscaped": {
                                          "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                          "type": "boolean"
                                        },
                                        "valueHasWildcard": {
                                          "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                          "type": "boolean"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": {
                                      "description": "The array type, which is `object`.\n",
                                      "enum": [
                                        "object"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "type"
                                  ],
                                  "title": "Object",
                                  "type": "object"
                                }
                              ],
                              "title": "Object match value",
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "nullable": true,
                        "type": "array"
                      },
                      "matchesAlways": {
                        "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n",
                        "type": "boolean"
                      },
                      "name": {
                        "description": "The name of the rule.\n",
                        "maxLength": 8192,
                        "nullable": true,
                        "type": "string"
                      },
                      "start": {
                        "default": 0,
                        "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "type": {
                        "description": "The type of Cloudlet the rule is for. For example, the string for Request Control is `igMatchRule`.\n",
                        "enum": [
                          "igMatchRule"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "allowDeny"
                    ],
                    "title": "Request Control",
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/match-rule-ig.yaml"
                    }
                  },
                  {
                    "type": "object",
                    "description": "Contains match rule information for Visitor Prioritization.\n",
                    "title": "Visitor Prioritization",
                    "additionalProperties": false,
                    "required": [
                      "type",
                      "passThroughPercent"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "Akamai internal use only.\n",
                        "nullable": true,
                        "readOnly": true
                      },
                      "location": {
                        "type": "string",
                        "description": "The navigable endpoint used for the object referred to in the operation.\n",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the rule.\n",
                        "nullable": true,
                        "maxLength": 8192
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of Cloudlet the rule is for. For example, the string for Visitor Prioritization is `vpMatchRule`.\n",
                        "enum": [
                          "vpMatchRule"
                        ]
                      },
                      "akaRuleId": {
                        "type": "string",
                        "description": "The rule's unique identifier within the policy version.\n",
                        "readOnly": true
                      },
                      "start": {
                        "type": "integer",
                        "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                        "default": 0,
                        "minimum": 0
                      },
                      "end": {
                        "type": "integer",
                        "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                        "default": 0,
                        "minimum": 0
                      },
                      "matches": {
                        "type": "array",
                        "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                        "nullable": true,
                        "items": {
                          "type": "object",
                          "description": "The match rule criteria.\n",
                          "additionalProperties": false,
                          "oneOf": [
                            {
                              "required": [
                                "matchType",
                                "matchValue"
                              ],
                              "title": "matchType and matchValue required"
                            },
                            {
                              "required": [
                                "matchType",
                                "objectMatchValue"
                              ],
                              "title": "matchType and objectMatchValue required"
                            }
                          ],
                          "properties": {
                            "caseSensitive": {
                              "type": "boolean",
                              "description": "If `true`, the match is case sensitive.\n"
                            },
                            "matchValue": {
                              "type": "string",
                              "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                              "minLength": 1,
                              "maxLength": 8192
                            },
                            "negate": {
                              "type": "boolean",
                              "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                            },
                            "matchOperator": {
                              "type": "string",
                              "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                              "enum": [
                                "contains",
                                "exists",
                                "equals"
                              ]
                            },
                            "matchType": {
                              "type": "string",
                              "description": "The type of match used.\n",
                              "enum": [
                                "hostname",
                                "path",
                                "extension",
                                "query",
                                "cookie",
                                "deviceCharacteristics",
                                "clientip",
                                "continent",
                                "countrycode",
                                "regioncode",
                                "protocol",
                                "header",
                                "method",
                                "proxy"
                              ]
                            },
                            "checkIPs": {
                              "type": "string",
                              "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                              "enum": [
                                "CONNECTING_IP",
                                "XFF_HEADERS",
                                "CONNECTING_IP XFF_HEADERS"
                              ]
                            },
                            "objectMatchValue": {
                              "type": "object",
                              "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                              "title": "Object match value",
                              "oneOf": [
                                {
                                  "type": "object",
                                  "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                  "title": "Simple",
                                  "additionalProperties": false,
                                  "required": [
                                    "type",
                                    "value"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "description": "The object type, which is `simple`.\n",
                                      "enum": [
                                        "simple"
                                      ]
                                    },
                                    "value": {
                                      "type": "array",
                                      "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                      "nullable": true,
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                  "title": "Object",
                                  "additionalProperties": false,
                                  "required": [
                                    "name",
                                    "type"
                                  ],
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                      "minLength": 1,
                                      "maxLength": 8192
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "The array type, which is `object`.\n",
                                      "enum": [
                                        "object"
                                      ]
                                    },
                                    "options": {
                                      "type": "object",
                                      "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                      "additionalProperties": false,
                                      "properties": {
                                        "value": {
                                          "type": "array",
                                          "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                          "nullable": true,
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "valueHasWildcard": {
                                          "type": "boolean",
                                          "description": "Set to `true` if the entries for `value` includes wildcards.\n"
                                        },
                                        "valueCaseSensitive": {
                                          "type": "boolean",
                                          "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n"
                                        },
                                        "valueEscaped": {
                                          "type": "boolean",
                                          "description": "Set to `true` if the entries for `value` includes escaped characters.\n"
                                        }
                                      }
                                    },
                                    "nameCaseSensitive": {
                                      "type": "boolean",
                                      "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                    },
                                    "nameHasWildcard": {
                                      "type": "boolean",
                                      "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      },
                      "disabled": {
                        "type": "boolean",
                        "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                        "default": false
                      },
                      "passThroughPercent": {
                        "type": "number",
                        "description": "The range `0.000: 99.000` specifies the percentage of requests that pass through to the origin. The value of `100` means the request always passes through to the origin. For Visitor Prioritization, a value of `-1` means send everyone to the waiting room.\n",
                        "minimum": -1,
                        "maximum": 100
                      },
                      "matchURL": {
                        "type": "string",
                        "description": "The URL the Cloudlet uses to match the incoming request.\n",
                        "nullable": true,
                        "maxLength": 8192
                      },
                      "useIncomingQueryString": {
                        "type": "boolean",
                        "description": "If set to `true`, the Cloudlet includes the request's query string in the rewritten or forwarded URL.\n"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns details of a policy version match rule.\n",
            "content": {
              "application/json": {
                "example": {
                  "location": "/cloudlets/api/v2/policies/1002/versions/2/rules/5db847a66e0566ad",
                  "akaRuleId": "5db847a66e0566ad",
                  "start": 0,
                  "end": 0,
                  "type": "asMatchRule",
                  "disabled": "false",
                  "name": "Q1Sales",
                  "id": null,
                  "forwardSettings": {
                    "originId": "originremote2",
                    "useIncomingQueryString": true,
                    "pathAndQS": "/sales/Q1/"
                  },
                  "matches": [
                    {
                      "matchType": "range",
                      "matchOperator": "equals",
                      "negate": false,
                      "caseSensitive": false,
                      "objectMatchValue": {
                        "type": "range",
                        "value": [
                          1,
                          25
                        ]
                      }
                    }
                  ]
                },
                "schema": {
                  "description": "Contains information about match rules.\n",
                  "oneOf": [
                    {
                      "type": "object",
                      "description": "Contains match rule information for Application Load Balancer.\n",
                      "title": "Application Load Balancer",
                      "additionalProperties": false,
                      "required": [
                        "type"
                      ],
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "Akamai internal use only.\n",
                          "nullable": true,
                          "readOnly": true
                        },
                        "location": {
                          "type": "string",
                          "description": "The navigable endpoint used for the object referred to in the operation.\n",
                          "readOnly": true
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the rule.\n",
                          "nullable": true,
                          "maxLength": 8192
                        },
                        "type": {
                          "type": "string",
                          "description": "The type of Cloudlet the rule is for. For example, the string for Application Load Balancer is `albMatchRule`.\n",
                          "enum": [
                            "albMatchRule"
                          ]
                        },
                        "akaRuleId": {
                          "type": "string",
                          "description": "The rule's unique identifier within the policy version.\n",
                          "readOnly": true
                        },
                        "disabled": {
                          "type": "boolean",
                          "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                          "default": false
                        },
                        "start": {
                          "type": "integer",
                          "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                          "default": 0,
                          "minimum": 0
                        },
                        "end": {
                          "type": "integer",
                          "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                          "default": 0,
                          "minimum": 0
                        },
                        "matchURL": {
                          "type": "string",
                          "description": "The URL the Cloudlet uses to match the incoming request.\n",
                          "nullable": true,
                          "maxLength": 8192
                        },
                        "matches": {
                          "type": "array",
                          "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                          "nullable": true,
                          "items": {
                            "type": "object",
                            "description": "The match rule criteria.\n",
                            "additionalProperties": false,
                            "oneOf": [
                              {
                                "required": [
                                  "matchType",
                                  "matchValue"
                                ],
                                "title": "matchType and matchValue required"
                              },
                              {
                                "required": [
                                  "matchType",
                                  "objectMatchValue"
                                ],
                                "title": "matchType and objectMatchValue required"
                              }
                            ],
                            "properties": {
                              "caseSensitive": {
                                "type": "boolean",
                                "description": "If `true`, the match is case sensitive.\n"
                              },
                              "checkIPs": {
                                "type": "string",
                                "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                "nullable": true,
                                "enum": [
                                  "CONNECTING_IP",
                                  "XFF_HEADERS",
                                  "CONNECTING_IP XFF_HEADERS"
                                ]
                              },
                              "matchOperator": {
                                "type": "string",
                                "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                "enum": [
                                  "contains",
                                  "exists",
                                  "equals"
                                ]
                              },
                              "matchType": {
                                "type": "string",
                                "description": "The type of match used.\n",
                                "enum": [
                                  "header",
                                  "hostname",
                                  "path",
                                  "extension",
                                  "query",
                                  "regex",
                                  "cookie",
                                  "deviceCharacteristics",
                                  "clientip",
                                  "continent",
                                  "countrycode",
                                  "regioncode",
                                  "protocol",
                                  "method",
                                  "proxy"
                                ]
                              },
                              "matchValue": {
                                "type": "string",
                                "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                "minLength": 1,
                                "maxLength": 8192
                              },
                              "negate": {
                                "type": "boolean",
                                "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                              },
                              "objectMatchValue": {
                                "type": "object",
                                "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                "title": "Object match value",
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                    "title": "Simple",
                                    "additionalProperties": false,
                                    "required": [
                                      "type",
                                      "value"
                                    ],
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "The object type, which is `simple`.\n",
                                        "enum": [
                                          "simple"
                                        ]
                                      },
                                      "value": {
                                        "type": "array",
                                        "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "nullable": true,
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "description": "Use this for more complex match criteria.\n",
                                    "title": "Object",
                                    "additionalProperties": false,
                                    "required": [
                                      "name",
                                      "type"
                                    ],
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                        "minLength": 1,
                                        "maxLength": 8192
                                      },
                                      "type": {
                                        "type": "string",
                                        "description": "The array type, which is `object`.\n",
                                        "enum": [
                                          "object"
                                        ]
                                      },
                                      "options": {
                                        "type": "object",
                                        "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                        "additionalProperties": false,
                                        "properties": {
                                          "value": {
                                            "type": "array",
                                            "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                            "nullable": true,
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "valueCaseSensitive": {
                                            "type": "boolean",
                                            "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n"
                                          },
                                          "valueEscaped": {
                                            "type": "boolean",
                                            "description": "Set to `true` if the entries for `value` includes escaped characters.\n"
                                          },
                                          "valueHasWildcard": {
                                            "type": "boolean",
                                            "description": "Set to `true` if the entries for `value` includes wildcards.\n"
                                          }
                                        }
                                      },
                                      "nameCaseSensitive": {
                                        "type": "boolean",
                                        "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                      },
                                      "nameHasWildcard": {
                                        "type": "boolean",
                                        "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        },
                        "matchesAlways": {
                          "type": "boolean",
                          "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n"
                        },
                        "forwardSettings": {
                          "type": "object",
                          "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                          "additionalProperties": false,
                          "properties": {
                            "pathAndQS": {
                              "type": "string",
                              "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                              "minLength": 1,
                              "maxLength": 8192
                            },
                            "useIncomingQueryString": {
                              "type": "boolean",
                              "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n"
                            },
                            "originId": {
                              "type": "string",
                              "description": "The conditional origin's unique identifier.\n",
                              "nullable": true,
                              "maxLength": 8192
                            }
                          }
                        }
                      }
                    },
                    {
                      "additionalProperties": false,
                      "description": "Contains match rule information for API Prioritization.\n",
                      "properties": {
                        "akaRuleId": {
                          "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                          "readOnly": true,
                          "type": "string"
                        },
                        "disabled": {
                          "default": false,
                          "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                          "type": "boolean"
                        },
                        "end": {
                          "default": 0,
                          "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "id": {
                          "description": "__Read-only__ Akamai internal use only.\n",
                          "nullable": true,
                          "readOnly": true,
                          "type": "integer"
                        },
                        "location": {
                          "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                          "readOnly": true,
                          "type": "string"
                        },
                        "matchURL": {
                          "description": "The URL the Cloudlet uses to match the incoming request.\n",
                          "maxLength": 8192,
                          "nullable": true,
                          "type": "string"
                        },
                        "matches": {
                          "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                          "items": {
                            "additionalProperties": false,
                            "description": "The match rule criteria.\n",
                            "oneOf": [
                              {
                                "required": [
                                  "matchType",
                                  "matchValue"
                                ],
                                "title": "matchType and matchValue required"
                              },
                              {
                                "required": [
                                  "matchType",
                                  "objectMatchValue"
                                ],
                                "title": "matchType and objectMatchValue required"
                              }
                            ],
                            "properties": {
                              "caseSensitive": {
                                "description": "If `true`, the match is case sensitive.\n",
                                "type": "boolean"
                              },
                              "checkIPs": {
                                "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                "enum": [
                                  "CONNECTING_IP",
                                  "XFF_HEADERS",
                                  "CONNECTING_IP XFF_HEADERS"
                                ],
                                "type": "string"
                              },
                              "matchOperator": {
                                "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                "enum": [
                                  "contains",
                                  "exists",
                                  "equals"
                                ],
                                "type": "string"
                              },
                              "matchType": {
                                "description": "The type of match used.\n",
                                "enum": [
                                  "hostname",
                                  "path",
                                  "extension",
                                  "query",
                                  "cookie",
                                  "deviceCharacteristics",
                                  "clientip",
                                  "continent",
                                  "countrycode",
                                  "regioncode",
                                  "protocol",
                                  "header",
                                  "method",
                                  "proxy"
                                ],
                                "type": "string"
                              },
                              "matchValue": {
                                "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                "maxLength": 8192,
                                "minLength": 1,
                                "type": "string"
                              },
                              "negate": {
                                "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                                "type": "boolean"
                              },
                              "objectMatchValue": {
                                "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                "oneOf": [
                                  {
                                    "additionalProperties": false,
                                    "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                    "properties": {
                                      "type": {
                                        "description": "The object type, which is `simple`.\n",
                                        "enum": [
                                          "simple"
                                        ],
                                        "type": "string"
                                      },
                                      "value": {
                                        "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "items": {
                                          "type": "string"
                                        },
                                        "nullable": true,
                                        "type": "array"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "value"
                                    ],
                                    "title": "Simple",
                                    "type": "object"
                                  },
                                  {
                                    "additionalProperties": false,
                                    "description": "Use this for more complex match criteria.\n",
                                    "properties": {
                                      "name": {
                                        "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                        "maxLength": 8192,
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "nameCaseSensitive": {
                                        "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                        "type": "boolean"
                                      },
                                      "nameHasWildcard": {
                                        "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                        "type": "boolean"
                                      },
                                      "options": {
                                        "additionalProperties": false,
                                        "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                        "properties": {
                                          "value": {
                                            "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                            "items": {
                                              "type": "string"
                                            },
                                            "nullable": true,
                                            "type": "array"
                                          },
                                          "valueCaseSensitive": {
                                            "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                            "type": "boolean"
                                          },
                                          "valueEscaped": {
                                            "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                            "type": "boolean"
                                          },
                                          "valueHasWildcard": {
                                            "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                            "type": "boolean"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "type": {
                                        "description": "The array type, which is `object`.\n",
                                        "enum": [
                                          "object"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "type"
                                    ],
                                    "title": "Object",
                                    "type": "object"
                                  }
                                ],
                                "title": "Object match value",
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "nullable": true,
                          "type": "array"
                        },
                        "name": {
                          "description": "The name of the rule.\n",
                          "maxLength": 8192,
                          "nullable": true,
                          "type": "string"
                        },
                        "passThroughPercent": {
                          "description": "The percentage of requests that pass through to the origin, with `100` indicating the request always passes through to the origin. For Visitor Prioritization, a value of -1 sends everyone to the waiting room.\n",
                          "maximum": 100,
                          "minimum": -1,
                          "type": "number"
                        },
                        "start": {
                          "default": 0,
                          "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "type": {
                          "description": "The type of Cloudlet the rule is for. For example, the string for API Prioritization is `apMatchRule`.\n",
                          "enum": [
                            "apMatchRule"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "passThroughPercent"
                      ],
                      "title": "API Prioritization",
                      "type": "object",
                      "x-akamai": {
                        "file-path": "schemas/match-rule-ap.yaml"
                      }
                    },
                    {
                      "additionalProperties": false,
                      "description": "Contains match rule information for Audience Segmentation.\n",
                      "properties": {
                        "akaRuleId": {
                          "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                          "readOnly": true,
                          "type": "string"
                        },
                        "disabled": {
                          "default": false,
                          "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                          "type": "boolean"
                        },
                        "end": {
                          "default": 0,
                          "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "forwardSettings": {
                          "additionalProperties": false,
                          "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                          "properties": {
                            "originId": {
                              "description": "The conditional origin's unique identifier.\n",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "pathAndQS": {
                              "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                              "maxLength": 8192,
                              "minLength": 1,
                              "type": "string"
                            },
                            "useIncomingQueryString": {
                              "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n",
                              "type": "boolean"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "description": "__Read-only__ Akamai internal use only.\n",
                          "nullable": true,
                          "readOnly": true,
                          "type": "integer"
                        },
                        "location": {
                          "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                          "readOnly": true,
                          "type": "string"
                        },
                        "matchURL": {
                          "description": "The URL the Cloudlet uses to match the incoming request.\n",
                          "maxLength": 8192,
                          "nullable": true,
                          "type": "string"
                        },
                        "matches": {
                          "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                          "items": {
                            "additionalProperties": false,
                            "description": "The match rule criteria.\n",
                            "oneOf": [
                              {
                                "required": [
                                  "matchType",
                                  "matchValue"
                                ],
                                "title": "matchType and matchValue required"
                              },
                              {
                                "required": [
                                  "matchType",
                                  "objectMatchValue"
                                ],
                                "title": "matchType and objectMatchValue required"
                              }
                            ],
                            "properties": {
                              "caseSensitive": {
                                "description": "If `true`, the match is case sensitive.\n",
                                "type": "boolean"
                              },
                              "checkIPs": {
                                "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                "enum": [
                                  "CONNECTING_IP",
                                  "XFF_HEADERS",
                                  "CONNECTING_IP XFF_HEADERS"
                                ],
                                "type": "string"
                              },
                              "matchOperator": {
                                "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                "enum": [
                                  "contains",
                                  "exists",
                                  "equals"
                                ],
                                "type": "string"
                              },
                              "matchType": {
                                "description": "The type of match used.\n",
                                "enum": [
                                  "header",
                                  "hostname",
                                  "path",
                                  "extension",
                                  "query",
                                  "range",
                                  "regex",
                                  "cookie",
                                  "deviceCharacteristics",
                                  "clientip",
                                  "continent",
                                  "countrycode",
                                  "regioncode",
                                  "protocol",
                                  "method",
                                  "proxy"
                                ],
                                "type": "string"
                              },
                              "matchValue": {
                                "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                "maxLength": 8192,
                                "minLength": 1,
                                "type": "string"
                              },
                              "negate": {
                                "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                                "type": "boolean"
                              },
                              "objectMatchValue": {
                                "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.\n",
                                "oneOf": [
                                  {
                                    "additionalProperties": false,
                                    "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.\n",
                                    "properties": {
                                      "type": {
                                        "description": "The object type, which is `range`.\n",
                                        "enum": [
                                          "range"
                                        ],
                                        "type": "string"
                                      },
                                      "value": {
                                        "description": "An inclusive range comprised of two numbers to match on.\n",
                                        "items": {
                                          "type": "integer"
                                        },
                                        "nullable": true,
                                        "type": "array"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "value"
                                    ],
                                    "title": "Range",
                                    "type": "object"
                                  },
                                  {
                                    "additionalProperties": false,
                                    "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                    "properties": {
                                      "type": {
                                        "description": "The object type, which is `simple`.\n",
                                        "enum": [
                                          "simple"
                                        ],
                                        "type": "string"
                                      },
                                      "value": {
                                        "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "items": {
                                          "type": "string"
                                        },
                                        "nullable": true,
                                        "type": "array"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "value"
                                    ],
                                    "title": "Simple",
                                    "type": "object"
                                  },
                                  {
                                    "additionalProperties": false,
                                    "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                    "properties": {
                                      "name": {
                                        "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                        "maxLength": 8192,
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "nameCaseSensitive": {
                                        "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                        "type": "boolean"
                                      },
                                      "nameHasWildcard": {
                                        "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                        "type": "boolean"
                                      },
                                      "options": {
                                        "additionalProperties": false,
                                        "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                        "properties": {
                                          "value": {
                                            "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                            "items": {
                                              "type": "string"
                                            },
                                            "nullable": true,
                                            "type": "array"
                                          },
                                          "valueCaseSensitive": {
                                            "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                            "type": "boolean"
                                          },
                                          "valueEscaped": {
                                            "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                            "type": "boolean"
                                          },
                                          "valueHasWildcard": {
                                            "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                            "type": "boolean"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "type": {
                                        "description": "The array type, which is `object`.\n",
                                        "enum": [
                                          "object"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "type"
                                    ],
                                    "title": "Object",
                                    "type": "object"
                                  }
                                ],
                                "title": "Object match value",
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "nullable": true,
                          "type": "array"
                        },
                        "name": {
                          "description": "The name of the rule.\n",
                          "maxLength": 8192,
                          "nullable": true,
                          "type": "string"
                        },
                        "start": {
                          "default": 0,
                          "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "type": {
                          "description": "The type of Cloudlet the rule is for. For example, the string for Audience Segmentation is `asMatchRule`.\n",
                          "enum": [
                            "asMatchRule"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "type"
                      ],
                      "title": "Audience Segmentation",
                      "type": "object",
                      "x-akamai": {
                        "file-path": "schemas/match-rule-as.yaml"
                      }
                    },
                    {
                      "additionalProperties": false,
                      "description": "Contains match rule information for Phased Release.\n",
                      "properties": {
                        "akaRuleId": {
                          "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                          "readOnly": true,
                          "type": "string"
                        },
                        "disabled": {
                          "default": false,
                          "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                          "type": "boolean"
                        },
                        "end": {
                          "default": 0,
                          "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "forwardSettings": {
                          "additionalProperties": false,
                          "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, and `percent`.\n",
                          "properties": {
                            "originId": {
                              "description": "The conditional origin's unique identifier.\n",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "percent": {
                              "description": "The percentage of visitors directed to a different origin.\n",
                              "maximum": 100,
                              "minimum": 0,
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "description": "__Read-only__ Akamai internal use only.\n",
                          "nullable": true,
                          "readOnly": true,
                          "type": "integer"
                        },
                        "location": {
                          "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                          "readOnly": true,
                          "type": "string"
                        },
                        "matchURL": {
                          "description": "The URL the Cloudlet uses to match the incoming request.\n",
                          "maxLength": 8192,
                          "nullable": true,
                          "type": "string"
                        },
                        "matches": {
                          "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                          "items": {
                            "additionalProperties": false,
                            "description": "The match rule criteria.\n",
                            "oneOf": [
                              {
                                "required": [
                                  "matchType",
                                  "matchValue"
                                ],
                                "title": "matchType and matchValue required"
                              },
                              {
                                "required": [
                                  "matchType",
                                  "objectMatchValue"
                                ],
                                "title": "matchType and objectMatchValue required"
                              }
                            ],
                            "properties": {
                              "caseSensitive": {
                                "description": "If `true`, the match is case sensitive.\n",
                                "type": "boolean"
                              },
                              "checkIPs": {
                                "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                "enum": [
                                  "CONNECTING_IP",
                                  "XFF_HEADERS",
                                  "CONNECTING_IP XFF_HEADERS"
                                ],
                                "nullable": true,
                                "type": "string"
                              },
                              "matchOperator": {
                                "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                "enum": [
                                  "contains",
                                  "exists",
                                  "equals"
                                ],
                                "type": "string"
                              },
                              "matchType": {
                                "description": "The type of match used.\n",
                                "enum": [
                                  "header",
                                  "hostname",
                                  "path",
                                  "extension",
                                  "query",
                                  "cookie",
                                  "deviceCharacteristics",
                                  "clientip",
                                  "continent",
                                  "countrycode",
                                  "regioncode",
                                  "protocol",
                                  "method",
                                  "proxy"
                                ],
                                "type": "string"
                              },
                              "matchValue": {
                                "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                "maxLength": 8192,
                                "minLength": 1,
                                "type": "string"
                              },
                              "negate": {
                                "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                                "type": "boolean"
                              },
                              "objectMatchValue": {
                                "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                "oneOf": [
                                  {
                                    "additionalProperties": false,
                                    "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                    "properties": {
                                      "type": {
                                        "description": "The object type, which is `simple`.\n",
                                        "enum": [
                                          "simple"
                                        ],
                                        "type": "string"
                                      },
                                      "value": {
                                        "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "items": {
                                          "type": "string"
                                        },
                                        "nullable": true,
                                        "type": "array"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "value"
                                    ],
                                    "title": "Simple",
                                    "type": "object"
                                  },
                                  {
                                    "additionalProperties": false,
                                    "description": "Use this for more complex match criteria.\n",
                                    "properties": {
                                      "name": {
                                        "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                        "maxLength": 8192,
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "nameCaseSensitive": {
                                        "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                        "type": "boolean"
                                      },
                                      "nameHasWildcard": {
                                        "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                        "type": "boolean"
                                      },
                                      "options": {
                                        "additionalProperties": false,
                                        "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                        "properties": {
                                          "value": {
                                            "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                            "items": {
                                              "type": "string"
                                            },
                                            "nullable": true,
                                            "type": "array"
                                          },
                                          "valueCaseSensitive": {
                                            "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                            "type": "boolean"
                                          },
                                          "valueEscaped": {
                                            "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                            "type": "boolean"
                                          },
                                          "valueHasWildcard": {
                                            "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                            "type": "boolean"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "type": {
                                        "description": "The array type, which is `object`.\n",
                                        "enum": [
                                          "object"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "type"
                                    ],
                                    "title": "Object",
                                    "type": "object"
                                  }
                                ],
                                "title": "Object match value",
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "nullable": true,
                          "type": "array"
                        },
                        "matchesAlways": {
                          "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n",
                          "type": "boolean"
                        },
                        "name": {
                          "description": "The name of the rule.\n",
                          "maxLength": 8192,
                          "nullable": true,
                          "type": "string"
                        },
                        "start": {
                          "default": 0,
                          "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "type": {
                          "description": "The type of Cloudlet the rule is for. For example, the string for Phased Release is `cdMatchRule`.\n",
                          "enum": [
                            "cdMatchRule"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "type"
                      ],
                      "title": "Phased Release",
                      "type": "object",
                      "x-akamai": {
                        "file-path": "schemas/match-rule-cd.yaml"
                      }
                    },
                    {
                      "additionalProperties": false,
                      "description": "Contains match rule information for Edge Redirector.\n",
                      "properties": {
                        "akaRuleId": {
                          "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                          "readOnly": true,
                          "type": "string"
                        },
                        "disabled": {
                          "default": false,
                          "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                          "type": "boolean"
                        },
                        "end": {
                          "default": 0,
                          "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "id": {
                          "description": "__Read-only__ Akamai internal use only.\n",
                          "nullable": true,
                          "readOnly": true,
                          "type": "integer"
                        },
                        "location": {
                          "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                          "readOnly": true,
                          "type": "string"
                        },
                        "matchURL": {
                          "description": "The URL the Cloudlet uses to match the incoming request.\n",
                          "maxLength": 8192,
                          "nullable": true,
                          "type": "string"
                        },
                        "matches": {
                          "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                          "items": {
                            "additionalProperties": false,
                            "description": "The match rule criteria.\n",
                            "oneOf": [
                              {
                                "required": [
                                  "matchType",
                                  "matchValue"
                                ],
                                "title": "matchType and matchValue required"
                              },
                              {
                                "required": [
                                  "matchType",
                                  "objectMatchValue"
                                ],
                                "title": "matchType and objectMatchValue required"
                              }
                            ],
                            "properties": {
                              "caseSensitive": {
                                "description": "If `true`, the match is case sensitive.\n",
                                "type": "boolean"
                              },
                              "checkIPs": {
                                "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                "enum": [
                                  "CONNECTING_IP",
                                  "XFF_HEADERS",
                                  "CONNECTING_IP XFF_HEADERS"
                                ],
                                "nullable": true,
                                "type": "string"
                              },
                              "matchOperator": {
                                "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                "enum": [
                                  "contains",
                                  "exists",
                                  "equals"
                                ],
                                "type": "string"
                              },
                              "matchType": {
                                "description": "The type of match used.\n",
                                "enum": [
                                  "header",
                                  "hostname",
                                  "path",
                                  "extension",
                                  "query",
                                  "regex",
                                  "cookie",
                                  "deviceCharacteristics",
                                  "clientip",
                                  "continent",
                                  "countrycode",
                                  "regioncode",
                                  "protocol",
                                  "method",
                                  "proxy"
                                ],
                                "type": "string"
                              },
                              "matchValue": {
                                "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                "maxLength": 8192,
                                "minLength": 1,
                                "type": "string"
                              },
                              "negate": {
                                "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                                "type": "boolean"
                              },
                              "objectMatchValue": {
                                "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                "oneOf": [
                                  {
                                    "additionalProperties": false,
                                    "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                    "properties": {
                                      "type": {
                                        "description": "The object type, which is `simple`.\n",
                                        "enum": [
                                          "simple"
                                        ],
                                        "type": "string"
                                      },
                                      "value": {
                                        "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "items": {
                                          "type": "string"
                                        },
                                        "nullable": true,
                                        "type": "array"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "value"
                                    ],
                                    "title": "Simple",
                                    "type": "object"
                                  },
                                  {
                                    "additionalProperties": false,
                                    "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                    "properties": {
                                      "name": {
                                        "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                        "maxLength": 8192,
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "nameCaseSensitive": {
                                        "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                        "type": "boolean"
                                      },
                                      "nameHasWildcard": {
                                        "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                        "type": "boolean"
                                      },
                                      "options": {
                                        "additionalProperties": false,
                                        "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                        "properties": {
                                          "value": {
                                            "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                            "items": {
                                              "type": "string"
                                            },
                                            "nullable": true,
                                            "type": "array"
                                          },
                                          "valueCaseSensitive": {
                                            "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                            "type": "boolean"
                                          },
                                          "valueEscaped": {
                                            "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                            "type": "boolean"
                                          },
                                          "valueHasWildcard": {
                                            "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                            "type": "boolean"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "type": {
                                        "description": "The array type, which is `object`.\n",
                                        "enum": [
                                          "object"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "type"
                                    ],
                                    "title": "Object",
                                    "type": "object"
                                  }
                                ],
                                "title": "Object match value",
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "nullable": true,
                          "type": "array"
                        },
                        "matchesAlways": {
                          "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n",
                          "type": "boolean"
                        },
                        "name": {
                          "description": "The name of the rule.\n",
                          "maxLength": 8192,
                          "nullable": true,
                          "type": "string"
                        },
                        "redirectURL": {
                          "description": "The URL Edge Redirector redirects the request to. If using `useRelativeUrl`, you can enter a path for the value. If `useRelativeUrl` is not used or set to `none`, then the `redirectUrl` should be a fully qualified URL.\n",
                          "maxLength": 8192,
                          "minLength": 1,
                          "type": "string"
                        },
                        "start": {
                          "default": 0,
                          "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "statusCode": {
                          "description": "The HTTP response redirect type status code: `301` for permanent redirect, `302` for temporary redirect, `303` for temporary using GET, `307` for temporary retain method, or `308` for permanent retain method.\n",
                          "enum": [
                            301,
                            302,
                            303,
                            307,
                            308
                          ],
                          "type": "integer"
                        },
                        "type": {
                          "description": "The type of Cloudlet the rule is for. For example, the string for Edge Redirector is `erMatchRule`.\n",
                          "enum": [
                            "erMatchRule"
                          ],
                          "type": "string"
                        },
                        "useIncomingQueryString": {
                          "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n",
                          "type": "boolean"
                        },
                        "useIncomingSchemeAndHost": {
                          "description": "If set to `true`, the Cloudlet copies both the scheme and the hostname from the incoming request to use in the redirect URL.\n",
                          "type": "boolean"
                        },
                        "useRelativeUrl": {
                          "description": "If set to `relative_url`, takes the path entered for the `redirectUrl` and sets it in the response’s `Location` header. The client browser receiving the request decides which protocol and hostname to use. If set to `copy_scheme_hostname`, it creates an absolute path by taking the protocol and hostname from the incoming request and combining them with path information entered for the `redirectUrl`. This absolute path is set in the response’s `Location` header. If you don't include `useRelativeUrl`, or if you set it to `none`, then specify the `redirectUrl` as a fully qualified URL.\n",
                          "enum": [
                            "relative_url",
                            "copy_scheme_hostname",
                            "none"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "redirectURL",
                        "statusCode"
                      ],
                      "title": "Edge Redirector",
                      "type": "object",
                      "x-akamai": {
                        "file-path": "schemas/match-rule-er.yaml"
                      }
                    },
                    {
                      "additionalProperties": false,
                      "description": "Contains match rule information for Forward Rewrite.\n",
                      "properties": {
                        "akaRuleId": {
                          "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                          "readOnly": true,
                          "type": "string"
                        },
                        "disabled": {
                          "default": false,
                          "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                          "type": "boolean"
                        },
                        "end": {
                          "default": 0,
                          "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "forwardSettings": {
                          "additionalProperties": false,
                          "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                          "properties": {
                            "originId": {
                              "description": "The conditional origin's unique identifier.\n",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "pathAndQS": {
                              "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                              "maxLength": 8192,
                              "minLength": 1,
                              "type": "string"
                            },
                            "useIncomingQueryString": {
                              "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n",
                              "type": "boolean"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "description": "__Read-only__ Akamai internal use only.\n",
                          "nullable": true,
                          "readOnly": true,
                          "type": "integer"
                        },
                        "location": {
                          "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                          "readOnly": true,
                          "type": "string"
                        },
                        "matchURL": {
                          "description": "The URL the Cloudlet uses to match the incoming request.\n",
                          "maxLength": 8192,
                          "nullable": true,
                          "type": "string"
                        },
                        "matches": {
                          "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                          "items": {
                            "additionalProperties": false,
                            "description": "The match rule criteria.\n",
                            "oneOf": [
                              {
                                "required": [
                                  "matchType",
                                  "matchValue"
                                ],
                                "title": "matchType and matchValue required"
                              },
                              {
                                "required": [
                                  "matchType",
                                  "objectMatchValue"
                                ],
                                "title": "matchType and objectMatchValue required"
                              }
                            ],
                            "properties": {
                              "caseSensitive": {
                                "description": "If `true`, the match is case sensitive.\n",
                                "type": "boolean"
                              },
                              "checkIPs": {
                                "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                "enum": [
                                  "CONNECTING_IP",
                                  "XFF_HEADERS",
                                  "CONNECTING_IP XFF_HEADERS"
                                ],
                                "type": "string"
                              },
                              "matchOperator": {
                                "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                "enum": [
                                  "contains",
                                  "exists",
                                  "equals"
                                ],
                                "type": "string"
                              },
                              "matchType": {
                                "description": "The type of match used.\n",
                                "enum": [
                                  "header",
                                  "hostname",
                                  "path",
                                  "extension",
                                  "query",
                                  "regex",
                                  "cookie",
                                  "deviceCharacteristics",
                                  "clientip",
                                  "continent",
                                  "countrycode",
                                  "regioncode",
                                  "protocol",
                                  "method",
                                  "proxy"
                                ],
                                "type": "string"
                              },
                              "matchValue": {
                                "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                "maxLength": 8192,
                                "minLength": 1,
                                "type": "string"
                              },
                              "negate": {
                                "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                                "type": "boolean"
                              },
                              "objectMatchValue": {
                                "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                "oneOf": [
                                  {
                                    "additionalProperties": false,
                                    "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                    "properties": {
                                      "type": {
                                        "description": "The object type, which is `simple`.\n",
                                        "enum": [
                                          "simple"
                                        ],
                                        "type": "string"
                                      },
                                      "value": {
                                        "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "items": {
                                          "type": "string"
                                        },
                                        "nullable": true,
                                        "type": "array"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "value"
                                    ],
                                    "title": "Simple",
                                    "type": "object"
                                  },
                                  {
                                    "additionalProperties": false,
                                    "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                    "properties": {
                                      "name": {
                                        "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                        "maxLength": 8192,
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "nameCaseSensitive": {
                                        "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                        "type": "boolean"
                                      },
                                      "nameHasWildcard": {
                                        "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                        "type": "boolean"
                                      },
                                      "options": {
                                        "additionalProperties": false,
                                        "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                        "properties": {
                                          "value": {
                                            "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                            "items": {
                                              "type": "string"
                                            },
                                            "nullable": true,
                                            "type": "array"
                                          },
                                          "valueCaseSensitive": {
                                            "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                            "type": "boolean"
                                          },
                                          "valueEscaped": {
                                            "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                            "type": "boolean"
                                          },
                                          "valueHasWildcard": {
                                            "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                            "type": "boolean"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "type": {
                                        "description": "The array type, which is `object`.\n",
                                        "enum": [
                                          "object"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "type"
                                    ],
                                    "title": "Object",
                                    "type": "object"
                                  }
                                ],
                                "title": "Object match value",
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "nullable": true,
                          "type": "array"
                        },
                        "name": {
                          "description": "The name of the rule.\n",
                          "maxLength": 8192,
                          "nullable": true,
                          "type": "string"
                        },
                        "start": {
                          "default": 0,
                          "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "type": {
                          "description": "The type of Cloudlet the rule is for. For example, the string for Forward Rewrite is `frMatchRule`.\n",
                          "enum": [
                            "frMatchRule"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "forwardSettings"
                      ],
                      "title": "Forward Rewrite",
                      "type": "object",
                      "x-akamai": {
                        "file-path": "schemas/match-rule-fr.yaml"
                      }
                    },
                    {
                      "additionalProperties": false,
                      "description": "Contains match rule information for Request Control.\n",
                      "properties": {
                        "akaRuleId": {
                          "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                          "readOnly": true,
                          "type": "string"
                        },
                        "allowDeny": {
                          "description": "If set to `allow`, the request is sent to origin when all conditions are true. If `deny`, the request is denied when all conditions are true. If `denybranded`, the request is denied and rerouted according to the configuration of the [Request Control behavior](https://techdocs.akamai.com/property-mgr/reference/latest-request-control).\n",
                          "enum": [
                            "allow",
                            "deny",
                            "denybranded"
                          ],
                          "type": "string"
                        },
                        "disabled": {
                          "default": false,
                          "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                          "type": "boolean"
                        },
                        "end": {
                          "default": 0,
                          "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "id": {
                          "description": "__Read-only__ Akamai internal use only.\n",
                          "nullable": true,
                          "readOnly": true,
                          "type": "integer"
                        },
                        "location": {
                          "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                          "readOnly": true,
                          "type": "string"
                        },
                        "matches": {
                          "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                          "items": {
                            "additionalProperties": false,
                            "description": "The match rule criteria.\n",
                            "oneOf": [
                              {
                                "required": [
                                  "matchType",
                                  "matchValue"
                                ],
                                "title": "matchType and matchValue required"
                              },
                              {
                                "required": [
                                  "matchType",
                                  "objectMatchValue"
                                ],
                                "title": "matchType and objectMatchValue required"
                              }
                            ],
                            "properties": {
                              "caseSensitive": {
                                "description": "If `true`, the match is case sensitive.\n",
                                "type": "boolean"
                              },
                              "checkIPs": {
                                "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                "enum": [
                                  "CONNECTING_IP",
                                  "XFF_HEADERS",
                                  "CONNECTING_IP XFF_HEADERS"
                                ],
                                "type": "string"
                              },
                              "matchOperator": {
                                "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                "enum": [
                                  "contains",
                                  "exists",
                                  "equals"
                                ],
                                "type": "string"
                              },
                              "matchType": {
                                "description": "The type of match used.\n",
                                "enum": [
                                  "clientip",
                                  "continent",
                                  "cookie",
                                  "countrycode",
                                  "deviceCharacteristics",
                                  "extension",
                                  "header",
                                  "hostname",
                                  "method",
                                  "path",
                                  "protocol",
                                  "proxy",
                                  "query",
                                  "regioncode"
                                ],
                                "type": "string"
                              },
                              "matchValue": {
                                "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                "maxLength": 8192,
                                "minLength": 1,
                                "type": "string"
                              },
                              "negate": {
                                "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                                "type": "boolean"
                              },
                              "objectMatchValue": {
                                "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                "oneOf": [
                                  {
                                    "additionalProperties": false,
                                    "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                    "properties": {
                                      "type": {
                                        "description": "The object type, which is `simple`.\n",
                                        "enum": [
                                          "simple"
                                        ],
                                        "type": "string"
                                      },
                                      "value": {
                                        "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "items": {
                                          "type": "string"
                                        },
                                        "nullable": true,
                                        "type": "array"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "value"
                                    ],
                                    "title": "Simple",
                                    "type": "object"
                                  },
                                  {
                                    "additionalProperties": false,
                                    "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                    "properties": {
                                      "name": {
                                        "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                        "maxLength": 8192,
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "nameCaseSensitive": {
                                        "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                        "type": "boolean"
                                      },
                                      "nameHasWildcard": {
                                        "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                        "type": "boolean"
                                      },
                                      "options": {
                                        "additionalProperties": false,
                                        "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                        "properties": {
                                          "value": {
                                            "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                            "items": {
                                              "type": "string"
                                            },
                                            "nullable": true,
                                            "type": "array"
                                          },
                                          "valueCaseSensitive": {
                                            "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                            "type": "boolean"
                                          },
                                          "valueEscaped": {
                                            "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                            "type": "boolean"
                                          },
                                          "valueHasWildcard": {
                                            "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                            "type": "boolean"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "type": {
                                        "description": "The array type, which is `object`.\n",
                                        "enum": [
                                          "object"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "type"
                                    ],
                                    "title": "Object",
                                    "type": "object"
                                  }
                                ],
                                "title": "Object match value",
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "nullable": true,
                          "type": "array"
                        },
                        "matchesAlways": {
                          "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n",
                          "type": "boolean"
                        },
                        "name": {
                          "description": "The name of the rule.\n",
                          "maxLength": 8192,
                          "nullable": true,
                          "type": "string"
                        },
                        "start": {
                          "default": 0,
                          "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "type": {
                          "description": "The type of Cloudlet the rule is for. For example, the string for Request Control is `igMatchRule`.\n",
                          "enum": [
                            "igMatchRule"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "allowDeny"
                      ],
                      "title": "Request Control",
                      "type": "object",
                      "x-akamai": {
                        "file-path": "schemas/match-rule-ig.yaml"
                      }
                    },
                    {
                      "type": "object",
                      "description": "Contains match rule information for Visitor Prioritization.\n",
                      "title": "Visitor Prioritization",
                      "additionalProperties": false,
                      "required": [
                        "type",
                        "passThroughPercent"
                      ],
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "Akamai internal use only.\n",
                          "nullable": true,
                          "readOnly": true
                        },
                        "location": {
                          "type": "string",
                          "description": "The navigable endpoint used for the object referred to in the operation.\n",
                          "readOnly": true
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the rule.\n",
                          "nullable": true,
                          "maxLength": 8192
                        },
                        "type": {
                          "type": "string",
                          "description": "The type of Cloudlet the rule is for. For example, the string for Visitor Prioritization is `vpMatchRule`.\n",
                          "enum": [
                            "vpMatchRule"
                          ]
                        },
                        "akaRuleId": {
                          "type": "string",
                          "description": "The rule's unique identifier within the policy version.\n",
                          "readOnly": true
                        },
                        "start": {
                          "type": "integer",
                          "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                          "default": 0,
                          "minimum": 0
                        },
                        "end": {
                          "type": "integer",
                          "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                          "default": 0,
                          "minimum": 0
                        },
                        "matches": {
                          "type": "array",
                          "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                          "nullable": true,
                          "items": {
                            "type": "object",
                            "description": "The match rule criteria.\n",
                            "additionalProperties": false,
                            "oneOf": [
                              {
                                "required": [
                                  "matchType",
                                  "matchValue"
                                ],
                                "title": "matchType and matchValue required"
                              },
                              {
                                "required": [
                                  "matchType",
                                  "objectMatchValue"
                                ],
                                "title": "matchType and objectMatchValue required"
                              }
                            ],
                            "properties": {
                              "caseSensitive": {
                                "type": "boolean",
                                "description": "If `true`, the match is case sensitive.\n"
                              },
                              "matchValue": {
                                "type": "string",
                                "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                "minLength": 1,
                                "maxLength": 8192
                              },
                              "negate": {
                                "type": "boolean",
                                "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                              },
                              "matchOperator": {
                                "type": "string",
                                "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                "enum": [
                                  "contains",
                                  "exists",
                                  "equals"
                                ]
                              },
                              "matchType": {
                                "type": "string",
                                "description": "The type of match used.\n",
                                "enum": [
                                  "hostname",
                                  "path",
                                  "extension",
                                  "query",
                                  "cookie",
                                  "deviceCharacteristics",
                                  "clientip",
                                  "continent",
                                  "countrycode",
                                  "regioncode",
                                  "protocol",
                                  "header",
                                  "method",
                                  "proxy"
                                ]
                              },
                              "checkIPs": {
                                "type": "string",
                                "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                "enum": [
                                  "CONNECTING_IP",
                                  "XFF_HEADERS",
                                  "CONNECTING_IP XFF_HEADERS"
                                ]
                              },
                              "objectMatchValue": {
                                "type": "object",
                                "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                "title": "Object match value",
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                    "title": "Simple",
                                    "additionalProperties": false,
                                    "required": [
                                      "type",
                                      "value"
                                    ],
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "The object type, which is `simple`.\n",
                                        "enum": [
                                          "simple"
                                        ]
                                      },
                                      "value": {
                                        "type": "array",
                                        "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "nullable": true,
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                    "title": "Object",
                                    "additionalProperties": false,
                                    "required": [
                                      "name",
                                      "type"
                                    ],
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                        "minLength": 1,
                                        "maxLength": 8192
                                      },
                                      "type": {
                                        "type": "string",
                                        "description": "The array type, which is `object`.\n",
                                        "enum": [
                                          "object"
                                        ]
                                      },
                                      "options": {
                                        "type": "object",
                                        "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                        "additionalProperties": false,
                                        "properties": {
                                          "value": {
                                            "type": "array",
                                            "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                            "nullable": true,
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "valueHasWildcard": {
                                            "type": "boolean",
                                            "description": "Set to `true` if the entries for `value` includes wildcards.\n"
                                          },
                                          "valueCaseSensitive": {
                                            "type": "boolean",
                                            "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n"
                                          },
                                          "valueEscaped": {
                                            "type": "boolean",
                                            "description": "Set to `true` if the entries for `value` includes escaped characters.\n"
                                          }
                                        }
                                      },
                                      "nameCaseSensitive": {
                                        "type": "boolean",
                                        "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                      },
                                      "nameHasWildcard": {
                                        "type": "boolean",
                                        "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        },
                        "disabled": {
                          "type": "boolean",
                          "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                          "default": false
                        },
                        "passThroughPercent": {
                          "type": "number",
                          "description": "The range `0.000: 99.000` specifies the percentage of requests that pass through to the origin. The value of `100` means the request always passes through to the origin. For Visitor Prioritization, a value of `-1` means send everyone to the waiting room.\n",
                          "minimum": -1,
                          "maximum": 100
                        },
                        "matchURL": {
                          "type": "string",
                          "description": "The URL the Cloudlet uses to match the incoming request.\n",
                          "nullable": true,
                          "maxLength": 8192
                        },
                        "useIncomingQueryString": {
                          "type": "boolean",
                          "description": "If set to `true`, the Cloudlet includes the request's query string in the rewritten or forwarded URL.\n"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/policies/{policyId}/versions/{version}/rules/{akaRuleId}": {
      "x-akamai": {
        "path-info": "/policies/{policyId}/versions/{version}/rules/{akaRuleId}"
      },
      "parameters": [
        {
          "name": "akaRuleId",
          "in": "path",
          "description": "The ID of the rule within the policy version.\n",
          "required": true,
          "schema": {
            "type": "string",
            "example": "5db847a66e0566ad"
          }
        },
        {
          "description": "The version number of the policy.\n",
          "in": "path",
          "name": "version",
          "required": true,
          "schema": {
            "example": 2,
            "type": "number"
          },
          "x-akamai": {
            "file-path": "parameters/version-path.yaml"
          }
        },
        {
          "description": "The ID of the policy.\n",
          "in": "path",
          "name": "policyId",
          "required": true,
          "schema": {
            "example": 1001,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/policy-id-path.yaml"
          }
        }
      ],
      "get": {
        "operationId": "get-policy-version-rule",
        "summary": "Get a version rule",
        "tags": [
          "Version rules"
        ],
        "description": "Returns information for a specific rule within a policy version.\n",
        "responses": {
          "200": {
            "description": "Returns details of a policy version match rule.\n",
            "content": {
              "application/json": {
                "example": {
                  "location": "/cloudlets/api/v2/policies/1002/versions/2/rules/5db847a66e0566ad",
                  "akaRuleId": "5db847a66e0566ad",
                  "start": 0,
                  "end": 0,
                  "type": "asMatchRule",
                  "disabled": "true",
                  "name": "Q1Sales",
                  "id": null,
                  "forwardSettings": {
                    "originId": "originremote2",
                    "useIncomingQueryString": true,
                    "pathAndQS": "/sales/Q1/"
                  },
                  "matches": [
                    {
                      "matchType": "range",
                      "matchOperator": "equals",
                      "negate": false,
                      "caseSensitive": false,
                      "objectMatchValue": {
                        "type": "range",
                        "value": [
                          1,
                          25
                        ]
                      }
                    }
                  ]
                },
                "schema": {
                  "description": "Contains information about match rules.\n",
                  "oneOf": [
                    {
                      "type": "object",
                      "description": "Contains match rule information for Application Load Balancer.\n",
                      "title": "Application Load Balancer",
                      "additionalProperties": false,
                      "required": [
                        "type"
                      ],
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "Akamai internal use only.\n",
                          "nullable": true,
                          "readOnly": true
                        },
                        "location": {
                          "type": "string",
                          "description": "The navigable endpoint used for the object referred to in the operation.\n",
                          "readOnly": true
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the rule.\n",
                          "nullable": true,
                          "maxLength": 8192
                        },
                        "type": {
                          "type": "string",
                          "description": "The type of Cloudlet the rule is for. For example, the string for Application Load Balancer is `albMatchRule`.\n",
                          "enum": [
                            "albMatchRule"
                          ]
                        },
                        "akaRuleId": {
                          "type": "string",
                          "description": "The rule's unique identifier within the policy version.\n",
                          "readOnly": true
                        },
                        "disabled": {
                          "type": "boolean",
                          "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                          "default": false
                        },
                        "start": {
                          "type": "integer",
                          "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                          "default": 0,
                          "minimum": 0
                        },
                        "end": {
                          "type": "integer",
                          "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                          "default": 0,
                          "minimum": 0
                        },
                        "matchURL": {
                          "type": "string",
                          "description": "The URL the Cloudlet uses to match the incoming request.\n",
                          "nullable": true,
                          "maxLength": 8192
                        },
                        "matches": {
                          "type": "array",
                          "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                          "nullable": true,
                          "items": {
                            "type": "object",
                            "description": "The match rule criteria.\n",
                            "additionalProperties": false,
                            "oneOf": [
                              {
                                "required": [
                                  "matchType",
                                  "matchValue"
                                ],
                                "title": "matchType and matchValue required"
                              },
                              {
                                "required": [
                                  "matchType",
                                  "objectMatchValue"
                                ],
                                "title": "matchType and objectMatchValue required"
                              }
                            ],
                            "properties": {
                              "caseSensitive": {
                                "type": "boolean",
                                "description": "If `true`, the match is case sensitive.\n"
                              },
                              "checkIPs": {
                                "type": "string",
                                "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                "nullable": true,
                                "enum": [
                                  "CONNECTING_IP",
                                  "XFF_HEADERS",
                                  "CONNECTING_IP XFF_HEADERS"
                                ]
                              },
                              "matchOperator": {
                                "type": "string",
                                "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                "enum": [
                                  "contains",
                                  "exists",
                                  "equals"
                                ]
                              },
                              "matchType": {
                                "type": "string",
                                "description": "The type of match used.\n",
                                "enum": [
                                  "header",
                                  "hostname",
                                  "path",
                                  "extension",
                                  "query",
                                  "regex",
                                  "cookie",
                                  "deviceCharacteristics",
                                  "clientip",
                                  "continent",
                                  "countrycode",
                                  "regioncode",
                                  "protocol",
                                  "method",
                                  "proxy"
                                ]
                              },
                              "matchValue": {
                                "type": "string",
                                "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                "minLength": 1,
                                "maxLength": 8192
                              },
                              "negate": {
                                "type": "boolean",
                                "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                              },
                              "objectMatchValue": {
                                "type": "object",
                                "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                "title": "Object match value",
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                    "title": "Simple",
                                    "additionalProperties": false,
                                    "required": [
                                      "type",
                                      "value"
                                    ],
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "The object type, which is `simple`.\n",
                                        "enum": [
                                          "simple"
                                        ]
                                      },
                                      "value": {
                                        "type": "array",
                                        "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "nullable": true,
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "description": "Use this for more complex match criteria.\n",
                                    "title": "Object",
                                    "additionalProperties": false,
                                    "required": [
                                      "name",
                                      "type"
                                    ],
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                        "minLength": 1,
                                        "maxLength": 8192
                                      },
                                      "type": {
                                        "type": "string",
                                        "description": "The array type, which is `object`.\n",
                                        "enum": [
                                          "object"
                                        ]
                                      },
                                      "options": {
                                        "type": "object",
                                        "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                        "additionalProperties": false,
                                        "properties": {
                                          "value": {
                                            "type": "array",
                                            "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                            "nullable": true,
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "valueCaseSensitive": {
                                            "type": "boolean",
                                            "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n"
                                          },
                                          "valueEscaped": {
                                            "type": "boolean",
                                            "description": "Set to `true` if the entries for `value` includes escaped characters.\n"
                                          },
                                          "valueHasWildcard": {
                                            "type": "boolean",
                                            "description": "Set to `true` if the entries for `value` includes wildcards.\n"
                                          }
                                        }
                                      },
                                      "nameCaseSensitive": {
                                        "type": "boolean",
                                        "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                      },
                                      "nameHasWildcard": {
                                        "type": "boolean",
                                        "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        },
                        "matchesAlways": {
                          "type": "boolean",
                          "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n"
                        },
                        "forwardSettings": {
                          "type": "object",
                          "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                          "additionalProperties": false,
                          "properties": {
                            "pathAndQS": {
                              "type": "string",
                              "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                              "minLength": 1,
                              "maxLength": 8192
                            },
                            "useIncomingQueryString": {
                              "type": "boolean",
                              "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n"
                            },
                            "originId": {
                              "type": "string",
                              "description": "The conditional origin's unique identifier.\n",
                              "nullable": true,
                              "maxLength": 8192
                            }
                          }
                        }
                      }
                    },
                    {
                      "additionalProperties": false,
                      "description": "Contains match rule information for API Prioritization.\n",
                      "properties": {
                        "akaRuleId": {
                          "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                          "readOnly": true,
                          "type": "string"
                        },
                        "disabled": {
                          "default": false,
                          "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                          "type": "boolean"
                        },
                        "end": {
                          "default": 0,
                          "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "id": {
                          "description": "__Read-only__ Akamai internal use only.\n",
                          "nullable": true,
                          "readOnly": true,
                          "type": "integer"
                        },
                        "location": {
                          "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                          "readOnly": true,
                          "type": "string"
                        },
                        "matchURL": {
                          "description": "The URL the Cloudlet uses to match the incoming request.\n",
                          "maxLength": 8192,
                          "nullable": true,
                          "type": "string"
                        },
                        "matches": {
                          "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                          "items": {
                            "additionalProperties": false,
                            "description": "The match rule criteria.\n",
                            "oneOf": [
                              {
                                "required": [
                                  "matchType",
                                  "matchValue"
                                ],
                                "title": "matchType and matchValue required"
                              },
                              {
                                "required": [
                                  "matchType",
                                  "objectMatchValue"
                                ],
                                "title": "matchType and objectMatchValue required"
                              }
                            ],
                            "properties": {
                              "caseSensitive": {
                                "description": "If `true`, the match is case sensitive.\n",
                                "type": "boolean"
                              },
                              "checkIPs": {
                                "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                "enum": [
                                  "CONNECTING_IP",
                                  "XFF_HEADERS",
                                  "CONNECTING_IP XFF_HEADERS"
                                ],
                                "type": "string"
                              },
                              "matchOperator": {
                                "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                "enum": [
                                  "contains",
                                  "exists",
                                  "equals"
                                ],
                                "type": "string"
                              },
                              "matchType": {
                                "description": "The type of match used.\n",
                                "enum": [
                                  "hostname",
                                  "path",
                                  "extension",
                                  "query",
                                  "cookie",
                                  "deviceCharacteristics",
                                  "clientip",
                                  "continent",
                                  "countrycode",
                                  "regioncode",
                                  "protocol",
                                  "header",
                                  "method",
                                  "proxy"
                                ],
                                "type": "string"
                              },
                              "matchValue": {
                                "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                "maxLength": 8192,
                                "minLength": 1,
                                "type": "string"
                              },
                              "negate": {
                                "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                                "type": "boolean"
                              },
                              "objectMatchValue": {
                                "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                "oneOf": [
                                  {
                                    "additionalProperties": false,
                                    "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                    "properties": {
                                      "type": {
                                        "description": "The object type, which is `simple`.\n",
                                        "enum": [
                                          "simple"
                                        ],
                                        "type": "string"
                                      },
                                      "value": {
                                        "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "items": {
                                          "type": "string"
                                        },
                                        "nullable": true,
                                        "type": "array"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "value"
                                    ],
                                    "title": "Simple",
                                    "type": "object"
                                  },
                                  {
                                    "additionalProperties": false,
                                    "description": "Use this for more complex match criteria.\n",
                                    "properties": {
                                      "name": {
                                        "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                        "maxLength": 8192,
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "nameCaseSensitive": {
                                        "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                        "type": "boolean"
                                      },
                                      "nameHasWildcard": {
                                        "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                        "type": "boolean"
                                      },
                                      "options": {
                                        "additionalProperties": false,
                                        "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                        "properties": {
                                          "value": {
                                            "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                            "items": {
                                              "type": "string"
                                            },
                                            "nullable": true,
                                            "type": "array"
                                          },
                                          "valueCaseSensitive": {
                                            "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                            "type": "boolean"
                                          },
                                          "valueEscaped": {
                                            "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                            "type": "boolean"
                                          },
                                          "valueHasWildcard": {
                                            "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                            "type": "boolean"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "type": {
                                        "description": "The array type, which is `object`.\n",
                                        "enum": [
                                          "object"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "type"
                                    ],
                                    "title": "Object",
                                    "type": "object"
                                  }
                                ],
                                "title": "Object match value",
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "nullable": true,
                          "type": "array"
                        },
                        "name": {
                          "description": "The name of the rule.\n",
                          "maxLength": 8192,
                          "nullable": true,
                          "type": "string"
                        },
                        "passThroughPercent": {
                          "description": "The percentage of requests that pass through to the origin, with `100` indicating the request always passes through to the origin. For Visitor Prioritization, a value of -1 sends everyone to the waiting room.\n",
                          "maximum": 100,
                          "minimum": -1,
                          "type": "number"
                        },
                        "start": {
                          "default": 0,
                          "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "type": {
                          "description": "The type of Cloudlet the rule is for. For example, the string for API Prioritization is `apMatchRule`.\n",
                          "enum": [
                            "apMatchRule"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "passThroughPercent"
                      ],
                      "title": "API Prioritization",
                      "type": "object",
                      "x-akamai": {
                        "file-path": "schemas/match-rule-ap.yaml"
                      }
                    },
                    {
                      "additionalProperties": false,
                      "description": "Contains match rule information for Audience Segmentation.\n",
                      "properties": {
                        "akaRuleId": {
                          "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                          "readOnly": true,
                          "type": "string"
                        },
                        "disabled": {
                          "default": false,
                          "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                          "type": "boolean"
                        },
                        "end": {
                          "default": 0,
                          "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "forwardSettings": {
                          "additionalProperties": false,
                          "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                          "properties": {
                            "originId": {
                              "description": "The conditional origin's unique identifier.\n",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "pathAndQS": {
                              "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                              "maxLength": 8192,
                              "minLength": 1,
                              "type": "string"
                            },
                            "useIncomingQueryString": {
                              "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n",
                              "type": "boolean"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "description": "__Read-only__ Akamai internal use only.\n",
                          "nullable": true,
                          "readOnly": true,
                          "type": "integer"
                        },
                        "location": {
                          "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                          "readOnly": true,
                          "type": "string"
                        },
                        "matchURL": {
                          "description": "The URL the Cloudlet uses to match the incoming request.\n",
                          "maxLength": 8192,
                          "nullable": true,
                          "type": "string"
                        },
                        "matches": {
                          "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                          "items": {
                            "additionalProperties": false,
                            "description": "The match rule criteria.\n",
                            "oneOf": [
                              {
                                "required": [
                                  "matchType",
                                  "matchValue"
                                ],
                                "title": "matchType and matchValue required"
                              },
                              {
                                "required": [
                                  "matchType",
                                  "objectMatchValue"
                                ],
                                "title": "matchType and objectMatchValue required"
                              }
                            ],
                            "properties": {
                              "caseSensitive": {
                                "description": "If `true`, the match is case sensitive.\n",
                                "type": "boolean"
                              },
                              "checkIPs": {
                                "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                "enum": [
                                  "CONNECTING_IP",
                                  "XFF_HEADERS",
                                  "CONNECTING_IP XFF_HEADERS"
                                ],
                                "type": "string"
                              },
                              "matchOperator": {
                                "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                "enum": [
                                  "contains",
                                  "exists",
                                  "equals"
                                ],
                                "type": "string"
                              },
                              "matchType": {
                                "description": "The type of match used.\n",
                                "enum": [
                                  "header",
                                  "hostname",
                                  "path",
                                  "extension",
                                  "query",
                                  "range",
                                  "regex",
                                  "cookie",
                                  "deviceCharacteristics",
                                  "clientip",
                                  "continent",
                                  "countrycode",
                                  "regioncode",
                                  "protocol",
                                  "method",
                                  "proxy"
                                ],
                                "type": "string"
                              },
                              "matchValue": {
                                "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                "maxLength": 8192,
                                "minLength": 1,
                                "type": "string"
                              },
                              "negate": {
                                "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                                "type": "boolean"
                              },
                              "objectMatchValue": {
                                "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.\n",
                                "oneOf": [
                                  {
                                    "additionalProperties": false,
                                    "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.\n",
                                    "properties": {
                                      "type": {
                                        "description": "The object type, which is `range`.\n",
                                        "enum": [
                                          "range"
                                        ],
                                        "type": "string"
                                      },
                                      "value": {
                                        "description": "An inclusive range comprised of two numbers to match on.\n",
                                        "items": {
                                          "type": "integer"
                                        },
                                        "nullable": true,
                                        "type": "array"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "value"
                                    ],
                                    "title": "Range",
                                    "type": "object"
                                  },
                                  {
                                    "additionalProperties": false,
                                    "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                    "properties": {
                                      "type": {
                                        "description": "The object type, which is `simple`.\n",
                                        "enum": [
                                          "simple"
                                        ],
                                        "type": "string"
                                      },
                                      "value": {
                                        "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "items": {
                                          "type": "string"
                                        },
                                        "nullable": true,
                                        "type": "array"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "value"
                                    ],
                                    "title": "Simple",
                                    "type": "object"
                                  },
                                  {
                                    "additionalProperties": false,
                                    "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                    "properties": {
                                      "name": {
                                        "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                        "maxLength": 8192,
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "nameCaseSensitive": {
                                        "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                        "type": "boolean"
                                      },
                                      "nameHasWildcard": {
                                        "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                        "type": "boolean"
                                      },
                                      "options": {
                                        "additionalProperties": false,
                                        "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                        "properties": {
                                          "value": {
                                            "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                            "items": {
                                              "type": "string"
                                            },
                                            "nullable": true,
                                            "type": "array"
                                          },
                                          "valueCaseSensitive": {
                                            "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                            "type": "boolean"
                                          },
                                          "valueEscaped": {
                                            "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                            "type": "boolean"
                                          },
                                          "valueHasWildcard": {
                                            "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                            "type": "boolean"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "type": {
                                        "description": "The array type, which is `object`.\n",
                                        "enum": [
                                          "object"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "type"
                                    ],
                                    "title": "Object",
                                    "type": "object"
                                  }
                                ],
                                "title": "Object match value",
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "nullable": true,
                          "type": "array"
                        },
                        "name": {
                          "description": "The name of the rule.\n",
                          "maxLength": 8192,
                          "nullable": true,
                          "type": "string"
                        },
                        "start": {
                          "default": 0,
                          "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "type": {
                          "description": "The type of Cloudlet the rule is for. For example, the string for Audience Segmentation is `asMatchRule`.\n",
                          "enum": [
                            "asMatchRule"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "type"
                      ],
                      "title": "Audience Segmentation",
                      "type": "object",
                      "x-akamai": {
                        "file-path": "schemas/match-rule-as.yaml"
                      }
                    },
                    {
                      "additionalProperties": false,
                      "description": "Contains match rule information for Phased Release.\n",
                      "properties": {
                        "akaRuleId": {
                          "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                          "readOnly": true,
                          "type": "string"
                        },
                        "disabled": {
                          "default": false,
                          "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                          "type": "boolean"
                        },
                        "end": {
                          "default": 0,
                          "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "forwardSettings": {
                          "additionalProperties": false,
                          "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, and `percent`.\n",
                          "properties": {
                            "originId": {
                              "description": "The conditional origin's unique identifier.\n",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "percent": {
                              "description": "The percentage of visitors directed to a different origin.\n",
                              "maximum": 100,
                              "minimum": 0,
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "description": "__Read-only__ Akamai internal use only.\n",
                          "nullable": true,
                          "readOnly": true,
                          "type": "integer"
                        },
                        "location": {
                          "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                          "readOnly": true,
                          "type": "string"
                        },
                        "matchURL": {
                          "description": "The URL the Cloudlet uses to match the incoming request.\n",
                          "maxLength": 8192,
                          "nullable": true,
                          "type": "string"
                        },
                        "matches": {
                          "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                          "items": {
                            "additionalProperties": false,
                            "description": "The match rule criteria.\n",
                            "oneOf": [
                              {
                                "required": [
                                  "matchType",
                                  "matchValue"
                                ],
                                "title": "matchType and matchValue required"
                              },
                              {
                                "required": [
                                  "matchType",
                                  "objectMatchValue"
                                ],
                                "title": "matchType and objectMatchValue required"
                              }
                            ],
                            "properties": {
                              "caseSensitive": {
                                "description": "If `true`, the match is case sensitive.\n",
                                "type": "boolean"
                              },
                              "checkIPs": {
                                "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                "enum": [
                                  "CONNECTING_IP",
                                  "XFF_HEADERS",
                                  "CONNECTING_IP XFF_HEADERS"
                                ],
                                "nullable": true,
                                "type": "string"
                              },
                              "matchOperator": {
                                "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                "enum": [
                                  "contains",
                                  "exists",
                                  "equals"
                                ],
                                "type": "string"
                              },
                              "matchType": {
                                "description": "The type of match used.\n",
                                "enum": [
                                  "header",
                                  "hostname",
                                  "path",
                                  "extension",
                                  "query",
                                  "cookie",
                                  "deviceCharacteristics",
                                  "clientip",
                                  "continent",
                                  "countrycode",
                                  "regioncode",
                                  "protocol",
                                  "method",
                                  "proxy"
                                ],
                                "type": "string"
                              },
                              "matchValue": {
                                "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                "maxLength": 8192,
                                "minLength": 1,
                                "type": "string"
                              },
                              "negate": {
                                "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                                "type": "boolean"
                              },
                              "objectMatchValue": {
                                "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                "oneOf": [
                                  {
                                    "additionalProperties": false,
                                    "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                    "properties": {
                                      "type": {
                                        "description": "The object type, which is `simple`.\n",
                                        "enum": [
                                          "simple"
                                        ],
                                        "type": "string"
                                      },
                                      "value": {
                                        "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "items": {
                                          "type": "string"
                                        },
                                        "nullable": true,
                                        "type": "array"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "value"
                                    ],
                                    "title": "Simple",
                                    "type": "object"
                                  },
                                  {
                                    "additionalProperties": false,
                                    "description": "Use this for more complex match criteria.\n",
                                    "properties": {
                                      "name": {
                                        "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                        "maxLength": 8192,
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "nameCaseSensitive": {
                                        "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                        "type": "boolean"
                                      },
                                      "nameHasWildcard": {
                                        "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                        "type": "boolean"
                                      },
                                      "options": {
                                        "additionalProperties": false,
                                        "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                        "properties": {
                                          "value": {
                                            "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                            "items": {
                                              "type": "string"
                                            },
                                            "nullable": true,
                                            "type": "array"
                                          },
                                          "valueCaseSensitive": {
                                            "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                            "type": "boolean"
                                          },
                                          "valueEscaped": {
                                            "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                            "type": "boolean"
                                          },
                                          "valueHasWildcard": {
                                            "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                            "type": "boolean"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "type": {
                                        "description": "The array type, which is `object`.\n",
                                        "enum": [
                                          "object"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "type"
                                    ],
                                    "title": "Object",
                                    "type": "object"
                                  }
                                ],
                                "title": "Object match value",
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "nullable": true,
                          "type": "array"
                        },
                        "matchesAlways": {
                          "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n",
                          "type": "boolean"
                        },
                        "name": {
                          "description": "The name of the rule.\n",
                          "maxLength": 8192,
                          "nullable": true,
                          "type": "string"
                        },
                        "start": {
                          "default": 0,
                          "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "type": {
                          "description": "The type of Cloudlet the rule is for. For example, the string for Phased Release is `cdMatchRule`.\n",
                          "enum": [
                            "cdMatchRule"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "type"
                      ],
                      "title": "Phased Release",
                      "type": "object",
                      "x-akamai": {
                        "file-path": "schemas/match-rule-cd.yaml"
                      }
                    },
                    {
                      "additionalProperties": false,
                      "description": "Contains match rule information for Edge Redirector.\n",
                      "properties": {
                        "akaRuleId": {
                          "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                          "readOnly": true,
                          "type": "string"
                        },
                        "disabled": {
                          "default": false,
                          "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                          "type": "boolean"
                        },
                        "end": {
                          "default": 0,
                          "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "id": {
                          "description": "__Read-only__ Akamai internal use only.\n",
                          "nullable": true,
                          "readOnly": true,
                          "type": "integer"
                        },
                        "location": {
                          "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                          "readOnly": true,
                          "type": "string"
                        },
                        "matchURL": {
                          "description": "The URL the Cloudlet uses to match the incoming request.\n",
                          "maxLength": 8192,
                          "nullable": true,
                          "type": "string"
                        },
                        "matches": {
                          "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                          "items": {
                            "additionalProperties": false,
                            "description": "The match rule criteria.\n",
                            "oneOf": [
                              {
                                "required": [
                                  "matchType",
                                  "matchValue"
                                ],
                                "title": "matchType and matchValue required"
                              },
                              {
                                "required": [
                                  "matchType",
                                  "objectMatchValue"
                                ],
                                "title": "matchType and objectMatchValue required"
                              }
                            ],
                            "properties": {
                              "caseSensitive": {
                                "description": "If `true`, the match is case sensitive.\n",
                                "type": "boolean"
                              },
                              "checkIPs": {
                                "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                "enum": [
                                  "CONNECTING_IP",
                                  "XFF_HEADERS",
                                  "CONNECTING_IP XFF_HEADERS"
                                ],
                                "nullable": true,
                                "type": "string"
                              },
                              "matchOperator": {
                                "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                "enum": [
                                  "contains",
                                  "exists",
                                  "equals"
                                ],
                                "type": "string"
                              },
                              "matchType": {
                                "description": "The type of match used.\n",
                                "enum": [
                                  "header",
                                  "hostname",
                                  "path",
                                  "extension",
                                  "query",
                                  "regex",
                                  "cookie",
                                  "deviceCharacteristics",
                                  "clientip",
                                  "continent",
                                  "countrycode",
                                  "regioncode",
                                  "protocol",
                                  "method",
                                  "proxy"
                                ],
                                "type": "string"
                              },
                              "matchValue": {
                                "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                "maxLength": 8192,
                                "minLength": 1,
                                "type": "string"
                              },
                              "negate": {
                                "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                                "type": "boolean"
                              },
                              "objectMatchValue": {
                                "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                "oneOf": [
                                  {
                                    "additionalProperties": false,
                                    "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                    "properties": {
                                      "type": {
                                        "description": "The object type, which is `simple`.\n",
                                        "enum": [
                                          "simple"
                                        ],
                                        "type": "string"
                                      },
                                      "value": {
                                        "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "items": {
                                          "type": "string"
                                        },
                                        "nullable": true,
                                        "type": "array"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "value"
                                    ],
                                    "title": "Simple",
                                    "type": "object"
                                  },
                                  {
                                    "additionalProperties": false,
                                    "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                    "properties": {
                                      "name": {
                                        "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                        "maxLength": 8192,
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "nameCaseSensitive": {
                                        "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                        "type": "boolean"
                                      },
                                      "nameHasWildcard": {
                                        "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                        "type": "boolean"
                                      },
                                      "options": {
                                        "additionalProperties": false,
                                        "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                        "properties": {
                                          "value": {
                                            "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                            "items": {
                                              "type": "string"
                                            },
                                            "nullable": true,
                                            "type": "array"
                                          },
                                          "valueCaseSensitive": {
                                            "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                            "type": "boolean"
                                          },
                                          "valueEscaped": {
                                            "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                            "type": "boolean"
                                          },
                                          "valueHasWildcard": {
                                            "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                            "type": "boolean"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "type": {
                                        "description": "The array type, which is `object`.\n",
                                        "enum": [
                                          "object"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "type"
                                    ],
                                    "title": "Object",
                                    "type": "object"
                                  }
                                ],
                                "title": "Object match value",
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "nullable": true,
                          "type": "array"
                        },
                        "matchesAlways": {
                          "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n",
                          "type": "boolean"
                        },
                        "name": {
                          "description": "The name of the rule.\n",
                          "maxLength": 8192,
                          "nullable": true,
                          "type": "string"
                        },
                        "redirectURL": {
                          "description": "The URL Edge Redirector redirects the request to. If using `useRelativeUrl`, you can enter a path for the value. If `useRelativeUrl` is not used or set to `none`, then the `redirectUrl` should be a fully qualified URL.\n",
                          "maxLength": 8192,
                          "minLength": 1,
                          "type": "string"
                        },
                        "start": {
                          "default": 0,
                          "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "statusCode": {
                          "description": "The HTTP response redirect type status code: `301` for permanent redirect, `302` for temporary redirect, `303` for temporary using GET, `307` for temporary retain method, or `308` for permanent retain method.\n",
                          "enum": [
                            301,
                            302,
                            303,
                            307,
                            308
                          ],
                          "type": "integer"
                        },
                        "type": {
                          "description": "The type of Cloudlet the rule is for. For example, the string for Edge Redirector is `erMatchRule`.\n",
                          "enum": [
                            "erMatchRule"
                          ],
                          "type": "string"
                        },
                        "useIncomingQueryString": {
                          "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n",
                          "type": "boolean"
                        },
                        "useIncomingSchemeAndHost": {
                          "description": "If set to `true`, the Cloudlet copies both the scheme and the hostname from the incoming request to use in the redirect URL.\n",
                          "type": "boolean"
                        },
                        "useRelativeUrl": {
                          "description": "If set to `relative_url`, takes the path entered for the `redirectUrl` and sets it in the response’s `Location` header. The client browser receiving the request decides which protocol and hostname to use. If set to `copy_scheme_hostname`, it creates an absolute path by taking the protocol and hostname from the incoming request and combining them with path information entered for the `redirectUrl`. This absolute path is set in the response’s `Location` header. If you don't include `useRelativeUrl`, or if you set it to `none`, then specify the `redirectUrl` as a fully qualified URL.\n",
                          "enum": [
                            "relative_url",
                            "copy_scheme_hostname",
                            "none"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "redirectURL",
                        "statusCode"
                      ],
                      "title": "Edge Redirector",
                      "type": "object",
                      "x-akamai": {
                        "file-path": "schemas/match-rule-er.yaml"
                      }
                    },
                    {
                      "additionalProperties": false,
                      "description": "Contains match rule information for Forward Rewrite.\n",
                      "properties": {
                        "akaRuleId": {
                          "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                          "readOnly": true,
                          "type": "string"
                        },
                        "disabled": {
                          "default": false,
                          "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                          "type": "boolean"
                        },
                        "end": {
                          "default": 0,
                          "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "forwardSettings": {
                          "additionalProperties": false,
                          "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                          "properties": {
                            "originId": {
                              "description": "The conditional origin's unique identifier.\n",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "pathAndQS": {
                              "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                              "maxLength": 8192,
                              "minLength": 1,
                              "type": "string"
                            },
                            "useIncomingQueryString": {
                              "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n",
                              "type": "boolean"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "description": "__Read-only__ Akamai internal use only.\n",
                          "nullable": true,
                          "readOnly": true,
                          "type": "integer"
                        },
                        "location": {
                          "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                          "readOnly": true,
                          "type": "string"
                        },
                        "matchURL": {
                          "description": "The URL the Cloudlet uses to match the incoming request.\n",
                          "maxLength": 8192,
                          "nullable": true,
                          "type": "string"
                        },
                        "matches": {
                          "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                          "items": {
                            "additionalProperties": false,
                            "description": "The match rule criteria.\n",
                            "oneOf": [
                              {
                                "required": [
                                  "matchType",
                                  "matchValue"
                                ],
                                "title": "matchType and matchValue required"
                              },
                              {
                                "required": [
                                  "matchType",
                                  "objectMatchValue"
                                ],
                                "title": "matchType and objectMatchValue required"
                              }
                            ],
                            "properties": {
                              "caseSensitive": {
                                "description": "If `true`, the match is case sensitive.\n",
                                "type": "boolean"
                              },
                              "checkIPs": {
                                "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                "enum": [
                                  "CONNECTING_IP",
                                  "XFF_HEADERS",
                                  "CONNECTING_IP XFF_HEADERS"
                                ],
                                "type": "string"
                              },
                              "matchOperator": {
                                "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                "enum": [
                                  "contains",
                                  "exists",
                                  "equals"
                                ],
                                "type": "string"
                              },
                              "matchType": {
                                "description": "The type of match used.\n",
                                "enum": [
                                  "header",
                                  "hostname",
                                  "path",
                                  "extension",
                                  "query",
                                  "regex",
                                  "cookie",
                                  "deviceCharacteristics",
                                  "clientip",
                                  "continent",
                                  "countrycode",
                                  "regioncode",
                                  "protocol",
                                  "method",
                                  "proxy"
                                ],
                                "type": "string"
                              },
                              "matchValue": {
                                "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                "maxLength": 8192,
                                "minLength": 1,
                                "type": "string"
                              },
                              "negate": {
                                "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                                "type": "boolean"
                              },
                              "objectMatchValue": {
                                "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                "oneOf": [
                                  {
                                    "additionalProperties": false,
                                    "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                    "properties": {
                                      "type": {
                                        "description": "The object type, which is `simple`.\n",
                                        "enum": [
                                          "simple"
                                        ],
                                        "type": "string"
                                      },
                                      "value": {
                                        "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "items": {
                                          "type": "string"
                                        },
                                        "nullable": true,
                                        "type": "array"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "value"
                                    ],
                                    "title": "Simple",
                                    "type": "object"
                                  },
                                  {
                                    "additionalProperties": false,
                                    "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                    "properties": {
                                      "name": {
                                        "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                        "maxLength": 8192,
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "nameCaseSensitive": {
                                        "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                        "type": "boolean"
                                      },
                                      "nameHasWildcard": {
                                        "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                        "type": "boolean"
                                      },
                                      "options": {
                                        "additionalProperties": false,
                                        "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                        "properties": {
                                          "value": {
                                            "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                            "items": {
                                              "type": "string"
                                            },
                                            "nullable": true,
                                            "type": "array"
                                          },
                                          "valueCaseSensitive": {
                                            "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                            "type": "boolean"
                                          },
                                          "valueEscaped": {
                                            "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                            "type": "boolean"
                                          },
                                          "valueHasWildcard": {
                                            "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                            "type": "boolean"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "type": {
                                        "description": "The array type, which is `object`.\n",
                                        "enum": [
                                          "object"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "type"
                                    ],
                                    "title": "Object",
                                    "type": "object"
                                  }
                                ],
                                "title": "Object match value",
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "nullable": true,
                          "type": "array"
                        },
                        "name": {
                          "description": "The name of the rule.\n",
                          "maxLength": 8192,
                          "nullable": true,
                          "type": "string"
                        },
                        "start": {
                          "default": 0,
                          "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "type": {
                          "description": "The type of Cloudlet the rule is for. For example, the string for Forward Rewrite is `frMatchRule`.\n",
                          "enum": [
                            "frMatchRule"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "forwardSettings"
                      ],
                      "title": "Forward Rewrite",
                      "type": "object",
                      "x-akamai": {
                        "file-path": "schemas/match-rule-fr.yaml"
                      }
                    },
                    {
                      "additionalProperties": false,
                      "description": "Contains match rule information for Request Control.\n",
                      "properties": {
                        "akaRuleId": {
                          "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                          "readOnly": true,
                          "type": "string"
                        },
                        "allowDeny": {
                          "description": "If set to `allow`, the request is sent to origin when all conditions are true. If `deny`, the request is denied when all conditions are true. If `denybranded`, the request is denied and rerouted according to the configuration of the [Request Control behavior](https://techdocs.akamai.com/property-mgr/reference/latest-request-control).\n",
                          "enum": [
                            "allow",
                            "deny",
                            "denybranded"
                          ],
                          "type": "string"
                        },
                        "disabled": {
                          "default": false,
                          "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                          "type": "boolean"
                        },
                        "end": {
                          "default": 0,
                          "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "id": {
                          "description": "__Read-only__ Akamai internal use only.\n",
                          "nullable": true,
                          "readOnly": true,
                          "type": "integer"
                        },
                        "location": {
                          "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                          "readOnly": true,
                          "type": "string"
                        },
                        "matches": {
                          "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                          "items": {
                            "additionalProperties": false,
                            "description": "The match rule criteria.\n",
                            "oneOf": [
                              {
                                "required": [
                                  "matchType",
                                  "matchValue"
                                ],
                                "title": "matchType and matchValue required"
                              },
                              {
                                "required": [
                                  "matchType",
                                  "objectMatchValue"
                                ],
                                "title": "matchType and objectMatchValue required"
                              }
                            ],
                            "properties": {
                              "caseSensitive": {
                                "description": "If `true`, the match is case sensitive.\n",
                                "type": "boolean"
                              },
                              "checkIPs": {
                                "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                "enum": [
                                  "CONNECTING_IP",
                                  "XFF_HEADERS",
                                  "CONNECTING_IP XFF_HEADERS"
                                ],
                                "type": "string"
                              },
                              "matchOperator": {
                                "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                "enum": [
                                  "contains",
                                  "exists",
                                  "equals"
                                ],
                                "type": "string"
                              },
                              "matchType": {
                                "description": "The type of match used.\n",
                                "enum": [
                                  "clientip",
                                  "continent",
                                  "cookie",
                                  "countrycode",
                                  "deviceCharacteristics",
                                  "extension",
                                  "header",
                                  "hostname",
                                  "method",
                                  "path",
                                  "protocol",
                                  "proxy",
                                  "query",
                                  "regioncode"
                                ],
                                "type": "string"
                              },
                              "matchValue": {
                                "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                "maxLength": 8192,
                                "minLength": 1,
                                "type": "string"
                              },
                              "negate": {
                                "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                                "type": "boolean"
                              },
                              "objectMatchValue": {
                                "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                "oneOf": [
                                  {
                                    "additionalProperties": false,
                                    "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                    "properties": {
                                      "type": {
                                        "description": "The object type, which is `simple`.\n",
                                        "enum": [
                                          "simple"
                                        ],
                                        "type": "string"
                                      },
                                      "value": {
                                        "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "items": {
                                          "type": "string"
                                        },
                                        "nullable": true,
                                        "type": "array"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "value"
                                    ],
                                    "title": "Simple",
                                    "type": "object"
                                  },
                                  {
                                    "additionalProperties": false,
                                    "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                    "properties": {
                                      "name": {
                                        "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                        "maxLength": 8192,
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "nameCaseSensitive": {
                                        "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                        "type": "boolean"
                                      },
                                      "nameHasWildcard": {
                                        "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                        "type": "boolean"
                                      },
                                      "options": {
                                        "additionalProperties": false,
                                        "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                        "properties": {
                                          "value": {
                                            "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                            "items": {
                                              "type": "string"
                                            },
                                            "nullable": true,
                                            "type": "array"
                                          },
                                          "valueCaseSensitive": {
                                            "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                            "type": "boolean"
                                          },
                                          "valueEscaped": {
                                            "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                            "type": "boolean"
                                          },
                                          "valueHasWildcard": {
                                            "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                            "type": "boolean"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "type": {
                                        "description": "The array type, which is `object`.\n",
                                        "enum": [
                                          "object"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "type"
                                    ],
                                    "title": "Object",
                                    "type": "object"
                                  }
                                ],
                                "title": "Object match value",
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "nullable": true,
                          "type": "array"
                        },
                        "matchesAlways": {
                          "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n",
                          "type": "boolean"
                        },
                        "name": {
                          "description": "The name of the rule.\n",
                          "maxLength": 8192,
                          "nullable": true,
                          "type": "string"
                        },
                        "start": {
                          "default": 0,
                          "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "type": {
                          "description": "The type of Cloudlet the rule is for. For example, the string for Request Control is `igMatchRule`.\n",
                          "enum": [
                            "igMatchRule"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "allowDeny"
                      ],
                      "title": "Request Control",
                      "type": "object",
                      "x-akamai": {
                        "file-path": "schemas/match-rule-ig.yaml"
                      }
                    },
                    {
                      "type": "object",
                      "description": "Contains match rule information for Visitor Prioritization.\n",
                      "title": "Visitor Prioritization",
                      "additionalProperties": false,
                      "required": [
                        "type",
                        "passThroughPercent"
                      ],
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "Akamai internal use only.\n",
                          "nullable": true,
                          "readOnly": true
                        },
                        "location": {
                          "type": "string",
                          "description": "The navigable endpoint used for the object referred to in the operation.\n",
                          "readOnly": true
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the rule.\n",
                          "nullable": true,
                          "maxLength": 8192
                        },
                        "type": {
                          "type": "string",
                          "description": "The type of Cloudlet the rule is for. For example, the string for Visitor Prioritization is `vpMatchRule`.\n",
                          "enum": [
                            "vpMatchRule"
                          ]
                        },
                        "akaRuleId": {
                          "type": "string",
                          "description": "The rule's unique identifier within the policy version.\n",
                          "readOnly": true
                        },
                        "start": {
                          "type": "integer",
                          "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                          "default": 0,
                          "minimum": 0
                        },
                        "end": {
                          "type": "integer",
                          "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                          "default": 0,
                          "minimum": 0
                        },
                        "matches": {
                          "type": "array",
                          "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                          "nullable": true,
                          "items": {
                            "type": "object",
                            "description": "The match rule criteria.\n",
                            "additionalProperties": false,
                            "oneOf": [
                              {
                                "required": [
                                  "matchType",
                                  "matchValue"
                                ],
                                "title": "matchType and matchValue required"
                              },
                              {
                                "required": [
                                  "matchType",
                                  "objectMatchValue"
                                ],
                                "title": "matchType and objectMatchValue required"
                              }
                            ],
                            "properties": {
                              "caseSensitive": {
                                "type": "boolean",
                                "description": "If `true`, the match is case sensitive.\n"
                              },
                              "matchValue": {
                                "type": "string",
                                "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                "minLength": 1,
                                "maxLength": 8192
                              },
                              "negate": {
                                "type": "boolean",
                                "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                              },
                              "matchOperator": {
                                "type": "string",
                                "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                "enum": [
                                  "contains",
                                  "exists",
                                  "equals"
                                ]
                              },
                              "matchType": {
                                "type": "string",
                                "description": "The type of match used.\n",
                                "enum": [
                                  "hostname",
                                  "path",
                                  "extension",
                                  "query",
                                  "cookie",
                                  "deviceCharacteristics",
                                  "clientip",
                                  "continent",
                                  "countrycode",
                                  "regioncode",
                                  "protocol",
                                  "header",
                                  "method",
                                  "proxy"
                                ]
                              },
                              "checkIPs": {
                                "type": "string",
                                "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                "enum": [
                                  "CONNECTING_IP",
                                  "XFF_HEADERS",
                                  "CONNECTING_IP XFF_HEADERS"
                                ]
                              },
                              "objectMatchValue": {
                                "type": "object",
                                "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                "title": "Object match value",
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                    "title": "Simple",
                                    "additionalProperties": false,
                                    "required": [
                                      "type",
                                      "value"
                                    ],
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "The object type, which is `simple`.\n",
                                        "enum": [
                                          "simple"
                                        ]
                                      },
                                      "value": {
                                        "type": "array",
                                        "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "nullable": true,
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                    "title": "Object",
                                    "additionalProperties": false,
                                    "required": [
                                      "name",
                                      "type"
                                    ],
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                        "minLength": 1,
                                        "maxLength": 8192
                                      },
                                      "type": {
                                        "type": "string",
                                        "description": "The array type, which is `object`.\n",
                                        "enum": [
                                          "object"
                                        ]
                                      },
                                      "options": {
                                        "type": "object",
                                        "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                        "additionalProperties": false,
                                        "properties": {
                                          "value": {
                                            "type": "array",
                                            "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                            "nullable": true,
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "valueHasWildcard": {
                                            "type": "boolean",
                                            "description": "Set to `true` if the entries for `value` includes wildcards.\n"
                                          },
                                          "valueCaseSensitive": {
                                            "type": "boolean",
                                            "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n"
                                          },
                                          "valueEscaped": {
                                            "type": "boolean",
                                            "description": "Set to `true` if the entries for `value` includes escaped characters.\n"
                                          }
                                        }
                                      },
                                      "nameCaseSensitive": {
                                        "type": "boolean",
                                        "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                      },
                                      "nameHasWildcard": {
                                        "type": "boolean",
                                        "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        },
                        "disabled": {
                          "type": "boolean",
                          "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                          "default": false
                        },
                        "passThroughPercent": {
                          "type": "number",
                          "description": "The range `0.000: 99.000` specifies the percentage of requests that pass through to the origin. The value of `100` means the request always passes through to the origin. For Visitor Prioritization, a value of `-1` means send everyone to the waiting room.\n",
                          "minimum": -1,
                          "maximum": 100
                        },
                        "matchURL": {
                          "type": "string",
                          "description": "The URL the Cloudlet uses to match the incoming request.\n",
                          "nullable": true,
                          "maxLength": 8192
                        },
                        "useIncomingQueryString": {
                          "type": "boolean",
                          "description": "If set to `true`, the Cloudlet includes the request's query string in the rewritten or forwarded URL.\n"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "put-policy-version-rule",
        "summary": "Update a version rule",
        "tags": [
          "Version rules"
        ],
        "description": "Updates attributes of an existing rule within a policy version. When updating a rule, set `disabled` to `true` to prevent the rule from being evaluated against incoming requests.\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "start": 0,
                "end": 0,
                "type": "asMatchRule",
                "disabled": "true",
                "name": "Q1Sales",
                "id": null,
                "forwardSettings": {
                  "originId": "originremote2",
                  "useIncomingQueryString": true,
                  "pathAndQS": "/sales/Q1/"
                },
                "matches": [
                  {
                    "matchType": "range",
                    "matchOperator": "equals",
                    "negate": false,
                    "caseSensitive": false,
                    "objectMatchValue": {
                      "type": "range",
                      "value": [
                        1,
                        25
                      ]
                    }
                  }
                ]
              },
              "schema": {
                "description": "Contains information about match rules.\n",
                "oneOf": [
                  {
                    "type": "object",
                    "description": "Contains match rule information for Application Load Balancer.\n",
                    "title": "Application Load Balancer",
                    "additionalProperties": false,
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "Akamai internal use only.\n",
                        "nullable": true,
                        "readOnly": true
                      },
                      "location": {
                        "type": "string",
                        "description": "The navigable endpoint used for the object referred to in the operation.\n",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the rule.\n",
                        "nullable": true,
                        "maxLength": 8192
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of Cloudlet the rule is for. For example, the string for Application Load Balancer is `albMatchRule`.\n",
                        "enum": [
                          "albMatchRule"
                        ]
                      },
                      "akaRuleId": {
                        "type": "string",
                        "description": "The rule's unique identifier within the policy version.\n",
                        "readOnly": true
                      },
                      "disabled": {
                        "type": "boolean",
                        "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                        "default": false
                      },
                      "start": {
                        "type": "integer",
                        "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                        "default": 0,
                        "minimum": 0
                      },
                      "end": {
                        "type": "integer",
                        "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                        "default": 0,
                        "minimum": 0
                      },
                      "matchURL": {
                        "type": "string",
                        "description": "The URL the Cloudlet uses to match the incoming request.\n",
                        "nullable": true,
                        "maxLength": 8192
                      },
                      "matches": {
                        "type": "array",
                        "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                        "nullable": true,
                        "items": {
                          "type": "object",
                          "description": "The match rule criteria.\n",
                          "additionalProperties": false,
                          "oneOf": [
                            {
                              "required": [
                                "matchType",
                                "matchValue"
                              ],
                              "title": "matchType and matchValue required"
                            },
                            {
                              "required": [
                                "matchType",
                                "objectMatchValue"
                              ],
                              "title": "matchType and objectMatchValue required"
                            }
                          ],
                          "properties": {
                            "caseSensitive": {
                              "type": "boolean",
                              "description": "If `true`, the match is case sensitive.\n"
                            },
                            "checkIPs": {
                              "type": "string",
                              "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                              "nullable": true,
                              "enum": [
                                "CONNECTING_IP",
                                "XFF_HEADERS",
                                "CONNECTING_IP XFF_HEADERS"
                              ]
                            },
                            "matchOperator": {
                              "type": "string",
                              "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                              "enum": [
                                "contains",
                                "exists",
                                "equals"
                              ]
                            },
                            "matchType": {
                              "type": "string",
                              "description": "The type of match used.\n",
                              "enum": [
                                "header",
                                "hostname",
                                "path",
                                "extension",
                                "query",
                                "regex",
                                "cookie",
                                "deviceCharacteristics",
                                "clientip",
                                "continent",
                                "countrycode",
                                "regioncode",
                                "protocol",
                                "method",
                                "proxy"
                              ]
                            },
                            "matchValue": {
                              "type": "string",
                              "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                              "minLength": 1,
                              "maxLength": 8192
                            },
                            "negate": {
                              "type": "boolean",
                              "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                            },
                            "objectMatchValue": {
                              "type": "object",
                              "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                              "title": "Object match value",
                              "oneOf": [
                                {
                                  "type": "object",
                                  "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                  "title": "Simple",
                                  "additionalProperties": false,
                                  "required": [
                                    "type",
                                    "value"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "description": "The object type, which is `simple`.\n",
                                      "enum": [
                                        "simple"
                                      ]
                                    },
                                    "value": {
                                      "type": "array",
                                      "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                      "nullable": true,
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "description": "Use this for more complex match criteria.\n",
                                  "title": "Object",
                                  "additionalProperties": false,
                                  "required": [
                                    "name",
                                    "type"
                                  ],
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                      "minLength": 1,
                                      "maxLength": 8192
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "The array type, which is `object`.\n",
                                      "enum": [
                                        "object"
                                      ]
                                    },
                                    "options": {
                                      "type": "object",
                                      "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                      "additionalProperties": false,
                                      "properties": {
                                        "value": {
                                          "type": "array",
                                          "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                          "nullable": true,
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "valueCaseSensitive": {
                                          "type": "boolean",
                                          "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n"
                                        },
                                        "valueEscaped": {
                                          "type": "boolean",
                                          "description": "Set to `true` if the entries for `value` includes escaped characters.\n"
                                        },
                                        "valueHasWildcard": {
                                          "type": "boolean",
                                          "description": "Set to `true` if the entries for `value` includes wildcards.\n"
                                        }
                                      }
                                    },
                                    "nameCaseSensitive": {
                                      "type": "boolean",
                                      "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                    },
                                    "nameHasWildcard": {
                                      "type": "boolean",
                                      "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      },
                      "matchesAlways": {
                        "type": "boolean",
                        "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n"
                      },
                      "forwardSettings": {
                        "type": "object",
                        "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                        "additionalProperties": false,
                        "properties": {
                          "pathAndQS": {
                            "type": "string",
                            "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                            "minLength": 1,
                            "maxLength": 8192
                          },
                          "useIncomingQueryString": {
                            "type": "boolean",
                            "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n"
                          },
                          "originId": {
                            "type": "string",
                            "description": "The conditional origin's unique identifier.\n",
                            "nullable": true,
                            "maxLength": 8192
                          }
                        }
                      }
                    }
                  },
                  {
                    "additionalProperties": false,
                    "description": "Contains match rule information for API Prioritization.\n",
                    "properties": {
                      "akaRuleId": {
                        "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                        "readOnly": true,
                        "type": "string"
                      },
                      "disabled": {
                        "default": false,
                        "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                        "type": "boolean"
                      },
                      "end": {
                        "default": 0,
                        "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "id": {
                        "description": "__Read-only__ Akamai internal use only.\n",
                        "nullable": true,
                        "readOnly": true,
                        "type": "integer"
                      },
                      "location": {
                        "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                        "readOnly": true,
                        "type": "string"
                      },
                      "matchURL": {
                        "description": "The URL the Cloudlet uses to match the incoming request.\n",
                        "maxLength": 8192,
                        "nullable": true,
                        "type": "string"
                      },
                      "matches": {
                        "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                        "items": {
                          "additionalProperties": false,
                          "description": "The match rule criteria.\n",
                          "oneOf": [
                            {
                              "required": [
                                "matchType",
                                "matchValue"
                              ],
                              "title": "matchType and matchValue required"
                            },
                            {
                              "required": [
                                "matchType",
                                "objectMatchValue"
                              ],
                              "title": "matchType and objectMatchValue required"
                            }
                          ],
                          "properties": {
                            "caseSensitive": {
                              "description": "If `true`, the match is case sensitive.\n",
                              "type": "boolean"
                            },
                            "checkIPs": {
                              "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                              "enum": [
                                "CONNECTING_IP",
                                "XFF_HEADERS",
                                "CONNECTING_IP XFF_HEADERS"
                              ],
                              "type": "string"
                            },
                            "matchOperator": {
                              "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                              "enum": [
                                "contains",
                                "exists",
                                "equals"
                              ],
                              "type": "string"
                            },
                            "matchType": {
                              "description": "The type of match used.\n",
                              "enum": [
                                "hostname",
                                "path",
                                "extension",
                                "query",
                                "cookie",
                                "deviceCharacteristics",
                                "clientip",
                                "continent",
                                "countrycode",
                                "regioncode",
                                "protocol",
                                "header",
                                "method",
                                "proxy"
                              ],
                              "type": "string"
                            },
                            "matchValue": {
                              "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                              "maxLength": 8192,
                              "minLength": 1,
                              "type": "string"
                            },
                            "negate": {
                              "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                              "type": "boolean"
                            },
                            "objectMatchValue": {
                              "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                              "oneOf": [
                                {
                                  "additionalProperties": false,
                                  "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                  "properties": {
                                    "type": {
                                      "description": "The object type, which is `simple`.\n",
                                      "enum": [
                                        "simple"
                                      ],
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                      "items": {
                                        "type": "string"
                                      },
                                      "nullable": true,
                                      "type": "array"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "value"
                                  ],
                                  "title": "Simple",
                                  "type": "object"
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Use this for more complex match criteria.\n",
                                  "properties": {
                                    "name": {
                                      "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "nameCaseSensitive": {
                                      "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                      "type": "boolean"
                                    },
                                    "nameHasWildcard": {
                                      "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                      "type": "boolean"
                                    },
                                    "options": {
                                      "additionalProperties": false,
                                      "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                      "properties": {
                                        "value": {
                                          "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                          "items": {
                                            "type": "string"
                                          },
                                          "nullable": true,
                                          "type": "array"
                                        },
                                        "valueCaseSensitive": {
                                          "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                          "type": "boolean"
                                        },
                                        "valueEscaped": {
                                          "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                          "type": "boolean"
                                        },
                                        "valueHasWildcard": {
                                          "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                          "type": "boolean"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": {
                                      "description": "The array type, which is `object`.\n",
                                      "enum": [
                                        "object"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "type"
                                  ],
                                  "title": "Object",
                                  "type": "object"
                                }
                              ],
                              "title": "Object match value",
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "nullable": true,
                        "type": "array"
                      },
                      "name": {
                        "description": "The name of the rule.\n",
                        "maxLength": 8192,
                        "nullable": true,
                        "type": "string"
                      },
                      "passThroughPercent": {
                        "description": "The percentage of requests that pass through to the origin, with `100` indicating the request always passes through to the origin. For Visitor Prioritization, a value of -1 sends everyone to the waiting room.\n",
                        "maximum": 100,
                        "minimum": -1,
                        "type": "number"
                      },
                      "start": {
                        "default": 0,
                        "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "type": {
                        "description": "The type of Cloudlet the rule is for. For example, the string for API Prioritization is `apMatchRule`.\n",
                        "enum": [
                          "apMatchRule"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "passThroughPercent"
                    ],
                    "title": "API Prioritization",
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/match-rule-ap.yaml"
                    }
                  },
                  {
                    "additionalProperties": false,
                    "description": "Contains match rule information for Audience Segmentation.\n",
                    "properties": {
                      "akaRuleId": {
                        "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                        "readOnly": true,
                        "type": "string"
                      },
                      "disabled": {
                        "default": false,
                        "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                        "type": "boolean"
                      },
                      "end": {
                        "default": 0,
                        "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "forwardSettings": {
                        "additionalProperties": false,
                        "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                        "properties": {
                          "originId": {
                            "description": "The conditional origin's unique identifier.\n",
                            "maxLength": 8192,
                            "nullable": true,
                            "type": "string"
                          },
                          "pathAndQS": {
                            "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                            "maxLength": 8192,
                            "minLength": 1,
                            "type": "string"
                          },
                          "useIncomingQueryString": {
                            "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n",
                            "type": "boolean"
                          }
                        },
                        "type": "object"
                      },
                      "id": {
                        "description": "__Read-only__ Akamai internal use only.\n",
                        "nullable": true,
                        "readOnly": true,
                        "type": "integer"
                      },
                      "location": {
                        "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                        "readOnly": true,
                        "type": "string"
                      },
                      "matchURL": {
                        "description": "The URL the Cloudlet uses to match the incoming request.\n",
                        "maxLength": 8192,
                        "nullable": true,
                        "type": "string"
                      },
                      "matches": {
                        "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                        "items": {
                          "additionalProperties": false,
                          "description": "The match rule criteria.\n",
                          "oneOf": [
                            {
                              "required": [
                                "matchType",
                                "matchValue"
                              ],
                              "title": "matchType and matchValue required"
                            },
                            {
                              "required": [
                                "matchType",
                                "objectMatchValue"
                              ],
                              "title": "matchType and objectMatchValue required"
                            }
                          ],
                          "properties": {
                            "caseSensitive": {
                              "description": "If `true`, the match is case sensitive.\n",
                              "type": "boolean"
                            },
                            "checkIPs": {
                              "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                              "enum": [
                                "CONNECTING_IP",
                                "XFF_HEADERS",
                                "CONNECTING_IP XFF_HEADERS"
                              ],
                              "type": "string"
                            },
                            "matchOperator": {
                              "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                              "enum": [
                                "contains",
                                "exists",
                                "equals"
                              ],
                              "type": "string"
                            },
                            "matchType": {
                              "description": "The type of match used.\n",
                              "enum": [
                                "header",
                                "hostname",
                                "path",
                                "extension",
                                "query",
                                "range",
                                "regex",
                                "cookie",
                                "deviceCharacteristics",
                                "clientip",
                                "continent",
                                "countrycode",
                                "regioncode",
                                "protocol",
                                "method",
                                "proxy"
                              ],
                              "type": "string"
                            },
                            "matchValue": {
                              "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                              "maxLength": 8192,
                              "minLength": 1,
                              "type": "string"
                            },
                            "negate": {
                              "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                              "type": "boolean"
                            },
                            "objectMatchValue": {
                              "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.\n",
                              "oneOf": [
                                {
                                  "additionalProperties": false,
                                  "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.\n",
                                  "properties": {
                                    "type": {
                                      "description": "The object type, which is `range`.\n",
                                      "enum": [
                                        "range"
                                      ],
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "An inclusive range comprised of two numbers to match on.\n",
                                      "items": {
                                        "type": "integer"
                                      },
                                      "nullable": true,
                                      "type": "array"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "value"
                                  ],
                                  "title": "Range",
                                  "type": "object"
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                  "properties": {
                                    "type": {
                                      "description": "The object type, which is `simple`.\n",
                                      "enum": [
                                        "simple"
                                      ],
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                      "items": {
                                        "type": "string"
                                      },
                                      "nullable": true,
                                      "type": "array"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "value"
                                  ],
                                  "title": "Simple",
                                  "type": "object"
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                  "properties": {
                                    "name": {
                                      "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "nameCaseSensitive": {
                                      "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                      "type": "boolean"
                                    },
                                    "nameHasWildcard": {
                                      "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                      "type": "boolean"
                                    },
                                    "options": {
                                      "additionalProperties": false,
                                      "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                      "properties": {
                                        "value": {
                                          "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                          "items": {
                                            "type": "string"
                                          },
                                          "nullable": true,
                                          "type": "array"
                                        },
                                        "valueCaseSensitive": {
                                          "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                          "type": "boolean"
                                        },
                                        "valueEscaped": {
                                          "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                          "type": "boolean"
                                        },
                                        "valueHasWildcard": {
                                          "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                          "type": "boolean"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": {
                                      "description": "The array type, which is `object`.\n",
                                      "enum": [
                                        "object"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "type"
                                  ],
                                  "title": "Object",
                                  "type": "object"
                                }
                              ],
                              "title": "Object match value",
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "nullable": true,
                        "type": "array"
                      },
                      "name": {
                        "description": "The name of the rule.\n",
                        "maxLength": 8192,
                        "nullable": true,
                        "type": "string"
                      },
                      "start": {
                        "default": 0,
                        "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "type": {
                        "description": "The type of Cloudlet the rule is for. For example, the string for Audience Segmentation is `asMatchRule`.\n",
                        "enum": [
                          "asMatchRule"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "type"
                    ],
                    "title": "Audience Segmentation",
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/match-rule-as.yaml"
                    }
                  },
                  {
                    "additionalProperties": false,
                    "description": "Contains match rule information for Phased Release.\n",
                    "properties": {
                      "akaRuleId": {
                        "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                        "readOnly": true,
                        "type": "string"
                      },
                      "disabled": {
                        "default": false,
                        "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                        "type": "boolean"
                      },
                      "end": {
                        "default": 0,
                        "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "forwardSettings": {
                        "additionalProperties": false,
                        "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, and `percent`.\n",
                        "properties": {
                          "originId": {
                            "description": "The conditional origin's unique identifier.\n",
                            "maxLength": 8192,
                            "nullable": true,
                            "type": "string"
                          },
                          "percent": {
                            "description": "The percentage of visitors directed to a different origin.\n",
                            "maximum": 100,
                            "minimum": 0,
                            "type": "number"
                          }
                        },
                        "type": "object"
                      },
                      "id": {
                        "description": "__Read-only__ Akamai internal use only.\n",
                        "nullable": true,
                        "readOnly": true,
                        "type": "integer"
                      },
                      "location": {
                        "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                        "readOnly": true,
                        "type": "string"
                      },
                      "matchURL": {
                        "description": "The URL the Cloudlet uses to match the incoming request.\n",
                        "maxLength": 8192,
                        "nullable": true,
                        "type": "string"
                      },
                      "matches": {
                        "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                        "items": {
                          "additionalProperties": false,
                          "description": "The match rule criteria.\n",
                          "oneOf": [
                            {
                              "required": [
                                "matchType",
                                "matchValue"
                              ],
                              "title": "matchType and matchValue required"
                            },
                            {
                              "required": [
                                "matchType",
                                "objectMatchValue"
                              ],
                              "title": "matchType and objectMatchValue required"
                            }
                          ],
                          "properties": {
                            "caseSensitive": {
                              "description": "If `true`, the match is case sensitive.\n",
                              "type": "boolean"
                            },
                            "checkIPs": {
                              "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                              "enum": [
                                "CONNECTING_IP",
                                "XFF_HEADERS",
                                "CONNECTING_IP XFF_HEADERS"
                              ],
                              "nullable": true,
                              "type": "string"
                            },
                            "matchOperator": {
                              "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                              "enum": [
                                "contains",
                                "exists",
                                "equals"
                              ],
                              "type": "string"
                            },
                            "matchType": {
                              "description": "The type of match used.\n",
                              "enum": [
                                "header",
                                "hostname",
                                "path",
                                "extension",
                                "query",
                                "cookie",
                                "deviceCharacteristics",
                                "clientip",
                                "continent",
                                "countrycode",
                                "regioncode",
                                "protocol",
                                "method",
                                "proxy"
                              ],
                              "type": "string"
                            },
                            "matchValue": {
                              "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                              "maxLength": 8192,
                              "minLength": 1,
                              "type": "string"
                            },
                            "negate": {
                              "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                              "type": "boolean"
                            },
                            "objectMatchValue": {
                              "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                              "oneOf": [
                                {
                                  "additionalProperties": false,
                                  "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                  "properties": {
                                    "type": {
                                      "description": "The object type, which is `simple`.\n",
                                      "enum": [
                                        "simple"
                                      ],
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                      "items": {
                                        "type": "string"
                                      },
                                      "nullable": true,
                                      "type": "array"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "value"
                                  ],
                                  "title": "Simple",
                                  "type": "object"
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Use this for more complex match criteria.\n",
                                  "properties": {
                                    "name": {
                                      "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "nameCaseSensitive": {
                                      "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                      "type": "boolean"
                                    },
                                    "nameHasWildcard": {
                                      "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                      "type": "boolean"
                                    },
                                    "options": {
                                      "additionalProperties": false,
                                      "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                      "properties": {
                                        "value": {
                                          "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                          "items": {
                                            "type": "string"
                                          },
                                          "nullable": true,
                                          "type": "array"
                                        },
                                        "valueCaseSensitive": {
                                          "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                          "type": "boolean"
                                        },
                                        "valueEscaped": {
                                          "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                          "type": "boolean"
                                        },
                                        "valueHasWildcard": {
                                          "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                          "type": "boolean"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": {
                                      "description": "The array type, which is `object`.\n",
                                      "enum": [
                                        "object"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "type"
                                  ],
                                  "title": "Object",
                                  "type": "object"
                                }
                              ],
                              "title": "Object match value",
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "nullable": true,
                        "type": "array"
                      },
                      "matchesAlways": {
                        "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n",
                        "type": "boolean"
                      },
                      "name": {
                        "description": "The name of the rule.\n",
                        "maxLength": 8192,
                        "nullable": true,
                        "type": "string"
                      },
                      "start": {
                        "default": 0,
                        "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "type": {
                        "description": "The type of Cloudlet the rule is for. For example, the string for Phased Release is `cdMatchRule`.\n",
                        "enum": [
                          "cdMatchRule"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "type"
                    ],
                    "title": "Phased Release",
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/match-rule-cd.yaml"
                    }
                  },
                  {
                    "additionalProperties": false,
                    "description": "Contains match rule information for Edge Redirector.\n",
                    "properties": {
                      "akaRuleId": {
                        "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                        "readOnly": true,
                        "type": "string"
                      },
                      "disabled": {
                        "default": false,
                        "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                        "type": "boolean"
                      },
                      "end": {
                        "default": 0,
                        "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "id": {
                        "description": "__Read-only__ Akamai internal use only.\n",
                        "nullable": true,
                        "readOnly": true,
                        "type": "integer"
                      },
                      "location": {
                        "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                        "readOnly": true,
                        "type": "string"
                      },
                      "matchURL": {
                        "description": "The URL the Cloudlet uses to match the incoming request.\n",
                        "maxLength": 8192,
                        "nullable": true,
                        "type": "string"
                      },
                      "matches": {
                        "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                        "items": {
                          "additionalProperties": false,
                          "description": "The match rule criteria.\n",
                          "oneOf": [
                            {
                              "required": [
                                "matchType",
                                "matchValue"
                              ],
                              "title": "matchType and matchValue required"
                            },
                            {
                              "required": [
                                "matchType",
                                "objectMatchValue"
                              ],
                              "title": "matchType and objectMatchValue required"
                            }
                          ],
                          "properties": {
                            "caseSensitive": {
                              "description": "If `true`, the match is case sensitive.\n",
                              "type": "boolean"
                            },
                            "checkIPs": {
                              "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                              "enum": [
                                "CONNECTING_IP",
                                "XFF_HEADERS",
                                "CONNECTING_IP XFF_HEADERS"
                              ],
                              "nullable": true,
                              "type": "string"
                            },
                            "matchOperator": {
                              "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                              "enum": [
                                "contains",
                                "exists",
                                "equals"
                              ],
                              "type": "string"
                            },
                            "matchType": {
                              "description": "The type of match used.\n",
                              "enum": [
                                "header",
                                "hostname",
                                "path",
                                "extension",
                                "query",
                                "regex",
                                "cookie",
                                "deviceCharacteristics",
                                "clientip",
                                "continent",
                                "countrycode",
                                "regioncode",
                                "protocol",
                                "method",
                                "proxy"
                              ],
                              "type": "string"
                            },
                            "matchValue": {
                              "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                              "maxLength": 8192,
                              "minLength": 1,
                              "type": "string"
                            },
                            "negate": {
                              "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                              "type": "boolean"
                            },
                            "objectMatchValue": {
                              "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                              "oneOf": [
                                {
                                  "additionalProperties": false,
                                  "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                  "properties": {
                                    "type": {
                                      "description": "The object type, which is `simple`.\n",
                                      "enum": [
                                        "simple"
                                      ],
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                      "items": {
                                        "type": "string"
                                      },
                                      "nullable": true,
                                      "type": "array"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "value"
                                  ],
                                  "title": "Simple",
                                  "type": "object"
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                  "properties": {
                                    "name": {
                                      "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "nameCaseSensitive": {
                                      "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                      "type": "boolean"
                                    },
                                    "nameHasWildcard": {
                                      "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                      "type": "boolean"
                                    },
                                    "options": {
                                      "additionalProperties": false,
                                      "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                      "properties": {
                                        "value": {
                                          "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                          "items": {
                                            "type": "string"
                                          },
                                          "nullable": true,
                                          "type": "array"
                                        },
                                        "valueCaseSensitive": {
                                          "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                          "type": "boolean"
                                        },
                                        "valueEscaped": {
                                          "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                          "type": "boolean"
                                        },
                                        "valueHasWildcard": {
                                          "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                          "type": "boolean"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": {
                                      "description": "The array type, which is `object`.\n",
                                      "enum": [
                                        "object"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "type"
                                  ],
                                  "title": "Object",
                                  "type": "object"
                                }
                              ],
                              "title": "Object match value",
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "nullable": true,
                        "type": "array"
                      },
                      "matchesAlways": {
                        "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n",
                        "type": "boolean"
                      },
                      "name": {
                        "description": "The name of the rule.\n",
                        "maxLength": 8192,
                        "nullable": true,
                        "type": "string"
                      },
                      "redirectURL": {
                        "description": "The URL Edge Redirector redirects the request to. If using `useRelativeUrl`, you can enter a path for the value. If `useRelativeUrl` is not used or set to `none`, then the `redirectUrl` should be a fully qualified URL.\n",
                        "maxLength": 8192,
                        "minLength": 1,
                        "type": "string"
                      },
                      "start": {
                        "default": 0,
                        "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "statusCode": {
                        "description": "The HTTP response redirect type status code: `301` for permanent redirect, `302` for temporary redirect, `303` for temporary using GET, `307` for temporary retain method, or `308` for permanent retain method.\n",
                        "enum": [
                          301,
                          302,
                          303,
                          307,
                          308
                        ],
                        "type": "integer"
                      },
                      "type": {
                        "description": "The type of Cloudlet the rule is for. For example, the string for Edge Redirector is `erMatchRule`.\n",
                        "enum": [
                          "erMatchRule"
                        ],
                        "type": "string"
                      },
                      "useIncomingQueryString": {
                        "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n",
                        "type": "boolean"
                      },
                      "useIncomingSchemeAndHost": {
                        "description": "If set to `true`, the Cloudlet copies both the scheme and the hostname from the incoming request to use in the redirect URL.\n",
                        "type": "boolean"
                      },
                      "useRelativeUrl": {
                        "description": "If set to `relative_url`, takes the path entered for the `redirectUrl` and sets it in the response’s `Location` header. The client browser receiving the request decides which protocol and hostname to use. If set to `copy_scheme_hostname`, it creates an absolute path by taking the protocol and hostname from the incoming request and combining them with path information entered for the `redirectUrl`. This absolute path is set in the response’s `Location` header. If you don't include `useRelativeUrl`, or if you set it to `none`, then specify the `redirectUrl` as a fully qualified URL.\n",
                        "enum": [
                          "relative_url",
                          "copy_scheme_hostname",
                          "none"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "redirectURL",
                      "statusCode"
                    ],
                    "title": "Edge Redirector",
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/match-rule-er.yaml"
                    }
                  },
                  {
                    "additionalProperties": false,
                    "description": "Contains match rule information for Forward Rewrite.\n",
                    "properties": {
                      "akaRuleId": {
                        "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                        "readOnly": true,
                        "type": "string"
                      },
                      "disabled": {
                        "default": false,
                        "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                        "type": "boolean"
                      },
                      "end": {
                        "default": 0,
                        "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "forwardSettings": {
                        "additionalProperties": false,
                        "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                        "properties": {
                          "originId": {
                            "description": "The conditional origin's unique identifier.\n",
                            "maxLength": 8192,
                            "nullable": true,
                            "type": "string"
                          },
                          "pathAndQS": {
                            "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                            "maxLength": 8192,
                            "minLength": 1,
                            "type": "string"
                          },
                          "useIncomingQueryString": {
                            "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n",
                            "type": "boolean"
                          }
                        },
                        "type": "object"
                      },
                      "id": {
                        "description": "__Read-only__ Akamai internal use only.\n",
                        "nullable": true,
                        "readOnly": true,
                        "type": "integer"
                      },
                      "location": {
                        "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                        "readOnly": true,
                        "type": "string"
                      },
                      "matchURL": {
                        "description": "The URL the Cloudlet uses to match the incoming request.\n",
                        "maxLength": 8192,
                        "nullable": true,
                        "type": "string"
                      },
                      "matches": {
                        "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                        "items": {
                          "additionalProperties": false,
                          "description": "The match rule criteria.\n",
                          "oneOf": [
                            {
                              "required": [
                                "matchType",
                                "matchValue"
                              ],
                              "title": "matchType and matchValue required"
                            },
                            {
                              "required": [
                                "matchType",
                                "objectMatchValue"
                              ],
                              "title": "matchType and objectMatchValue required"
                            }
                          ],
                          "properties": {
                            "caseSensitive": {
                              "description": "If `true`, the match is case sensitive.\n",
                              "type": "boolean"
                            },
                            "checkIPs": {
                              "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                              "enum": [
                                "CONNECTING_IP",
                                "XFF_HEADERS",
                                "CONNECTING_IP XFF_HEADERS"
                              ],
                              "type": "string"
                            },
                            "matchOperator": {
                              "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                              "enum": [
                                "contains",
                                "exists",
                                "equals"
                              ],
                              "type": "string"
                            },
                            "matchType": {
                              "description": "The type of match used.\n",
                              "enum": [
                                "header",
                                "hostname",
                                "path",
                                "extension",
                                "query",
                                "regex",
                                "cookie",
                                "deviceCharacteristics",
                                "clientip",
                                "continent",
                                "countrycode",
                                "regioncode",
                                "protocol",
                                "method",
                                "proxy"
                              ],
                              "type": "string"
                            },
                            "matchValue": {
                              "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                              "maxLength": 8192,
                              "minLength": 1,
                              "type": "string"
                            },
                            "negate": {
                              "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                              "type": "boolean"
                            },
                            "objectMatchValue": {
                              "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                              "oneOf": [
                                {
                                  "additionalProperties": false,
                                  "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                  "properties": {
                                    "type": {
                                      "description": "The object type, which is `simple`.\n",
                                      "enum": [
                                        "simple"
                                      ],
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                      "items": {
                                        "type": "string"
                                      },
                                      "nullable": true,
                                      "type": "array"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "value"
                                  ],
                                  "title": "Simple",
                                  "type": "object"
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                  "properties": {
                                    "name": {
                                      "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "nameCaseSensitive": {
                                      "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                      "type": "boolean"
                                    },
                                    "nameHasWildcard": {
                                      "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                      "type": "boolean"
                                    },
                                    "options": {
                                      "additionalProperties": false,
                                      "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                      "properties": {
                                        "value": {
                                          "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                          "items": {
                                            "type": "string"
                                          },
                                          "nullable": true,
                                          "type": "array"
                                        },
                                        "valueCaseSensitive": {
                                          "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                          "type": "boolean"
                                        },
                                        "valueEscaped": {
                                          "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                          "type": "boolean"
                                        },
                                        "valueHasWildcard": {
                                          "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                          "type": "boolean"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": {
                                      "description": "The array type, which is `object`.\n",
                                      "enum": [
                                        "object"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "type"
                                  ],
                                  "title": "Object",
                                  "type": "object"
                                }
                              ],
                              "title": "Object match value",
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "nullable": true,
                        "type": "array"
                      },
                      "name": {
                        "description": "The name of the rule.\n",
                        "maxLength": 8192,
                        "nullable": true,
                        "type": "string"
                      },
                      "start": {
                        "default": 0,
                        "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "type": {
                        "description": "The type of Cloudlet the rule is for. For example, the string for Forward Rewrite is `frMatchRule`.\n",
                        "enum": [
                          "frMatchRule"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "forwardSettings"
                    ],
                    "title": "Forward Rewrite",
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/match-rule-fr.yaml"
                    }
                  },
                  {
                    "additionalProperties": false,
                    "description": "Contains match rule information for Request Control.\n",
                    "properties": {
                      "akaRuleId": {
                        "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                        "readOnly": true,
                        "type": "string"
                      },
                      "allowDeny": {
                        "description": "If set to `allow`, the request is sent to origin when all conditions are true. If `deny`, the request is denied when all conditions are true. If `denybranded`, the request is denied and rerouted according to the configuration of the [Request Control behavior](https://techdocs.akamai.com/property-mgr/reference/latest-request-control).\n",
                        "enum": [
                          "allow",
                          "deny",
                          "denybranded"
                        ],
                        "type": "string"
                      },
                      "disabled": {
                        "default": false,
                        "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                        "type": "boolean"
                      },
                      "end": {
                        "default": 0,
                        "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "id": {
                        "description": "__Read-only__ Akamai internal use only.\n",
                        "nullable": true,
                        "readOnly": true,
                        "type": "integer"
                      },
                      "location": {
                        "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                        "readOnly": true,
                        "type": "string"
                      },
                      "matches": {
                        "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                        "items": {
                          "additionalProperties": false,
                          "description": "The match rule criteria.\n",
                          "oneOf": [
                            {
                              "required": [
                                "matchType",
                                "matchValue"
                              ],
                              "title": "matchType and matchValue required"
                            },
                            {
                              "required": [
                                "matchType",
                                "objectMatchValue"
                              ],
                              "title": "matchType and objectMatchValue required"
                            }
                          ],
                          "properties": {
                            "caseSensitive": {
                              "description": "If `true`, the match is case sensitive.\n",
                              "type": "boolean"
                            },
                            "checkIPs": {
                              "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                              "enum": [
                                "CONNECTING_IP",
                                "XFF_HEADERS",
                                "CONNECTING_IP XFF_HEADERS"
                              ],
                              "type": "string"
                            },
                            "matchOperator": {
                              "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                              "enum": [
                                "contains",
                                "exists",
                                "equals"
                              ],
                              "type": "string"
                            },
                            "matchType": {
                              "description": "The type of match used.\n",
                              "enum": [
                                "clientip",
                                "continent",
                                "cookie",
                                "countrycode",
                                "deviceCharacteristics",
                                "extension",
                                "header",
                                "hostname",
                                "method",
                                "path",
                                "protocol",
                                "proxy",
                                "query",
                                "regioncode"
                              ],
                              "type": "string"
                            },
                            "matchValue": {
                              "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                              "maxLength": 8192,
                              "minLength": 1,
                              "type": "string"
                            },
                            "negate": {
                              "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                              "type": "boolean"
                            },
                            "objectMatchValue": {
                              "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                              "oneOf": [
                                {
                                  "additionalProperties": false,
                                  "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                  "properties": {
                                    "type": {
                                      "description": "The object type, which is `simple`.\n",
                                      "enum": [
                                        "simple"
                                      ],
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                      "items": {
                                        "type": "string"
                                      },
                                      "nullable": true,
                                      "type": "array"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "value"
                                  ],
                                  "title": "Simple",
                                  "type": "object"
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                  "properties": {
                                    "name": {
                                      "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "nameCaseSensitive": {
                                      "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                      "type": "boolean"
                                    },
                                    "nameHasWildcard": {
                                      "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                      "type": "boolean"
                                    },
                                    "options": {
                                      "additionalProperties": false,
                                      "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                      "properties": {
                                        "value": {
                                          "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                          "items": {
                                            "type": "string"
                                          },
                                          "nullable": true,
                                          "type": "array"
                                        },
                                        "valueCaseSensitive": {
                                          "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                          "type": "boolean"
                                        },
                                        "valueEscaped": {
                                          "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                          "type": "boolean"
                                        },
                                        "valueHasWildcard": {
                                          "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                          "type": "boolean"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": {
                                      "description": "The array type, which is `object`.\n",
                                      "enum": [
                                        "object"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "type"
                                  ],
                                  "title": "Object",
                                  "type": "object"
                                }
                              ],
                              "title": "Object match value",
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "nullable": true,
                        "type": "array"
                      },
                      "matchesAlways": {
                        "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n",
                        "type": "boolean"
                      },
                      "name": {
                        "description": "The name of the rule.\n",
                        "maxLength": 8192,
                        "nullable": true,
                        "type": "string"
                      },
                      "start": {
                        "default": 0,
                        "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "type": {
                        "description": "The type of Cloudlet the rule is for. For example, the string for Request Control is `igMatchRule`.\n",
                        "enum": [
                          "igMatchRule"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "allowDeny"
                    ],
                    "title": "Request Control",
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/match-rule-ig.yaml"
                    }
                  },
                  {
                    "type": "object",
                    "description": "Contains match rule information for Visitor Prioritization.\n",
                    "title": "Visitor Prioritization",
                    "additionalProperties": false,
                    "required": [
                      "type",
                      "passThroughPercent"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "Akamai internal use only.\n",
                        "nullable": true,
                        "readOnly": true
                      },
                      "location": {
                        "type": "string",
                        "description": "The navigable endpoint used for the object referred to in the operation.\n",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the rule.\n",
                        "nullable": true,
                        "maxLength": 8192
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of Cloudlet the rule is for. For example, the string for Visitor Prioritization is `vpMatchRule`.\n",
                        "enum": [
                          "vpMatchRule"
                        ]
                      },
                      "akaRuleId": {
                        "type": "string",
                        "description": "The rule's unique identifier within the policy version.\n",
                        "readOnly": true
                      },
                      "start": {
                        "type": "integer",
                        "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                        "default": 0,
                        "minimum": 0
                      },
                      "end": {
                        "type": "integer",
                        "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                        "default": 0,
                        "minimum": 0
                      },
                      "matches": {
                        "type": "array",
                        "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                        "nullable": true,
                        "items": {
                          "type": "object",
                          "description": "The match rule criteria.\n",
                          "additionalProperties": false,
                          "oneOf": [
                            {
                              "required": [
                                "matchType",
                                "matchValue"
                              ],
                              "title": "matchType and matchValue required"
                            },
                            {
                              "required": [
                                "matchType",
                                "objectMatchValue"
                              ],
                              "title": "matchType and objectMatchValue required"
                            }
                          ],
                          "properties": {
                            "caseSensitive": {
                              "type": "boolean",
                              "description": "If `true`, the match is case sensitive.\n"
                            },
                            "matchValue": {
                              "type": "string",
                              "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                              "minLength": 1,
                              "maxLength": 8192
                            },
                            "negate": {
                              "type": "boolean",
                              "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                            },
                            "matchOperator": {
                              "type": "string",
                              "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                              "enum": [
                                "contains",
                                "exists",
                                "equals"
                              ]
                            },
                            "matchType": {
                              "type": "string",
                              "description": "The type of match used.\n",
                              "enum": [
                                "hostname",
                                "path",
                                "extension",
                                "query",
                                "cookie",
                                "deviceCharacteristics",
                                "clientip",
                                "continent",
                                "countrycode",
                                "regioncode",
                                "protocol",
                                "header",
                                "method",
                                "proxy"
                              ]
                            },
                            "checkIPs": {
                              "type": "string",
                              "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                              "enum": [
                                "CONNECTING_IP",
                                "XFF_HEADERS",
                                "CONNECTING_IP XFF_HEADERS"
                              ]
                            },
                            "objectMatchValue": {
                              "type": "object",
                              "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                              "title": "Object match value",
                              "oneOf": [
                                {
                                  "type": "object",
                                  "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                  "title": "Simple",
                                  "additionalProperties": false,
                                  "required": [
                                    "type",
                                    "value"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "description": "The object type, which is `simple`.\n",
                                      "enum": [
                                        "simple"
                                      ]
                                    },
                                    "value": {
                                      "type": "array",
                                      "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                      "nullable": true,
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                  "title": "Object",
                                  "additionalProperties": false,
                                  "required": [
                                    "name",
                                    "type"
                                  ],
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                      "minLength": 1,
                                      "maxLength": 8192
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "The array type, which is `object`.\n",
                                      "enum": [
                                        "object"
                                      ]
                                    },
                                    "options": {
                                      "type": "object",
                                      "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                      "additionalProperties": false,
                                      "properties": {
                                        "value": {
                                          "type": "array",
                                          "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                          "nullable": true,
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "valueHasWildcard": {
                                          "type": "boolean",
                                          "description": "Set to `true` if the entries for `value` includes wildcards.\n"
                                        },
                                        "valueCaseSensitive": {
                                          "type": "boolean",
                                          "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n"
                                        },
                                        "valueEscaped": {
                                          "type": "boolean",
                                          "description": "Set to `true` if the entries for `value` includes escaped characters.\n"
                                        }
                                      }
                                    },
                                    "nameCaseSensitive": {
                                      "type": "boolean",
                                      "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                    },
                                    "nameHasWildcard": {
                                      "type": "boolean",
                                      "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      },
                      "disabled": {
                        "type": "boolean",
                        "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                        "default": false
                      },
                      "passThroughPercent": {
                        "type": "number",
                        "description": "The range `0.000: 99.000` specifies the percentage of requests that pass through to the origin. The value of `100` means the request always passes through to the origin. For Visitor Prioritization, a value of `-1` means send everyone to the waiting room.\n",
                        "minimum": -1,
                        "maximum": 100
                      },
                      "matchURL": {
                        "type": "string",
                        "description": "The URL the Cloudlet uses to match the incoming request.\n",
                        "nullable": true,
                        "maxLength": 8192
                      },
                      "useIncomingQueryString": {
                        "type": "boolean",
                        "description": "If set to `true`, the Cloudlet includes the request's query string in the rewritten or forwarded URL.\n"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns details of a policy version match rule.\n",
            "content": {
              "application/json": {
                "example": {
                  "location": "/cloudlets/api/v2/policies/1002/versions/2/rules/5db847a66e0566ad",
                  "akaRuleId": "5db847a66e0566ad",
                  "start": 0,
                  "end": 0,
                  "type": "asMatchRule",
                  "disabled": "true",
                  "name": "Q1Sales",
                  "id": null,
                  "forwardSettings": {
                    "originId": "originremote2",
                    "useIncomingQueryString": true,
                    "pathAndQS": "/sales/Q1/"
                  },
                  "matches": [
                    {
                      "matchType": "range",
                      "matchOperator": "equals",
                      "negate": false,
                      "caseSensitive": false,
                      "objectMatchValue": {
                        "type": "range",
                        "value": [
                          1,
                          25
                        ]
                      }
                    }
                  ]
                },
                "schema": {
                  "description": "Contains information about match rules.\n",
                  "oneOf": [
                    {
                      "type": "object",
                      "description": "Contains match rule information for Application Load Balancer.\n",
                      "title": "Application Load Balancer",
                      "additionalProperties": false,
                      "required": [
                        "type"
                      ],
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "Akamai internal use only.\n",
                          "nullable": true,
                          "readOnly": true
                        },
                        "location": {
                          "type": "string",
                          "description": "The navigable endpoint used for the object referred to in the operation.\n",
                          "readOnly": true
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the rule.\n",
                          "nullable": true,
                          "maxLength": 8192
                        },
                        "type": {
                          "type": "string",
                          "description": "The type of Cloudlet the rule is for. For example, the string for Application Load Balancer is `albMatchRule`.\n",
                          "enum": [
                            "albMatchRule"
                          ]
                        },
                        "akaRuleId": {
                          "type": "string",
                          "description": "The rule's unique identifier within the policy version.\n",
                          "readOnly": true
                        },
                        "disabled": {
                          "type": "boolean",
                          "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                          "default": false
                        },
                        "start": {
                          "type": "integer",
                          "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                          "default": 0,
                          "minimum": 0
                        },
                        "end": {
                          "type": "integer",
                          "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                          "default": 0,
                          "minimum": 0
                        },
                        "matchURL": {
                          "type": "string",
                          "description": "The URL the Cloudlet uses to match the incoming request.\n",
                          "nullable": true,
                          "maxLength": 8192
                        },
                        "matches": {
                          "type": "array",
                          "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                          "nullable": true,
                          "items": {
                            "type": "object",
                            "description": "The match rule criteria.\n",
                            "additionalProperties": false,
                            "oneOf": [
                              {
                                "required": [
                                  "matchType",
                                  "matchValue"
                                ],
                                "title": "matchType and matchValue required"
                              },
                              {
                                "required": [
                                  "matchType",
                                  "objectMatchValue"
                                ],
                                "title": "matchType and objectMatchValue required"
                              }
                            ],
                            "properties": {
                              "caseSensitive": {
                                "type": "boolean",
                                "description": "If `true`, the match is case sensitive.\n"
                              },
                              "checkIPs": {
                                "type": "string",
                                "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                "nullable": true,
                                "enum": [
                                  "CONNECTING_IP",
                                  "XFF_HEADERS",
                                  "CONNECTING_IP XFF_HEADERS"
                                ]
                              },
                              "matchOperator": {
                                "type": "string",
                                "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                "enum": [
                                  "contains",
                                  "exists",
                                  "equals"
                                ]
                              },
                              "matchType": {
                                "type": "string",
                                "description": "The type of match used.\n",
                                "enum": [
                                  "header",
                                  "hostname",
                                  "path",
                                  "extension",
                                  "query",
                                  "regex",
                                  "cookie",
                                  "deviceCharacteristics",
                                  "clientip",
                                  "continent",
                                  "countrycode",
                                  "regioncode",
                                  "protocol",
                                  "method",
                                  "proxy"
                                ]
                              },
                              "matchValue": {
                                "type": "string",
                                "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                "minLength": 1,
                                "maxLength": 8192
                              },
                              "negate": {
                                "type": "boolean",
                                "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                              },
                              "objectMatchValue": {
                                "type": "object",
                                "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                "title": "Object match value",
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                    "title": "Simple",
                                    "additionalProperties": false,
                                    "required": [
                                      "type",
                                      "value"
                                    ],
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "The object type, which is `simple`.\n",
                                        "enum": [
                                          "simple"
                                        ]
                                      },
                                      "value": {
                                        "type": "array",
                                        "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "nullable": true,
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "description": "Use this for more complex match criteria.\n",
                                    "title": "Object",
                                    "additionalProperties": false,
                                    "required": [
                                      "name",
                                      "type"
                                    ],
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                        "minLength": 1,
                                        "maxLength": 8192
                                      },
                                      "type": {
                                        "type": "string",
                                        "description": "The array type, which is `object`.\n",
                                        "enum": [
                                          "object"
                                        ]
                                      },
                                      "options": {
                                        "type": "object",
                                        "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                        "additionalProperties": false,
                                        "properties": {
                                          "value": {
                                            "type": "array",
                                            "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                            "nullable": true,
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "valueCaseSensitive": {
                                            "type": "boolean",
                                            "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n"
                                          },
                                          "valueEscaped": {
                                            "type": "boolean",
                                            "description": "Set to `true` if the entries for `value` includes escaped characters.\n"
                                          },
                                          "valueHasWildcard": {
                                            "type": "boolean",
                                            "description": "Set to `true` if the entries for `value` includes wildcards.\n"
                                          }
                                        }
                                      },
                                      "nameCaseSensitive": {
                                        "type": "boolean",
                                        "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                      },
                                      "nameHasWildcard": {
                                        "type": "boolean",
                                        "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        },
                        "matchesAlways": {
                          "type": "boolean",
                          "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n"
                        },
                        "forwardSettings": {
                          "type": "object",
                          "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                          "additionalProperties": false,
                          "properties": {
                            "pathAndQS": {
                              "type": "string",
                              "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                              "minLength": 1,
                              "maxLength": 8192
                            },
                            "useIncomingQueryString": {
                              "type": "boolean",
                              "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n"
                            },
                            "originId": {
                              "type": "string",
                              "description": "The conditional origin's unique identifier.\n",
                              "nullable": true,
                              "maxLength": 8192
                            }
                          }
                        }
                      }
                    },
                    {
                      "additionalProperties": false,
                      "description": "Contains match rule information for API Prioritization.\n",
                      "properties": {
                        "akaRuleId": {
                          "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                          "readOnly": true,
                          "type": "string"
                        },
                        "disabled": {
                          "default": false,
                          "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                          "type": "boolean"
                        },
                        "end": {
                          "default": 0,
                          "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "id": {
                          "description": "__Read-only__ Akamai internal use only.\n",
                          "nullable": true,
                          "readOnly": true,
                          "type": "integer"
                        },
                        "location": {
                          "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                          "readOnly": true,
                          "type": "string"
                        },
                        "matchURL": {
                          "description": "The URL the Cloudlet uses to match the incoming request.\n",
                          "maxLength": 8192,
                          "nullable": true,
                          "type": "string"
                        },
                        "matches": {
                          "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                          "items": {
                            "additionalProperties": false,
                            "description": "The match rule criteria.\n",
                            "oneOf": [
                              {
                                "required": [
                                  "matchType",
                                  "matchValue"
                                ],
                                "title": "matchType and matchValue required"
                              },
                              {
                                "required": [
                                  "matchType",
                                  "objectMatchValue"
                                ],
                                "title": "matchType and objectMatchValue required"
                              }
                            ],
                            "properties": {
                              "caseSensitive": {
                                "description": "If `true`, the match is case sensitive.\n",
                                "type": "boolean"
                              },
                              "checkIPs": {
                                "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                "enum": [
                                  "CONNECTING_IP",
                                  "XFF_HEADERS",
                                  "CONNECTING_IP XFF_HEADERS"
                                ],
                                "type": "string"
                              },
                              "matchOperator": {
                                "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                "enum": [
                                  "contains",
                                  "exists",
                                  "equals"
                                ],
                                "type": "string"
                              },
                              "matchType": {
                                "description": "The type of match used.\n",
                                "enum": [
                                  "hostname",
                                  "path",
                                  "extension",
                                  "query",
                                  "cookie",
                                  "deviceCharacteristics",
                                  "clientip",
                                  "continent",
                                  "countrycode",
                                  "regioncode",
                                  "protocol",
                                  "header",
                                  "method",
                                  "proxy"
                                ],
                                "type": "string"
                              },
                              "matchValue": {
                                "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                "maxLength": 8192,
                                "minLength": 1,
                                "type": "string"
                              },
                              "negate": {
                                "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                                "type": "boolean"
                              },
                              "objectMatchValue": {
                                "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                "oneOf": [
                                  {
                                    "additionalProperties": false,
                                    "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                    "properties": {
                                      "type": {
                                        "description": "The object type, which is `simple`.\n",
                                        "enum": [
                                          "simple"
                                        ],
                                        "type": "string"
                                      },
                                      "value": {
                                        "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "items": {
                                          "type": "string"
                                        },
                                        "nullable": true,
                                        "type": "array"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "value"
                                    ],
                                    "title": "Simple",
                                    "type": "object"
                                  },
                                  {
                                    "additionalProperties": false,
                                    "description": "Use this for more complex match criteria.\n",
                                    "properties": {
                                      "name": {
                                        "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                        "maxLength": 8192,
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "nameCaseSensitive": {
                                        "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                        "type": "boolean"
                                      },
                                      "nameHasWildcard": {
                                        "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                        "type": "boolean"
                                      },
                                      "options": {
                                        "additionalProperties": false,
                                        "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                        "properties": {
                                          "value": {
                                            "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                            "items": {
                                              "type": "string"
                                            },
                                            "nullable": true,
                                            "type": "array"
                                          },
                                          "valueCaseSensitive": {
                                            "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                            "type": "boolean"
                                          },
                                          "valueEscaped": {
                                            "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                            "type": "boolean"
                                          },
                                          "valueHasWildcard": {
                                            "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                            "type": "boolean"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "type": {
                                        "description": "The array type, which is `object`.\n",
                                        "enum": [
                                          "object"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "type"
                                    ],
                                    "title": "Object",
                                    "type": "object"
                                  }
                                ],
                                "title": "Object match value",
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "nullable": true,
                          "type": "array"
                        },
                        "name": {
                          "description": "The name of the rule.\n",
                          "maxLength": 8192,
                          "nullable": true,
                          "type": "string"
                        },
                        "passThroughPercent": {
                          "description": "The percentage of requests that pass through to the origin, with `100` indicating the request always passes through to the origin. For Visitor Prioritization, a value of -1 sends everyone to the waiting room.\n",
                          "maximum": 100,
                          "minimum": -1,
                          "type": "number"
                        },
                        "start": {
                          "default": 0,
                          "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "type": {
                          "description": "The type of Cloudlet the rule is for. For example, the string for API Prioritization is `apMatchRule`.\n",
                          "enum": [
                            "apMatchRule"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "passThroughPercent"
                      ],
                      "title": "API Prioritization",
                      "type": "object",
                      "x-akamai": {
                        "file-path": "schemas/match-rule-ap.yaml"
                      }
                    },
                    {
                      "additionalProperties": false,
                      "description": "Contains match rule information for Audience Segmentation.\n",
                      "properties": {
                        "akaRuleId": {
                          "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                          "readOnly": true,
                          "type": "string"
                        },
                        "disabled": {
                          "default": false,
                          "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                          "type": "boolean"
                        },
                        "end": {
                          "default": 0,
                          "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "forwardSettings": {
                          "additionalProperties": false,
                          "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                          "properties": {
                            "originId": {
                              "description": "The conditional origin's unique identifier.\n",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "pathAndQS": {
                              "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                              "maxLength": 8192,
                              "minLength": 1,
                              "type": "string"
                            },
                            "useIncomingQueryString": {
                              "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n",
                              "type": "boolean"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "description": "__Read-only__ Akamai internal use only.\n",
                          "nullable": true,
                          "readOnly": true,
                          "type": "integer"
                        },
                        "location": {
                          "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                          "readOnly": true,
                          "type": "string"
                        },
                        "matchURL": {
                          "description": "The URL the Cloudlet uses to match the incoming request.\n",
                          "maxLength": 8192,
                          "nullable": true,
                          "type": "string"
                        },
                        "matches": {
                          "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                          "items": {
                            "additionalProperties": false,
                            "description": "The match rule criteria.\n",
                            "oneOf": [
                              {
                                "required": [
                                  "matchType",
                                  "matchValue"
                                ],
                                "title": "matchType and matchValue required"
                              },
                              {
                                "required": [
                                  "matchType",
                                  "objectMatchValue"
                                ],
                                "title": "matchType and objectMatchValue required"
                              }
                            ],
                            "properties": {
                              "caseSensitive": {
                                "description": "If `true`, the match is case sensitive.\n",
                                "type": "boolean"
                              },
                              "checkIPs": {
                                "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                "enum": [
                                  "CONNECTING_IP",
                                  "XFF_HEADERS",
                                  "CONNECTING_IP XFF_HEADERS"
                                ],
                                "type": "string"
                              },
                              "matchOperator": {
                                "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                "enum": [
                                  "contains",
                                  "exists",
                                  "equals"
                                ],
                                "type": "string"
                              },
                              "matchType": {
                                "description": "The type of match used.\n",
                                "enum": [
                                  "header",
                                  "hostname",
                                  "path",
                                  "extension",
                                  "query",
                                  "range",
                                  "regex",
                                  "cookie",
                                  "deviceCharacteristics",
                                  "clientip",
                                  "continent",
                                  "countrycode",
                                  "regioncode",
                                  "protocol",
                                  "method",
                                  "proxy"
                                ],
                                "type": "string"
                              },
                              "matchValue": {
                                "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                "maxLength": 8192,
                                "minLength": 1,
                                "type": "string"
                              },
                              "negate": {
                                "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                                "type": "boolean"
                              },
                              "objectMatchValue": {
                                "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.\n",
                                "oneOf": [
                                  {
                                    "additionalProperties": false,
                                    "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.\n",
                                    "properties": {
                                      "type": {
                                        "description": "The object type, which is `range`.\n",
                                        "enum": [
                                          "range"
                                        ],
                                        "type": "string"
                                      },
                                      "value": {
                                        "description": "An inclusive range comprised of two numbers to match on.\n",
                                        "items": {
                                          "type": "integer"
                                        },
                                        "nullable": true,
                                        "type": "array"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "value"
                                    ],
                                    "title": "Range",
                                    "type": "object"
                                  },
                                  {
                                    "additionalProperties": false,
                                    "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                    "properties": {
                                      "type": {
                                        "description": "The object type, which is `simple`.\n",
                                        "enum": [
                                          "simple"
                                        ],
                                        "type": "string"
                                      },
                                      "value": {
                                        "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "items": {
                                          "type": "string"
                                        },
                                        "nullable": true,
                                        "type": "array"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "value"
                                    ],
                                    "title": "Simple",
                                    "type": "object"
                                  },
                                  {
                                    "additionalProperties": false,
                                    "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                    "properties": {
                                      "name": {
                                        "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                        "maxLength": 8192,
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "nameCaseSensitive": {
                                        "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                        "type": "boolean"
                                      },
                                      "nameHasWildcard": {
                                        "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                        "type": "boolean"
                                      },
                                      "options": {
                                        "additionalProperties": false,
                                        "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                        "properties": {
                                          "value": {
                                            "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                            "items": {
                                              "type": "string"
                                            },
                                            "nullable": true,
                                            "type": "array"
                                          },
                                          "valueCaseSensitive": {
                                            "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                            "type": "boolean"
                                          },
                                          "valueEscaped": {
                                            "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                            "type": "boolean"
                                          },
                                          "valueHasWildcard": {
                                            "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                            "type": "boolean"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "type": {
                                        "description": "The array type, which is `object`.\n",
                                        "enum": [
                                          "object"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "type"
                                    ],
                                    "title": "Object",
                                    "type": "object"
                                  }
                                ],
                                "title": "Object match value",
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "nullable": true,
                          "type": "array"
                        },
                        "name": {
                          "description": "The name of the rule.\n",
                          "maxLength": 8192,
                          "nullable": true,
                          "type": "string"
                        },
                        "start": {
                          "default": 0,
                          "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "type": {
                          "description": "The type of Cloudlet the rule is for. For example, the string for Audience Segmentation is `asMatchRule`.\n",
                          "enum": [
                            "asMatchRule"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "type"
                      ],
                      "title": "Audience Segmentation",
                      "type": "object",
                      "x-akamai": {
                        "file-path": "schemas/match-rule-as.yaml"
                      }
                    },
                    {
                      "additionalProperties": false,
                      "description": "Contains match rule information for Phased Release.\n",
                      "properties": {
                        "akaRuleId": {
                          "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                          "readOnly": true,
                          "type": "string"
                        },
                        "disabled": {
                          "default": false,
                          "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                          "type": "boolean"
                        },
                        "end": {
                          "default": 0,
                          "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "forwardSettings": {
                          "additionalProperties": false,
                          "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, and `percent`.\n",
                          "properties": {
                            "originId": {
                              "description": "The conditional origin's unique identifier.\n",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "percent": {
                              "description": "The percentage of visitors directed to a different origin.\n",
                              "maximum": 100,
                              "minimum": 0,
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "description": "__Read-only__ Akamai internal use only.\n",
                          "nullable": true,
                          "readOnly": true,
                          "type": "integer"
                        },
                        "location": {
                          "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                          "readOnly": true,
                          "type": "string"
                        },
                        "matchURL": {
                          "description": "The URL the Cloudlet uses to match the incoming request.\n",
                          "maxLength": 8192,
                          "nullable": true,
                          "type": "string"
                        },
                        "matches": {
                          "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                          "items": {
                            "additionalProperties": false,
                            "description": "The match rule criteria.\n",
                            "oneOf": [
                              {
                                "required": [
                                  "matchType",
                                  "matchValue"
                                ],
                                "title": "matchType and matchValue required"
                              },
                              {
                                "required": [
                                  "matchType",
                                  "objectMatchValue"
                                ],
                                "title": "matchType and objectMatchValue required"
                              }
                            ],
                            "properties": {
                              "caseSensitive": {
                                "description": "If `true`, the match is case sensitive.\n",
                                "type": "boolean"
                              },
                              "checkIPs": {
                                "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                "enum": [
                                  "CONNECTING_IP",
                                  "XFF_HEADERS",
                                  "CONNECTING_IP XFF_HEADERS"
                                ],
                                "nullable": true,
                                "type": "string"
                              },
                              "matchOperator": {
                                "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                "enum": [
                                  "contains",
                                  "exists",
                                  "equals"
                                ],
                                "type": "string"
                              },
                              "matchType": {
                                "description": "The type of match used.\n",
                                "enum": [
                                  "header",
                                  "hostname",
                                  "path",
                                  "extension",
                                  "query",
                                  "cookie",
                                  "deviceCharacteristics",
                                  "clientip",
                                  "continent",
                                  "countrycode",
                                  "regioncode",
                                  "protocol",
                                  "method",
                                  "proxy"
                                ],
                                "type": "string"
                              },
                              "matchValue": {
                                "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                "maxLength": 8192,
                                "minLength": 1,
                                "type": "string"
                              },
                              "negate": {
                                "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                                "type": "boolean"
                              },
                              "objectMatchValue": {
                                "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                "oneOf": [
                                  {
                                    "additionalProperties": false,
                                    "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                    "properties": {
                                      "type": {
                                        "description": "The object type, which is `simple`.\n",
                                        "enum": [
                                          "simple"
                                        ],
                                        "type": "string"
                                      },
                                      "value": {
                                        "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "items": {
                                          "type": "string"
                                        },
                                        "nullable": true,
                                        "type": "array"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "value"
                                    ],
                                    "title": "Simple",
                                    "type": "object"
                                  },
                                  {
                                    "additionalProperties": false,
                                    "description": "Use this for more complex match criteria.\n",
                                    "properties": {
                                      "name": {
                                        "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                        "maxLength": 8192,
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "nameCaseSensitive": {
                                        "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                        "type": "boolean"
                                      },
                                      "nameHasWildcard": {
                                        "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                        "type": "boolean"
                                      },
                                      "options": {
                                        "additionalProperties": false,
                                        "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                        "properties": {
                                          "value": {
                                            "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                            "items": {
                                              "type": "string"
                                            },
                                            "nullable": true,
                                            "type": "array"
                                          },
                                          "valueCaseSensitive": {
                                            "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                            "type": "boolean"
                                          },
                                          "valueEscaped": {
                                            "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                            "type": "boolean"
                                          },
                                          "valueHasWildcard": {
                                            "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                            "type": "boolean"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "type": {
                                        "description": "The array type, which is `object`.\n",
                                        "enum": [
                                          "object"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "type"
                                    ],
                                    "title": "Object",
                                    "type": "object"
                                  }
                                ],
                                "title": "Object match value",
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "nullable": true,
                          "type": "array"
                        },
                        "matchesAlways": {
                          "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n",
                          "type": "boolean"
                        },
                        "name": {
                          "description": "The name of the rule.\n",
                          "maxLength": 8192,
                          "nullable": true,
                          "type": "string"
                        },
                        "start": {
                          "default": 0,
                          "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "type": {
                          "description": "The type of Cloudlet the rule is for. For example, the string for Phased Release is `cdMatchRule`.\n",
                          "enum": [
                            "cdMatchRule"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "type"
                      ],
                      "title": "Phased Release",
                      "type": "object",
                      "x-akamai": {
                        "file-path": "schemas/match-rule-cd.yaml"
                      }
                    },
                    {
                      "additionalProperties": false,
                      "description": "Contains match rule information for Edge Redirector.\n",
                      "properties": {
                        "akaRuleId": {
                          "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                          "readOnly": true,
                          "type": "string"
                        },
                        "disabled": {
                          "default": false,
                          "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                          "type": "boolean"
                        },
                        "end": {
                          "default": 0,
                          "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "id": {
                          "description": "__Read-only__ Akamai internal use only.\n",
                          "nullable": true,
                          "readOnly": true,
                          "type": "integer"
                        },
                        "location": {
                          "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                          "readOnly": true,
                          "type": "string"
                        },
                        "matchURL": {
                          "description": "The URL the Cloudlet uses to match the incoming request.\n",
                          "maxLength": 8192,
                          "nullable": true,
                          "type": "string"
                        },
                        "matches": {
                          "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                          "items": {
                            "additionalProperties": false,
                            "description": "The match rule criteria.\n",
                            "oneOf": [
                              {
                                "required": [
                                  "matchType",
                                  "matchValue"
                                ],
                                "title": "matchType and matchValue required"
                              },
                              {
                                "required": [
                                  "matchType",
                                  "objectMatchValue"
                                ],
                                "title": "matchType and objectMatchValue required"
                              }
                            ],
                            "properties": {
                              "caseSensitive": {
                                "description": "If `true`, the match is case sensitive.\n",
                                "type": "boolean"
                              },
                              "checkIPs": {
                                "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                "enum": [
                                  "CONNECTING_IP",
                                  "XFF_HEADERS",
                                  "CONNECTING_IP XFF_HEADERS"
                                ],
                                "nullable": true,
                                "type": "string"
                              },
                              "matchOperator": {
                                "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                "enum": [
                                  "contains",
                                  "exists",
                                  "equals"
                                ],
                                "type": "string"
                              },
                              "matchType": {
                                "description": "The type of match used.\n",
                                "enum": [
                                  "header",
                                  "hostname",
                                  "path",
                                  "extension",
                                  "query",
                                  "regex",
                                  "cookie",
                                  "deviceCharacteristics",
                                  "clientip",
                                  "continent",
                                  "countrycode",
                                  "regioncode",
                                  "protocol",
                                  "method",
                                  "proxy"
                                ],
                                "type": "string"
                              },
                              "matchValue": {
                                "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                "maxLength": 8192,
                                "minLength": 1,
                                "type": "string"
                              },
                              "negate": {
                                "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                                "type": "boolean"
                              },
                              "objectMatchValue": {
                                "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                "oneOf": [
                                  {
                                    "additionalProperties": false,
                                    "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                    "properties": {
                                      "type": {
                                        "description": "The object type, which is `simple`.\n",
                                        "enum": [
                                          "simple"
                                        ],
                                        "type": "string"
                                      },
                                      "value": {
                                        "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "items": {
                                          "type": "string"
                                        },
                                        "nullable": true,
                                        "type": "array"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "value"
                                    ],
                                    "title": "Simple",
                                    "type": "object"
                                  },
                                  {
                                    "additionalProperties": false,
                                    "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                    "properties": {
                                      "name": {
                                        "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                        "maxLength": 8192,
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "nameCaseSensitive": {
                                        "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                        "type": "boolean"
                                      },
                                      "nameHasWildcard": {
                                        "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                        "type": "boolean"
                                      },
                                      "options": {
                                        "additionalProperties": false,
                                        "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                        "properties": {
                                          "value": {
                                            "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                            "items": {
                                              "type": "string"
                                            },
                                            "nullable": true,
                                            "type": "array"
                                          },
                                          "valueCaseSensitive": {
                                            "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                            "type": "boolean"
                                          },
                                          "valueEscaped": {
                                            "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                            "type": "boolean"
                                          },
                                          "valueHasWildcard": {
                                            "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                            "type": "boolean"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "type": {
                                        "description": "The array type, which is `object`.\n",
                                        "enum": [
                                          "object"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "type"
                                    ],
                                    "title": "Object",
                                    "type": "object"
                                  }
                                ],
                                "title": "Object match value",
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "nullable": true,
                          "type": "array"
                        },
                        "matchesAlways": {
                          "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n",
                          "type": "boolean"
                        },
                        "name": {
                          "description": "The name of the rule.\n",
                          "maxLength": 8192,
                          "nullable": true,
                          "type": "string"
                        },
                        "redirectURL": {
                          "description": "The URL Edge Redirector redirects the request to. If using `useRelativeUrl`, you can enter a path for the value. If `useRelativeUrl` is not used or set to `none`, then the `redirectUrl` should be a fully qualified URL.\n",
                          "maxLength": 8192,
                          "minLength": 1,
                          "type": "string"
                        },
                        "start": {
                          "default": 0,
                          "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "statusCode": {
                          "description": "The HTTP response redirect type status code: `301` for permanent redirect, `302` for temporary redirect, `303` for temporary using GET, `307` for temporary retain method, or `308` for permanent retain method.\n",
                          "enum": [
                            301,
                            302,
                            303,
                            307,
                            308
                          ],
                          "type": "integer"
                        },
                        "type": {
                          "description": "The type of Cloudlet the rule is for. For example, the string for Edge Redirector is `erMatchRule`.\n",
                          "enum": [
                            "erMatchRule"
                          ],
                          "type": "string"
                        },
                        "useIncomingQueryString": {
                          "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n",
                          "type": "boolean"
                        },
                        "useIncomingSchemeAndHost": {
                          "description": "If set to `true`, the Cloudlet copies both the scheme and the hostname from the incoming request to use in the redirect URL.\n",
                          "type": "boolean"
                        },
                        "useRelativeUrl": {
                          "description": "If set to `relative_url`, takes the path entered for the `redirectUrl` and sets it in the response’s `Location` header. The client browser receiving the request decides which protocol and hostname to use. If set to `copy_scheme_hostname`, it creates an absolute path by taking the protocol and hostname from the incoming request and combining them with path information entered for the `redirectUrl`. This absolute path is set in the response’s `Location` header. If you don't include `useRelativeUrl`, or if you set it to `none`, then specify the `redirectUrl` as a fully qualified URL.\n",
                          "enum": [
                            "relative_url",
                            "copy_scheme_hostname",
                            "none"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "redirectURL",
                        "statusCode"
                      ],
                      "title": "Edge Redirector",
                      "type": "object",
                      "x-akamai": {
                        "file-path": "schemas/match-rule-er.yaml"
                      }
                    },
                    {
                      "additionalProperties": false,
                      "description": "Contains match rule information for Forward Rewrite.\n",
                      "properties": {
                        "akaRuleId": {
                          "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                          "readOnly": true,
                          "type": "string"
                        },
                        "disabled": {
                          "default": false,
                          "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                          "type": "boolean"
                        },
                        "end": {
                          "default": 0,
                          "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "forwardSettings": {
                          "additionalProperties": false,
                          "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                          "properties": {
                            "originId": {
                              "description": "The conditional origin's unique identifier.\n",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "pathAndQS": {
                              "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                              "maxLength": 8192,
                              "minLength": 1,
                              "type": "string"
                            },
                            "useIncomingQueryString": {
                              "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n",
                              "type": "boolean"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "description": "__Read-only__ Akamai internal use only.\n",
                          "nullable": true,
                          "readOnly": true,
                          "type": "integer"
                        },
                        "location": {
                          "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                          "readOnly": true,
                          "type": "string"
                        },
                        "matchURL": {
                          "description": "The URL the Cloudlet uses to match the incoming request.\n",
                          "maxLength": 8192,
                          "nullable": true,
                          "type": "string"
                        },
                        "matches": {
                          "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                          "items": {
                            "additionalProperties": false,
                            "description": "The match rule criteria.\n",
                            "oneOf": [
                              {
                                "required": [
                                  "matchType",
                                  "matchValue"
                                ],
                                "title": "matchType and matchValue required"
                              },
                              {
                                "required": [
                                  "matchType",
                                  "objectMatchValue"
                                ],
                                "title": "matchType and objectMatchValue required"
                              }
                            ],
                            "properties": {
                              "caseSensitive": {
                                "description": "If `true`, the match is case sensitive.\n",
                                "type": "boolean"
                              },
                              "checkIPs": {
                                "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                "enum": [
                                  "CONNECTING_IP",
                                  "XFF_HEADERS",
                                  "CONNECTING_IP XFF_HEADERS"
                                ],
                                "type": "string"
                              },
                              "matchOperator": {
                                "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                "enum": [
                                  "contains",
                                  "exists",
                                  "equals"
                                ],
                                "type": "string"
                              },
                              "matchType": {
                                "description": "The type of match used.\n",
                                "enum": [
                                  "header",
                                  "hostname",
                                  "path",
                                  "extension",
                                  "query",
                                  "regex",
                                  "cookie",
                                  "deviceCharacteristics",
                                  "clientip",
                                  "continent",
                                  "countrycode",
                                  "regioncode",
                                  "protocol",
                                  "method",
                                  "proxy"
                                ],
                                "type": "string"
                              },
                              "matchValue": {
                                "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                "maxLength": 8192,
                                "minLength": 1,
                                "type": "string"
                              },
                              "negate": {
                                "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                                "type": "boolean"
                              },
                              "objectMatchValue": {
                                "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                "oneOf": [
                                  {
                                    "additionalProperties": false,
                                    "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                    "properties": {
                                      "type": {
                                        "description": "The object type, which is `simple`.\n",
                                        "enum": [
                                          "simple"
                                        ],
                                        "type": "string"
                                      },
                                      "value": {
                                        "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "items": {
                                          "type": "string"
                                        },
                                        "nullable": true,
                                        "type": "array"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "value"
                                    ],
                                    "title": "Simple",
                                    "type": "object"
                                  },
                                  {
                                    "additionalProperties": false,
                                    "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                    "properties": {
                                      "name": {
                                        "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                        "maxLength": 8192,
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "nameCaseSensitive": {
                                        "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                        "type": "boolean"
                                      },
                                      "nameHasWildcard": {
                                        "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                        "type": "boolean"
                                      },
                                      "options": {
                                        "additionalProperties": false,
                                        "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                        "properties": {
                                          "value": {
                                            "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                            "items": {
                                              "type": "string"
                                            },
                                            "nullable": true,
                                            "type": "array"
                                          },
                                          "valueCaseSensitive": {
                                            "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                            "type": "boolean"
                                          },
                                          "valueEscaped": {
                                            "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                            "type": "boolean"
                                          },
                                          "valueHasWildcard": {
                                            "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                            "type": "boolean"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "type": {
                                        "description": "The array type, which is `object`.\n",
                                        "enum": [
                                          "object"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "type"
                                    ],
                                    "title": "Object",
                                    "type": "object"
                                  }
                                ],
                                "title": "Object match value",
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "nullable": true,
                          "type": "array"
                        },
                        "name": {
                          "description": "The name of the rule.\n",
                          "maxLength": 8192,
                          "nullable": true,
                          "type": "string"
                        },
                        "start": {
                          "default": 0,
                          "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "type": {
                          "description": "The type of Cloudlet the rule is for. For example, the string for Forward Rewrite is `frMatchRule`.\n",
                          "enum": [
                            "frMatchRule"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "forwardSettings"
                      ],
                      "title": "Forward Rewrite",
                      "type": "object",
                      "x-akamai": {
                        "file-path": "schemas/match-rule-fr.yaml"
                      }
                    },
                    {
                      "additionalProperties": false,
                      "description": "Contains match rule information for Request Control.\n",
                      "properties": {
                        "akaRuleId": {
                          "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                          "readOnly": true,
                          "type": "string"
                        },
                        "allowDeny": {
                          "description": "If set to `allow`, the request is sent to origin when all conditions are true. If `deny`, the request is denied when all conditions are true. If `denybranded`, the request is denied and rerouted according to the configuration of the [Request Control behavior](https://techdocs.akamai.com/property-mgr/reference/latest-request-control).\n",
                          "enum": [
                            "allow",
                            "deny",
                            "denybranded"
                          ],
                          "type": "string"
                        },
                        "disabled": {
                          "default": false,
                          "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                          "type": "boolean"
                        },
                        "end": {
                          "default": 0,
                          "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "id": {
                          "description": "__Read-only__ Akamai internal use only.\n",
                          "nullable": true,
                          "readOnly": true,
                          "type": "integer"
                        },
                        "location": {
                          "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                          "readOnly": true,
                          "type": "string"
                        },
                        "matches": {
                          "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                          "items": {
                            "additionalProperties": false,
                            "description": "The match rule criteria.\n",
                            "oneOf": [
                              {
                                "required": [
                                  "matchType",
                                  "matchValue"
                                ],
                                "title": "matchType and matchValue required"
                              },
                              {
                                "required": [
                                  "matchType",
                                  "objectMatchValue"
                                ],
                                "title": "matchType and objectMatchValue required"
                              }
                            ],
                            "properties": {
                              "caseSensitive": {
                                "description": "If `true`, the match is case sensitive.\n",
                                "type": "boolean"
                              },
                              "checkIPs": {
                                "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                "enum": [
                                  "CONNECTING_IP",
                                  "XFF_HEADERS",
                                  "CONNECTING_IP XFF_HEADERS"
                                ],
                                "type": "string"
                              },
                              "matchOperator": {
                                "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                "enum": [
                                  "contains",
                                  "exists",
                                  "equals"
                                ],
                                "type": "string"
                              },
                              "matchType": {
                                "description": "The type of match used.\n",
                                "enum": [
                                  "clientip",
                                  "continent",
                                  "cookie",
                                  "countrycode",
                                  "deviceCharacteristics",
                                  "extension",
                                  "header",
                                  "hostname",
                                  "method",
                                  "path",
                                  "protocol",
                                  "proxy",
                                  "query",
                                  "regioncode"
                                ],
                                "type": "string"
                              },
                              "matchValue": {
                                "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                "maxLength": 8192,
                                "minLength": 1,
                                "type": "string"
                              },
                              "negate": {
                                "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                                "type": "boolean"
                              },
                              "objectMatchValue": {
                                "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                "oneOf": [
                                  {
                                    "additionalProperties": false,
                                    "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                    "properties": {
                                      "type": {
                                        "description": "The object type, which is `simple`.\n",
                                        "enum": [
                                          "simple"
                                        ],
                                        "type": "string"
                                      },
                                      "value": {
                                        "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "items": {
                                          "type": "string"
                                        },
                                        "nullable": true,
                                        "type": "array"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "value"
                                    ],
                                    "title": "Simple",
                                    "type": "object"
                                  },
                                  {
                                    "additionalProperties": false,
                                    "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                    "properties": {
                                      "name": {
                                        "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                        "maxLength": 8192,
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "nameCaseSensitive": {
                                        "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                        "type": "boolean"
                                      },
                                      "nameHasWildcard": {
                                        "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                        "type": "boolean"
                                      },
                                      "options": {
                                        "additionalProperties": false,
                                        "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                        "properties": {
                                          "value": {
                                            "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                            "items": {
                                              "type": "string"
                                            },
                                            "nullable": true,
                                            "type": "array"
                                          },
                                          "valueCaseSensitive": {
                                            "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                            "type": "boolean"
                                          },
                                          "valueEscaped": {
                                            "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                            "type": "boolean"
                                          },
                                          "valueHasWildcard": {
                                            "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                            "type": "boolean"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "type": {
                                        "description": "The array type, which is `object`.\n",
                                        "enum": [
                                          "object"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "type"
                                    ],
                                    "title": "Object",
                                    "type": "object"
                                  }
                                ],
                                "title": "Object match value",
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "nullable": true,
                          "type": "array"
                        },
                        "matchesAlways": {
                          "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n",
                          "type": "boolean"
                        },
                        "name": {
                          "description": "The name of the rule.\n",
                          "maxLength": 8192,
                          "nullable": true,
                          "type": "string"
                        },
                        "start": {
                          "default": 0,
                          "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "type": {
                          "description": "The type of Cloudlet the rule is for. For example, the string for Request Control is `igMatchRule`.\n",
                          "enum": [
                            "igMatchRule"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "allowDeny"
                      ],
                      "title": "Request Control",
                      "type": "object",
                      "x-akamai": {
                        "file-path": "schemas/match-rule-ig.yaml"
                      }
                    },
                    {
                      "type": "object",
                      "description": "Contains match rule information for Visitor Prioritization.\n",
                      "title": "Visitor Prioritization",
                      "additionalProperties": false,
                      "required": [
                        "type",
                        "passThroughPercent"
                      ],
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "Akamai internal use only.\n",
                          "nullable": true,
                          "readOnly": true
                        },
                        "location": {
                          "type": "string",
                          "description": "The navigable endpoint used for the object referred to in the operation.\n",
                          "readOnly": true
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the rule.\n",
                          "nullable": true,
                          "maxLength": 8192
                        },
                        "type": {
                          "type": "string",
                          "description": "The type of Cloudlet the rule is for. For example, the string for Visitor Prioritization is `vpMatchRule`.\n",
                          "enum": [
                            "vpMatchRule"
                          ]
                        },
                        "akaRuleId": {
                          "type": "string",
                          "description": "The rule's unique identifier within the policy version.\n",
                          "readOnly": true
                        },
                        "start": {
                          "type": "integer",
                          "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                          "default": 0,
                          "minimum": 0
                        },
                        "end": {
                          "type": "integer",
                          "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                          "default": 0,
                          "minimum": 0
                        },
                        "matches": {
                          "type": "array",
                          "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                          "nullable": true,
                          "items": {
                            "type": "object",
                            "description": "The match rule criteria.\n",
                            "additionalProperties": false,
                            "oneOf": [
                              {
                                "required": [
                                  "matchType",
                                  "matchValue"
                                ],
                                "title": "matchType and matchValue required"
                              },
                              {
                                "required": [
                                  "matchType",
                                  "objectMatchValue"
                                ],
                                "title": "matchType and objectMatchValue required"
                              }
                            ],
                            "properties": {
                              "caseSensitive": {
                                "type": "boolean",
                                "description": "If `true`, the match is case sensitive.\n"
                              },
                              "matchValue": {
                                "type": "string",
                                "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                                "minLength": 1,
                                "maxLength": 8192
                              },
                              "negate": {
                                "type": "boolean",
                                "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                              },
                              "matchOperator": {
                                "type": "string",
                                "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                                "enum": [
                                  "contains",
                                  "exists",
                                  "equals"
                                ]
                              },
                              "matchType": {
                                "type": "string",
                                "description": "The type of match used.\n",
                                "enum": [
                                  "hostname",
                                  "path",
                                  "extension",
                                  "query",
                                  "cookie",
                                  "deviceCharacteristics",
                                  "clientip",
                                  "continent",
                                  "countrycode",
                                  "regioncode",
                                  "protocol",
                                  "header",
                                  "method",
                                  "proxy"
                                ]
                              },
                              "checkIPs": {
                                "type": "string",
                                "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                                "enum": [
                                  "CONNECTING_IP",
                                  "XFF_HEADERS",
                                  "CONNECTING_IP XFF_HEADERS"
                                ]
                              },
                              "objectMatchValue": {
                                "type": "object",
                                "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                                "title": "Object match value",
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                    "title": "Simple",
                                    "additionalProperties": false,
                                    "required": [
                                      "type",
                                      "value"
                                    ],
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "The object type, which is `simple`.\n",
                                        "enum": [
                                          "simple"
                                        ]
                                      },
                                      "value": {
                                        "type": "array",
                                        "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "nullable": true,
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                    "title": "Object",
                                    "additionalProperties": false,
                                    "required": [
                                      "name",
                                      "type"
                                    ],
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                        "minLength": 1,
                                        "maxLength": 8192
                                      },
                                      "type": {
                                        "type": "string",
                                        "description": "The array type, which is `object`.\n",
                                        "enum": [
                                          "object"
                                        ]
                                      },
                                      "options": {
                                        "type": "object",
                                        "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                        "additionalProperties": false,
                                        "properties": {
                                          "value": {
                                            "type": "array",
                                            "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                            "nullable": true,
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "valueHasWildcard": {
                                            "type": "boolean",
                                            "description": "Set to `true` if the entries for `value` includes wildcards.\n"
                                          },
                                          "valueCaseSensitive": {
                                            "type": "boolean",
                                            "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n"
                                          },
                                          "valueEscaped": {
                                            "type": "boolean",
                                            "description": "Set to `true` if the entries for `value` includes escaped characters.\n"
                                          }
                                        }
                                      },
                                      "nameCaseSensitive": {
                                        "type": "boolean",
                                        "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                      },
                                      "nameHasWildcard": {
                                        "type": "boolean",
                                        "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        },
                        "disabled": {
                          "type": "boolean",
                          "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                          "default": false
                        },
                        "passThroughPercent": {
                          "type": "number",
                          "description": "The range `0.000: 99.000` specifies the percentage of requests that pass through to the origin. The value of `100` means the request always passes through to the origin. For Visitor Prioritization, a value of `-1` means send everyone to the waiting room.\n",
                          "minimum": -1,
                          "maximum": 100
                        },
                        "matchURL": {
                          "type": "string",
                          "description": "The URL the Cloudlet uses to match the incoming request.\n",
                          "nullable": true,
                          "maxLength": 8192
                        },
                        "useIncomingQueryString": {
                          "type": "boolean",
                          "description": "If set to `true`, the Cloudlet includes the request's query string in the rewritten or forwarded URL.\n"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "policy-id-path": {
        "description": "The ID of the policy.\n",
        "in": "path",
        "name": "policyId",
        "required": true,
        "schema": {
          "example": 1001,
          "type": "integer"
        },
        "x-akamai": {
          "file-path": "parameters/policy-id-path.yaml"
        }
      },
      "include-rules-query": {
        "name": "includeRules",
        "in": "query",
        "description": "Including match rules for all policy versions in the results is now disabled. You can get match rules for a single policy version using [Get a Policy Version](https://techdocs.akamai.com/cloudlets/v2/reference/get-policy-version).\n",
        "schema": {
          "type": "boolean",
          "example": true,
          "default": false
        }
      },
      "clone-version-query": {
        "name": "cloneVersion",
        "in": "query",
        "description": "If cloning an existing policy version, this parameter value is the number of the policy version you want to clone. If there are attributes that you do _not_ want propagated from the source policy version, you must provide the new values in the request.\n",
        "schema": {
          "type": "integer",
          "example": 22
        }
      },
      "version-path": {
        "description": "The version number of the policy.\n",
        "in": "path",
        "name": "version",
        "required": true,
        "schema": {
          "example": 2,
          "type": "number"
        },
        "x-akamai": {
          "file-path": "parameters/version-path.yaml"
        }
      },
      "omit-rules-query": {
        "name": "omitRules",
        "in": "query",
        "description": "Excludes the match rules from the results. Defaults to `false`.\n",
        "schema": {
          "type": "boolean",
          "example": true,
          "default": false
        }
      },
      "index-query": {
        "name": "index",
        "in": "query",
        "description": "The order within the current list of rules where you want to add the new rule. If you do not set this parameter, the new rule is added to the end of the current rule list. For Cloudlets, the first rule listed is the first rule evaluated.\n",
        "schema": {
          "type": "integer",
          "example": 3
        }
      },
      "aka-rule-id-path": {
        "name": "akaRuleId",
        "in": "path",
        "description": "The ID of the rule within the policy version.\n",
        "required": true,
        "schema": {
          "type": "string",
          "example": "5db847a66e0566ad"
        }
      }
    },
    "schemas": {
      "activation-status-enum": {
        "type": "string",
        "description": "Value representing activation status.\n",
        "enum": [
          "INACTIVE",
          "PENDING",
          "ACTIVE",
          "FAILED",
          "DEACTIVATED"
        ]
      },
      "policy-activation-policy-info": {
        "type": "object",
        "description": "Returns details of a policy associated with policy activation.\n",
        "additionalProperties": false,
        "required": [
          "policyId",
          "name",
          "version",
          "status",
          "statusDetail",
          "activatedBy",
          "activationDate"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the policy.\n"
          },
          "version": {
            "type": "integer",
            "description": "Version of the policy.\n"
          },
          "policyId": {
            "type": "integer",
            "description": "ID of the policy.\n"
          },
          "status": {
            "type": "string",
            "description": "Value representing activation status.\n",
            "enum": [
              "INACTIVE",
              "PENDING",
              "ACTIVE",
              "FAILED",
              "DEACTIVATED"
            ]
          },
          "statusDetail": {
            "type": "string",
            "description": "Details of the activation status.\n"
          },
          "activatedBy": {
            "type": "string",
            "description": "User name who issued the activation.\n",
            "nullable": true
          },
          "activationDate": {
            "type": "integer",
            "description": "Date of the activation in milliseconds.\n"
          }
        }
      },
      "policy-activation-property-info": {
        "type": "object",
        "description": "Returns details of a property associated with policy activation.\n",
        "additionalProperties": false,
        "required": [
          "name",
          "version",
          "groupId",
          "status",
          "activatedBy",
          "activationDate",
          "id"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID of the property.\n"
          },
          "name": {
            "type": "string",
            "description": "Name of the property.\n"
          },
          "version": {
            "type": "integer",
            "description": "Version of the property.\n"
          },
          "groupId": {
            "type": "integer",
            "description": "Identifies the group where the property is placed.\n"
          },
          "status": {
            "type": "string",
            "description": "Value representing activation status.\n",
            "enum": [
              "INACTIVE",
              "PENDING",
              "ACTIVE",
              "FAILED",
              "DEACTIVATED"
            ]
          },
          "activatedBy": {
            "type": "string",
            "description": "User name who issued the activation.\n",
            "nullable": true
          },
          "activationDate": {
            "type": "integer",
            "description": "Date of the activation in milliseconds.\n"
          }
        }
      },
      "policy-activation": {
        "additionalProperties": false,
        "description": "Returns details of a policy activation.\n",
        "properties": {
          "apiVersion": {
            "description": "The specific version of this API.\n",
            "type": "string"
          },
          "network": {
            "description": "The network, either `STAGING`, `PRODUCTION`, or `prod` as shorthand, on which a load balancing configuration for Application Load Balancer has been activated. Values are case-insensitive in requests.\n",
            "enum": [
              "prod",
              "staging"
            ],
            "type": "string"
          },
          "policyInfo": {
            "type": "object",
            "description": "Returns details of a policy associated with policy activation.\n",
            "additionalProperties": false,
            "required": [
              "policyId",
              "name",
              "version",
              "status",
              "statusDetail",
              "activatedBy",
              "activationDate"
            ],
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the policy.\n"
              },
              "version": {
                "type": "integer",
                "description": "Version of the policy.\n"
              },
              "policyId": {
                "type": "integer",
                "description": "ID of the policy.\n"
              },
              "status": {
                "type": "string",
                "description": "Value representing activation status.\n",
                "enum": [
                  "INACTIVE",
                  "PENDING",
                  "ACTIVE",
                  "FAILED",
                  "DEACTIVATED"
                ]
              },
              "statusDetail": {
                "type": "string",
                "description": "Details of the activation status.\n"
              },
              "activatedBy": {
                "type": "string",
                "description": "User name who issued the activation.\n",
                "nullable": true
              },
              "activationDate": {
                "type": "integer",
                "description": "Date of the activation in milliseconds.\n"
              }
            }
          },
          "propertyInfo": {
            "type": "object",
            "description": "Returns details of a property associated with policy activation.\n",
            "additionalProperties": false,
            "required": [
              "name",
              "version",
              "groupId",
              "status",
              "activatedBy",
              "activationDate",
              "id"
            ],
            "properties": {
              "id": {
                "type": "integer",
                "description": "ID of the property.\n"
              },
              "name": {
                "type": "string",
                "description": "Name of the property.\n"
              },
              "version": {
                "type": "integer",
                "description": "Version of the property.\n"
              },
              "groupId": {
                "type": "integer",
                "description": "Identifies the group where the property is placed.\n"
              },
              "status": {
                "type": "string",
                "description": "Value representing activation status.\n",
                "enum": [
                  "INACTIVE",
                  "PENDING",
                  "ACTIVE",
                  "FAILED",
                  "DEACTIVATED"
                ]
              },
              "activatedBy": {
                "type": "string",
                "description": "User name who issued the activation.\n",
                "nullable": true
              },
              "activationDate": {
                "type": "integer",
                "description": "Date of the activation in milliseconds.\n"
              }
            }
          },
          "serviceVersion": {
            "description": "__Deprecated__ The build of the software running on the server. The value can be `null`.\n",
            "nullable": true,
            "type": "string",
            "x-akamai": {
              "status": "DEPRECATED"
            }
          }
        },
        "required": [
          "network",
          "policyInfo",
          "propertyInfo"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/policy-activation.yaml"
        }
      },
      "objectMatchValueSimpleSubtype": {
        "type": "object",
        "description": "Use the `simple` array option when adding an array of string-based values.\n",
        "title": "Simple",
        "additionalProperties": false,
        "required": [
          "type",
          "value"
        ],
        "properties": {
          "type": {
            "type": "string",
            "description": "The object type, which is `simple`.\n",
            "enum": [
              "simple"
            ]
          },
          "value": {
            "type": "array",
            "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "objectMatchValueObjectSubtype": {
        "additionalProperties": false,
        "description": "Use this for more complex match criteria.\n",
        "properties": {
          "name": {
            "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
            "maxLength": 8192,
            "minLength": 1,
            "type": "string"
          },
          "nameCaseSensitive": {
            "description": "When set to `true`, the `name` match is case-sensitive.\n",
            "type": "boolean"
          },
          "nameHasWildcard": {
            "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
            "type": "boolean"
          },
          "options": {
            "additionalProperties": false,
            "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
            "properties": {
              "value": {
                "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                "items": {
                  "type": "string"
                },
                "nullable": true,
                "type": "array"
              },
              "valueCaseSensitive": {
                "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                "type": "boolean"
              },
              "valueEscaped": {
                "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                "type": "boolean"
              },
              "valueHasWildcard": {
                "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "type": {
            "description": "The array type, which is `object`.\n",
            "enum": [
              "object"
            ],
            "type": "string"
          }
        },
        "required": [
          "name",
          "type"
        ],
        "title": "Object",
        "type": "object"
      },
      "objectMatchValueType": {
        "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
        "oneOf": [
          {
            "additionalProperties": false,
            "description": "Use the `simple` array option when adding an array of string-based values.\n",
            "properties": {
              "type": {
                "description": "The object type, which is `simple`.\n",
                "enum": [
                  "simple"
                ],
                "type": "string"
              },
              "value": {
                "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                "items": {
                  "type": "string"
                },
                "nullable": true,
                "type": "array"
              }
            },
            "required": [
              "type",
              "value"
            ],
            "title": "Simple",
            "type": "object"
          },
          {
            "additionalProperties": false,
            "description": "Use this for more complex match criteria.\n",
            "properties": {
              "name": {
                "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                "maxLength": 8192,
                "minLength": 1,
                "type": "string"
              },
              "nameCaseSensitive": {
                "description": "When set to `true`, the `name` match is case-sensitive.\n",
                "type": "boolean"
              },
              "nameHasWildcard": {
                "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                "type": "boolean"
              },
              "options": {
                "additionalProperties": false,
                "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                "properties": {
                  "value": {
                    "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                    "items": {
                      "type": "string"
                    },
                    "nullable": true,
                    "type": "array"
                  },
                  "valueCaseSensitive": {
                    "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                    "type": "boolean"
                  },
                  "valueEscaped": {
                    "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                    "type": "boolean"
                  },
                  "valueHasWildcard": {
                    "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                    "type": "boolean"
                  }
                },
                "type": "object"
              },
              "type": {
                "description": "The array type, which is `object`.\n",
                "enum": [
                  "object"
                ],
                "type": "string"
              }
            },
            "required": [
              "name",
              "type"
            ],
            "title": "Object",
            "type": "object"
          }
        ],
        "title": "Object match value",
        "type": "object"
      },
      "matchCriteriaType": {
        "type": "object",
        "description": "The match rule criteria.\n",
        "additionalProperties": false,
        "oneOf": [
          {
            "required": [
              "matchType",
              "matchValue"
            ],
            "title": "matchType and matchValue required"
          },
          {
            "required": [
              "matchType",
              "objectMatchValue"
            ],
            "title": "matchType and objectMatchValue required"
          }
        ],
        "properties": {
          "caseSensitive": {
            "type": "boolean",
            "description": "If `true`, the match is case sensitive.\n"
          },
          "checkIPs": {
            "type": "string",
            "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
            "nullable": true,
            "enum": [
              "CONNECTING_IP",
              "XFF_HEADERS",
              "CONNECTING_IP XFF_HEADERS"
            ]
          },
          "matchOperator": {
            "type": "string",
            "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
            "enum": [
              "contains",
              "exists",
              "equals"
            ]
          },
          "matchType": {
            "type": "string",
            "description": "The type of match used.\n",
            "enum": [
              "header",
              "hostname",
              "path",
              "extension",
              "query",
              "regex",
              "cookie",
              "deviceCharacteristics",
              "clientip",
              "continent",
              "countrycode",
              "regioncode",
              "protocol",
              "method",
              "proxy"
            ]
          },
          "matchValue": {
            "type": "string",
            "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
            "minLength": 1,
            "maxLength": 8192
          },
          "negate": {
            "type": "boolean",
            "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
          },
          "objectMatchValue": {
            "type": "object",
            "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
            "title": "Object match value",
            "oneOf": [
              {
                "type": "object",
                "description": "Use the `simple` array option when adding an array of string-based values.\n",
                "title": "Simple",
                "additionalProperties": false,
                "required": [
                  "type",
                  "value"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "The object type, which is `simple`.\n",
                    "enum": [
                      "simple"
                    ]
                  },
                  "value": {
                    "type": "array",
                    "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                    "nullable": true,
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "type": "object",
                "description": "Use this for more complex match criteria.\n",
                "title": "Object",
                "additionalProperties": false,
                "required": [
                  "name",
                  "type"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                    "minLength": 1,
                    "maxLength": 8192
                  },
                  "type": {
                    "type": "string",
                    "description": "The array type, which is `object`.\n",
                    "enum": [
                      "object"
                    ]
                  },
                  "options": {
                    "type": "object",
                    "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                    "additionalProperties": false,
                    "properties": {
                      "value": {
                        "type": "array",
                        "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                        "nullable": true,
                        "items": {
                          "type": "string"
                        }
                      },
                      "valueCaseSensitive": {
                        "type": "boolean",
                        "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n"
                      },
                      "valueEscaped": {
                        "type": "boolean",
                        "description": "Set to `true` if the entries for `value` includes escaped characters.\n"
                      },
                      "valueHasWildcard": {
                        "type": "boolean",
                        "description": "Set to `true` if the entries for `value` includes wildcards.\n"
                      }
                    }
                  },
                  "nameCaseSensitive": {
                    "type": "boolean",
                    "description": "When set to `true`, the `name` match is case-sensitive.\n"
                  },
                  "nameHasWildcard": {
                    "type": "boolean",
                    "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                  }
                }
              }
            ]
          }
        }
      },
      "match-rule-alb": {
        "type": "object",
        "description": "Contains match rule information for Application Load Balancer.\n",
        "title": "Application Load Balancer",
        "additionalProperties": false,
        "required": [
          "type"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Akamai internal use only.\n",
            "nullable": true,
            "readOnly": true
          },
          "location": {
            "type": "string",
            "description": "The navigable endpoint used for the object referred to in the operation.\n",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "The name of the rule.\n",
            "nullable": true,
            "maxLength": 8192
          },
          "type": {
            "type": "string",
            "description": "The type of Cloudlet the rule is for. For example, the string for Application Load Balancer is `albMatchRule`.\n",
            "enum": [
              "albMatchRule"
            ]
          },
          "akaRuleId": {
            "type": "string",
            "description": "The rule's unique identifier within the policy version.\n",
            "readOnly": true
          },
          "disabled": {
            "type": "boolean",
            "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
            "default": false
          },
          "start": {
            "type": "integer",
            "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
            "default": 0,
            "minimum": 0
          },
          "end": {
            "type": "integer",
            "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
            "default": 0,
            "minimum": 0
          },
          "matchURL": {
            "type": "string",
            "description": "The URL the Cloudlet uses to match the incoming request.\n",
            "nullable": true,
            "maxLength": 8192
          },
          "matches": {
            "type": "array",
            "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
            "nullable": true,
            "items": {
              "type": "object",
              "description": "The match rule criteria.\n",
              "additionalProperties": false,
              "oneOf": [
                {
                  "required": [
                    "matchType",
                    "matchValue"
                  ],
                  "title": "matchType and matchValue required"
                },
                {
                  "required": [
                    "matchType",
                    "objectMatchValue"
                  ],
                  "title": "matchType and objectMatchValue required"
                }
              ],
              "properties": {
                "caseSensitive": {
                  "type": "boolean",
                  "description": "If `true`, the match is case sensitive.\n"
                },
                "checkIPs": {
                  "type": "string",
                  "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                  "nullable": true,
                  "enum": [
                    "CONNECTING_IP",
                    "XFF_HEADERS",
                    "CONNECTING_IP XFF_HEADERS"
                  ]
                },
                "matchOperator": {
                  "type": "string",
                  "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                  "enum": [
                    "contains",
                    "exists",
                    "equals"
                  ]
                },
                "matchType": {
                  "type": "string",
                  "description": "The type of match used.\n",
                  "enum": [
                    "header",
                    "hostname",
                    "path",
                    "extension",
                    "query",
                    "regex",
                    "cookie",
                    "deviceCharacteristics",
                    "clientip",
                    "continent",
                    "countrycode",
                    "regioncode",
                    "protocol",
                    "method",
                    "proxy"
                  ]
                },
                "matchValue": {
                  "type": "string",
                  "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                  "minLength": 1,
                  "maxLength": 8192
                },
                "negate": {
                  "type": "boolean",
                  "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                },
                "objectMatchValue": {
                  "type": "object",
                  "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                  "title": "Object match value",
                  "oneOf": [
                    {
                      "type": "object",
                      "description": "Use the `simple` array option when adding an array of string-based values.\n",
                      "title": "Simple",
                      "additionalProperties": false,
                      "required": [
                        "type",
                        "value"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "The object type, which is `simple`.\n",
                          "enum": [
                            "simple"
                          ]
                        },
                        "value": {
                          "type": "array",
                          "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                          "nullable": true,
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "description": "Use this for more complex match criteria.\n",
                      "title": "Object",
                      "additionalProperties": false,
                      "required": [
                        "name",
                        "type"
                      ],
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                          "minLength": 1,
                          "maxLength": 8192
                        },
                        "type": {
                          "type": "string",
                          "description": "The array type, which is `object`.\n",
                          "enum": [
                            "object"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                          "additionalProperties": false,
                          "properties": {
                            "value": {
                              "type": "array",
                              "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                              "nullable": true,
                              "items": {
                                "type": "string"
                              }
                            },
                            "valueCaseSensitive": {
                              "type": "boolean",
                              "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n"
                            },
                            "valueEscaped": {
                              "type": "boolean",
                              "description": "Set to `true` if the entries for `value` includes escaped characters.\n"
                            },
                            "valueHasWildcard": {
                              "type": "boolean",
                              "description": "Set to `true` if the entries for `value` includes wildcards.\n"
                            }
                          }
                        },
                        "nameCaseSensitive": {
                          "type": "boolean",
                          "description": "When set to `true`, the `name` match is case-sensitive.\n"
                        },
                        "nameHasWildcard": {
                          "type": "boolean",
                          "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "matchesAlways": {
            "type": "boolean",
            "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n"
          },
          "forwardSettings": {
            "type": "object",
            "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
            "additionalProperties": false,
            "properties": {
              "pathAndQS": {
                "type": "string",
                "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                "minLength": 1,
                "maxLength": 8192
              },
              "useIncomingQueryString": {
                "type": "boolean",
                "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n"
              },
              "originId": {
                "type": "string",
                "description": "The conditional origin's unique identifier.\n",
                "nullable": true,
                "maxLength": 8192
              }
            }
          }
        }
      },
      "definitions-matchCriteriaType": {
        "additionalProperties": false,
        "description": "The match rule criteria.\n",
        "oneOf": [
          {
            "required": [
              "matchType",
              "matchValue"
            ],
            "title": "matchType and matchValue required"
          },
          {
            "required": [
              "matchType",
              "objectMatchValue"
            ],
            "title": "matchType and objectMatchValue required"
          }
        ],
        "properties": {
          "caseSensitive": {
            "description": "If `true`, the match is case sensitive.\n",
            "type": "boolean"
          },
          "checkIPs": {
            "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
            "enum": [
              "CONNECTING_IP",
              "XFF_HEADERS",
              "CONNECTING_IP XFF_HEADERS"
            ],
            "type": "string"
          },
          "matchOperator": {
            "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
            "enum": [
              "contains",
              "exists",
              "equals"
            ],
            "type": "string"
          },
          "matchType": {
            "description": "The type of match used.\n",
            "enum": [
              "hostname",
              "path",
              "extension",
              "query",
              "cookie",
              "deviceCharacteristics",
              "clientip",
              "continent",
              "countrycode",
              "regioncode",
              "protocol",
              "header",
              "method",
              "proxy"
            ],
            "type": "string"
          },
          "matchValue": {
            "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
            "maxLength": 8192,
            "minLength": 1,
            "type": "string"
          },
          "negate": {
            "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
            "type": "boolean"
          },
          "objectMatchValue": {
            "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
            "oneOf": [
              {
                "additionalProperties": false,
                "description": "Use the `simple` array option when adding an array of string-based values.\n",
                "properties": {
                  "type": {
                    "description": "The object type, which is `simple`.\n",
                    "enum": [
                      "simple"
                    ],
                    "type": "string"
                  },
                  "value": {
                    "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                    "items": {
                      "type": "string"
                    },
                    "nullable": true,
                    "type": "array"
                  }
                },
                "required": [
                  "type",
                  "value"
                ],
                "title": "Simple",
                "type": "object"
              },
              {
                "additionalProperties": false,
                "description": "Use this for more complex match criteria.\n",
                "properties": {
                  "name": {
                    "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                    "maxLength": 8192,
                    "minLength": 1,
                    "type": "string"
                  },
                  "nameCaseSensitive": {
                    "description": "When set to `true`, the `name` match is case-sensitive.\n",
                    "type": "boolean"
                  },
                  "nameHasWildcard": {
                    "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                    "type": "boolean"
                  },
                  "options": {
                    "additionalProperties": false,
                    "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                    "properties": {
                      "value": {
                        "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                        "items": {
                          "type": "string"
                        },
                        "nullable": true,
                        "type": "array"
                      },
                      "valueCaseSensitive": {
                        "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                        "type": "boolean"
                      },
                      "valueEscaped": {
                        "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                        "type": "boolean"
                      },
                      "valueHasWildcard": {
                        "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                        "type": "boolean"
                      }
                    },
                    "type": "object"
                  },
                  "type": {
                    "description": "The array type, which is `object`.\n",
                    "enum": [
                      "object"
                    ],
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "type"
                ],
                "title": "Object",
                "type": "object"
              }
            ],
            "title": "Object match value",
            "type": "object"
          }
        },
        "type": "object"
      },
      "match-rule-ap": {
        "additionalProperties": false,
        "description": "Contains match rule information for API Prioritization.\n",
        "properties": {
          "akaRuleId": {
            "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
            "readOnly": true,
            "type": "string"
          },
          "disabled": {
            "default": false,
            "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
            "type": "boolean"
          },
          "end": {
            "default": 0,
            "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
            "minimum": 0,
            "type": "integer"
          },
          "id": {
            "description": "__Read-only__ Akamai internal use only.\n",
            "nullable": true,
            "readOnly": true,
            "type": "integer"
          },
          "location": {
            "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
            "readOnly": true,
            "type": "string"
          },
          "matchURL": {
            "description": "The URL the Cloudlet uses to match the incoming request.\n",
            "maxLength": 8192,
            "nullable": true,
            "type": "string"
          },
          "matches": {
            "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
            "items": {
              "additionalProperties": false,
              "description": "The match rule criteria.\n",
              "oneOf": [
                {
                  "required": [
                    "matchType",
                    "matchValue"
                  ],
                  "title": "matchType and matchValue required"
                },
                {
                  "required": [
                    "matchType",
                    "objectMatchValue"
                  ],
                  "title": "matchType and objectMatchValue required"
                }
              ],
              "properties": {
                "caseSensitive": {
                  "description": "If `true`, the match is case sensitive.\n",
                  "type": "boolean"
                },
                "checkIPs": {
                  "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                  "enum": [
                    "CONNECTING_IP",
                    "XFF_HEADERS",
                    "CONNECTING_IP XFF_HEADERS"
                  ],
                  "type": "string"
                },
                "matchOperator": {
                  "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                  "enum": [
                    "contains",
                    "exists",
                    "equals"
                  ],
                  "type": "string"
                },
                "matchType": {
                  "description": "The type of match used.\n",
                  "enum": [
                    "hostname",
                    "path",
                    "extension",
                    "query",
                    "cookie",
                    "deviceCharacteristics",
                    "clientip",
                    "continent",
                    "countrycode",
                    "regioncode",
                    "protocol",
                    "header",
                    "method",
                    "proxy"
                  ],
                  "type": "string"
                },
                "matchValue": {
                  "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                  "maxLength": 8192,
                  "minLength": 1,
                  "type": "string"
                },
                "negate": {
                  "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                  "type": "boolean"
                },
                "objectMatchValue": {
                  "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                  "oneOf": [
                    {
                      "additionalProperties": false,
                      "description": "Use the `simple` array option when adding an array of string-based values.\n",
                      "properties": {
                        "type": {
                          "description": "The object type, which is `simple`.\n",
                          "enum": [
                            "simple"
                          ],
                          "type": "string"
                        },
                        "value": {
                          "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                          "items": {
                            "type": "string"
                          },
                          "nullable": true,
                          "type": "array"
                        }
                      },
                      "required": [
                        "type",
                        "value"
                      ],
                      "title": "Simple",
                      "type": "object"
                    },
                    {
                      "additionalProperties": false,
                      "description": "Use this for more complex match criteria.\n",
                      "properties": {
                        "name": {
                          "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                          "maxLength": 8192,
                          "minLength": 1,
                          "type": "string"
                        },
                        "nameCaseSensitive": {
                          "description": "When set to `true`, the `name` match is case-sensitive.\n",
                          "type": "boolean"
                        },
                        "nameHasWildcard": {
                          "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                          "type": "boolean"
                        },
                        "options": {
                          "additionalProperties": false,
                          "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                          "properties": {
                            "value": {
                              "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                              "items": {
                                "type": "string"
                              },
                              "nullable": true,
                              "type": "array"
                            },
                            "valueCaseSensitive": {
                              "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                              "type": "boolean"
                            },
                            "valueEscaped": {
                              "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                              "type": "boolean"
                            },
                            "valueHasWildcard": {
                              "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                              "type": "boolean"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "description": "The array type, which is `object`.\n",
                          "enum": [
                            "object"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "type"
                      ],
                      "title": "Object",
                      "type": "object"
                    }
                  ],
                  "title": "Object match value",
                  "type": "object"
                }
              },
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          },
          "name": {
            "description": "The name of the rule.\n",
            "maxLength": 8192,
            "nullable": true,
            "type": "string"
          },
          "passThroughPercent": {
            "description": "The percentage of requests that pass through to the origin, with `100` indicating the request always passes through to the origin. For Visitor Prioritization, a value of -1 sends everyone to the waiting room.\n",
            "maximum": 100,
            "minimum": -1,
            "type": "number"
          },
          "start": {
            "default": 0,
            "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
            "minimum": 0,
            "type": "integer"
          },
          "type": {
            "description": "The type of Cloudlet the rule is for. For example, the string for API Prioritization is `apMatchRule`.\n",
            "enum": [
              "apMatchRule"
            ],
            "type": "string"
          }
        },
        "required": [
          "type",
          "passThroughPercent"
        ],
        "title": "API Prioritization",
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/match-rule-ap.yaml"
        }
      },
      "objectMatchValueRangeSubtype": {
        "additionalProperties": false,
        "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.\n",
        "properties": {
          "type": {
            "description": "The object type, which is `range`.\n",
            "enum": [
              "range"
            ],
            "type": "string"
          },
          "value": {
            "description": "An inclusive range comprised of two numbers to match on.\n",
            "items": {
              "type": "integer"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "required": [
          "type",
          "value"
        ],
        "title": "Range",
        "type": "object"
      },
      "definitions-objectMatchValueObjectSubtype": {
        "additionalProperties": false,
        "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
        "properties": {
          "name": {
            "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
            "maxLength": 8192,
            "minLength": 1,
            "type": "string"
          },
          "nameCaseSensitive": {
            "description": "When set to `true`, the `name` match is case-sensitive.\n",
            "type": "boolean"
          },
          "nameHasWildcard": {
            "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
            "type": "boolean"
          },
          "options": {
            "additionalProperties": false,
            "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
            "properties": {
              "value": {
                "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                "items": {
                  "type": "string"
                },
                "nullable": true,
                "type": "array"
              },
              "valueCaseSensitive": {
                "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                "type": "boolean"
              },
              "valueEscaped": {
                "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                "type": "boolean"
              },
              "valueHasWildcard": {
                "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "type": {
            "description": "The array type, which is `object`.\n",
            "enum": [
              "object"
            ],
            "type": "string"
          }
        },
        "required": [
          "name",
          "type"
        ],
        "title": "Object",
        "type": "object"
      },
      "definitions-objectMatchValueType": {
        "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.\n",
        "oneOf": [
          {
            "additionalProperties": false,
            "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.\n",
            "properties": {
              "type": {
                "description": "The object type, which is `range`.\n",
                "enum": [
                  "range"
                ],
                "type": "string"
              },
              "value": {
                "description": "An inclusive range comprised of two numbers to match on.\n",
                "items": {
                  "type": "integer"
                },
                "nullable": true,
                "type": "array"
              }
            },
            "required": [
              "type",
              "value"
            ],
            "title": "Range",
            "type": "object"
          },
          {
            "additionalProperties": false,
            "description": "Use the `simple` array option when adding an array of string-based values.\n",
            "properties": {
              "type": {
                "description": "The object type, which is `simple`.\n",
                "enum": [
                  "simple"
                ],
                "type": "string"
              },
              "value": {
                "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                "items": {
                  "type": "string"
                },
                "nullable": true,
                "type": "array"
              }
            },
            "required": [
              "type",
              "value"
            ],
            "title": "Simple",
            "type": "object"
          },
          {
            "additionalProperties": false,
            "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
            "properties": {
              "name": {
                "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                "maxLength": 8192,
                "minLength": 1,
                "type": "string"
              },
              "nameCaseSensitive": {
                "description": "When set to `true`, the `name` match is case-sensitive.\n",
                "type": "boolean"
              },
              "nameHasWildcard": {
                "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                "type": "boolean"
              },
              "options": {
                "additionalProperties": false,
                "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                "properties": {
                  "value": {
                    "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                    "items": {
                      "type": "string"
                    },
                    "nullable": true,
                    "type": "array"
                  },
                  "valueCaseSensitive": {
                    "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                    "type": "boolean"
                  },
                  "valueEscaped": {
                    "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                    "type": "boolean"
                  },
                  "valueHasWildcard": {
                    "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                    "type": "boolean"
                  }
                },
                "type": "object"
              },
              "type": {
                "description": "The array type, which is `object`.\n",
                "enum": [
                  "object"
                ],
                "type": "string"
              }
            },
            "required": [
              "name",
              "type"
            ],
            "title": "Object",
            "type": "object"
          }
        ],
        "title": "Object match value",
        "type": "object"
      },
      "match-rule-as-definitions_definitions-matchCriteriaType": {
        "additionalProperties": false,
        "description": "The match rule criteria.\n",
        "oneOf": [
          {
            "required": [
              "matchType",
              "matchValue"
            ],
            "title": "matchType and matchValue required"
          },
          {
            "required": [
              "matchType",
              "objectMatchValue"
            ],
            "title": "matchType and objectMatchValue required"
          }
        ],
        "properties": {
          "caseSensitive": {
            "description": "If `true`, the match is case sensitive.\n",
            "type": "boolean"
          },
          "checkIPs": {
            "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
            "enum": [
              "CONNECTING_IP",
              "XFF_HEADERS",
              "CONNECTING_IP XFF_HEADERS"
            ],
            "type": "string"
          },
          "matchOperator": {
            "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
            "enum": [
              "contains",
              "exists",
              "equals"
            ],
            "type": "string"
          },
          "matchType": {
            "description": "The type of match used.\n",
            "enum": [
              "header",
              "hostname",
              "path",
              "extension",
              "query",
              "range",
              "regex",
              "cookie",
              "deviceCharacteristics",
              "clientip",
              "continent",
              "countrycode",
              "regioncode",
              "protocol",
              "method",
              "proxy"
            ],
            "type": "string"
          },
          "matchValue": {
            "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
            "maxLength": 8192,
            "minLength": 1,
            "type": "string"
          },
          "negate": {
            "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
            "type": "boolean"
          },
          "objectMatchValue": {
            "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.\n",
            "oneOf": [
              {
                "additionalProperties": false,
                "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.\n",
                "properties": {
                  "type": {
                    "description": "The object type, which is `range`.\n",
                    "enum": [
                      "range"
                    ],
                    "type": "string"
                  },
                  "value": {
                    "description": "An inclusive range comprised of two numbers to match on.\n",
                    "items": {
                      "type": "integer"
                    },
                    "nullable": true,
                    "type": "array"
                  }
                },
                "required": [
                  "type",
                  "value"
                ],
                "title": "Range",
                "type": "object"
              },
              {
                "additionalProperties": false,
                "description": "Use the `simple` array option when adding an array of string-based values.\n",
                "properties": {
                  "type": {
                    "description": "The object type, which is `simple`.\n",
                    "enum": [
                      "simple"
                    ],
                    "type": "string"
                  },
                  "value": {
                    "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                    "items": {
                      "type": "string"
                    },
                    "nullable": true,
                    "type": "array"
                  }
                },
                "required": [
                  "type",
                  "value"
                ],
                "title": "Simple",
                "type": "object"
              },
              {
                "additionalProperties": false,
                "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                "properties": {
                  "name": {
                    "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                    "maxLength": 8192,
                    "minLength": 1,
                    "type": "string"
                  },
                  "nameCaseSensitive": {
                    "description": "When set to `true`, the `name` match is case-sensitive.\n",
                    "type": "boolean"
                  },
                  "nameHasWildcard": {
                    "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                    "type": "boolean"
                  },
                  "options": {
                    "additionalProperties": false,
                    "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                    "properties": {
                      "value": {
                        "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                        "items": {
                          "type": "string"
                        },
                        "nullable": true,
                        "type": "array"
                      },
                      "valueCaseSensitive": {
                        "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                        "type": "boolean"
                      },
                      "valueEscaped": {
                        "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                        "type": "boolean"
                      },
                      "valueHasWildcard": {
                        "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                        "type": "boolean"
                      }
                    },
                    "type": "object"
                  },
                  "type": {
                    "description": "The array type, which is `object`.\n",
                    "enum": [
                      "object"
                    ],
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "type"
                ],
                "title": "Object",
                "type": "object"
              }
            ],
            "title": "Object match value",
            "type": "object"
          }
        },
        "type": "object"
      },
      "match-rule-as": {
        "additionalProperties": false,
        "description": "Contains match rule information for Audience Segmentation.\n",
        "properties": {
          "akaRuleId": {
            "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
            "readOnly": true,
            "type": "string"
          },
          "disabled": {
            "default": false,
            "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
            "type": "boolean"
          },
          "end": {
            "default": 0,
            "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
            "minimum": 0,
            "type": "integer"
          },
          "forwardSettings": {
            "additionalProperties": false,
            "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
            "properties": {
              "originId": {
                "description": "The conditional origin's unique identifier.\n",
                "maxLength": 8192,
                "nullable": true,
                "type": "string"
              },
              "pathAndQS": {
                "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                "maxLength": 8192,
                "minLength": 1,
                "type": "string"
              },
              "useIncomingQueryString": {
                "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n",
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "id": {
            "description": "__Read-only__ Akamai internal use only.\n",
            "nullable": true,
            "readOnly": true,
            "type": "integer"
          },
          "location": {
            "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
            "readOnly": true,
            "type": "string"
          },
          "matchURL": {
            "description": "The URL the Cloudlet uses to match the incoming request.\n",
            "maxLength": 8192,
            "nullable": true,
            "type": "string"
          },
          "matches": {
            "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
            "items": {
              "additionalProperties": false,
              "description": "The match rule criteria.\n",
              "oneOf": [
                {
                  "required": [
                    "matchType",
                    "matchValue"
                  ],
                  "title": "matchType and matchValue required"
                },
                {
                  "required": [
                    "matchType",
                    "objectMatchValue"
                  ],
                  "title": "matchType and objectMatchValue required"
                }
              ],
              "properties": {
                "caseSensitive": {
                  "description": "If `true`, the match is case sensitive.\n",
                  "type": "boolean"
                },
                "checkIPs": {
                  "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                  "enum": [
                    "CONNECTING_IP",
                    "XFF_HEADERS",
                    "CONNECTING_IP XFF_HEADERS"
                  ],
                  "type": "string"
                },
                "matchOperator": {
                  "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                  "enum": [
                    "contains",
                    "exists",
                    "equals"
                  ],
                  "type": "string"
                },
                "matchType": {
                  "description": "The type of match used.\n",
                  "enum": [
                    "header",
                    "hostname",
                    "path",
                    "extension",
                    "query",
                    "range",
                    "regex",
                    "cookie",
                    "deviceCharacteristics",
                    "clientip",
                    "continent",
                    "countrycode",
                    "regioncode",
                    "protocol",
                    "method",
                    "proxy"
                  ],
                  "type": "string"
                },
                "matchValue": {
                  "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                  "maxLength": 8192,
                  "minLength": 1,
                  "type": "string"
                },
                "negate": {
                  "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                  "type": "boolean"
                },
                "objectMatchValue": {
                  "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.\n",
                  "oneOf": [
                    {
                      "additionalProperties": false,
                      "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.\n",
                      "properties": {
                        "type": {
                          "description": "The object type, which is `range`.\n",
                          "enum": [
                            "range"
                          ],
                          "type": "string"
                        },
                        "value": {
                          "description": "An inclusive range comprised of two numbers to match on.\n",
                          "items": {
                            "type": "integer"
                          },
                          "nullable": true,
                          "type": "array"
                        }
                      },
                      "required": [
                        "type",
                        "value"
                      ],
                      "title": "Range",
                      "type": "object"
                    },
                    {
                      "additionalProperties": false,
                      "description": "Use the `simple` array option when adding an array of string-based values.\n",
                      "properties": {
                        "type": {
                          "description": "The object type, which is `simple`.\n",
                          "enum": [
                            "simple"
                          ],
                          "type": "string"
                        },
                        "value": {
                          "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                          "items": {
                            "type": "string"
                          },
                          "nullable": true,
                          "type": "array"
                        }
                      },
                      "required": [
                        "type",
                        "value"
                      ],
                      "title": "Simple",
                      "type": "object"
                    },
                    {
                      "additionalProperties": false,
                      "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                      "properties": {
                        "name": {
                          "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                          "maxLength": 8192,
                          "minLength": 1,
                          "type": "string"
                        },
                        "nameCaseSensitive": {
                          "description": "When set to `true`, the `name` match is case-sensitive.\n",
                          "type": "boolean"
                        },
                        "nameHasWildcard": {
                          "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                          "type": "boolean"
                        },
                        "options": {
                          "additionalProperties": false,
                          "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                          "properties": {
                            "value": {
                              "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                              "items": {
                                "type": "string"
                              },
                              "nullable": true,
                              "type": "array"
                            },
                            "valueCaseSensitive": {
                              "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                              "type": "boolean"
                            },
                            "valueEscaped": {
                              "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                              "type": "boolean"
                            },
                            "valueHasWildcard": {
                              "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                              "type": "boolean"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "description": "The array type, which is `object`.\n",
                          "enum": [
                            "object"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "type"
                      ],
                      "title": "Object",
                      "type": "object"
                    }
                  ],
                  "title": "Object match value",
                  "type": "object"
                }
              },
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          },
          "name": {
            "description": "The name of the rule.\n",
            "maxLength": 8192,
            "nullable": true,
            "type": "string"
          },
          "start": {
            "default": 0,
            "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
            "minimum": 0,
            "type": "integer"
          },
          "type": {
            "description": "The type of Cloudlet the rule is for. For example, the string for Audience Segmentation is `asMatchRule`.\n",
            "enum": [
              "asMatchRule"
            ],
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "Audience Segmentation",
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/match-rule-as.yaml"
        }
      },
      "match-rule-cd-definitions_definitions-matchCriteriaType": {
        "additionalProperties": false,
        "description": "The match rule criteria.\n",
        "oneOf": [
          {
            "required": [
              "matchType",
              "matchValue"
            ],
            "title": "matchType and matchValue required"
          },
          {
            "required": [
              "matchType",
              "objectMatchValue"
            ],
            "title": "matchType and objectMatchValue required"
          }
        ],
        "properties": {
          "caseSensitive": {
            "description": "If `true`, the match is case sensitive.\n",
            "type": "boolean"
          },
          "checkIPs": {
            "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
            "enum": [
              "CONNECTING_IP",
              "XFF_HEADERS",
              "CONNECTING_IP XFF_HEADERS"
            ],
            "nullable": true,
            "type": "string"
          },
          "matchOperator": {
            "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
            "enum": [
              "contains",
              "exists",
              "equals"
            ],
            "type": "string"
          },
          "matchType": {
            "description": "The type of match used.\n",
            "enum": [
              "header",
              "hostname",
              "path",
              "extension",
              "query",
              "cookie",
              "deviceCharacteristics",
              "clientip",
              "continent",
              "countrycode",
              "regioncode",
              "protocol",
              "method",
              "proxy"
            ],
            "type": "string"
          },
          "matchValue": {
            "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
            "maxLength": 8192,
            "minLength": 1,
            "type": "string"
          },
          "negate": {
            "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
            "type": "boolean"
          },
          "objectMatchValue": {
            "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
            "oneOf": [
              {
                "additionalProperties": false,
                "description": "Use the `simple` array option when adding an array of string-based values.\n",
                "properties": {
                  "type": {
                    "description": "The object type, which is `simple`.\n",
                    "enum": [
                      "simple"
                    ],
                    "type": "string"
                  },
                  "value": {
                    "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                    "items": {
                      "type": "string"
                    },
                    "nullable": true,
                    "type": "array"
                  }
                },
                "required": [
                  "type",
                  "value"
                ],
                "title": "Simple",
                "type": "object"
              },
              {
                "additionalProperties": false,
                "description": "Use this for more complex match criteria.\n",
                "properties": {
                  "name": {
                    "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                    "maxLength": 8192,
                    "minLength": 1,
                    "type": "string"
                  },
                  "nameCaseSensitive": {
                    "description": "When set to `true`, the `name` match is case-sensitive.\n",
                    "type": "boolean"
                  },
                  "nameHasWildcard": {
                    "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                    "type": "boolean"
                  },
                  "options": {
                    "additionalProperties": false,
                    "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                    "properties": {
                      "value": {
                        "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                        "items": {
                          "type": "string"
                        },
                        "nullable": true,
                        "type": "array"
                      },
                      "valueCaseSensitive": {
                        "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                        "type": "boolean"
                      },
                      "valueEscaped": {
                        "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                        "type": "boolean"
                      },
                      "valueHasWildcard": {
                        "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                        "type": "boolean"
                      }
                    },
                    "type": "object"
                  },
                  "type": {
                    "description": "The array type, which is `object`.\n",
                    "enum": [
                      "object"
                    ],
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "type"
                ],
                "title": "Object",
                "type": "object"
              }
            ],
            "title": "Object match value",
            "type": "object"
          }
        },
        "type": "object"
      },
      "match-rule-cd": {
        "additionalProperties": false,
        "description": "Contains match rule information for Phased Release.\n",
        "properties": {
          "akaRuleId": {
            "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
            "readOnly": true,
            "type": "string"
          },
          "disabled": {
            "default": false,
            "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
            "type": "boolean"
          },
          "end": {
            "default": 0,
            "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
            "minimum": 0,
            "type": "integer"
          },
          "forwardSettings": {
            "additionalProperties": false,
            "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, and `percent`.\n",
            "properties": {
              "originId": {
                "description": "The conditional origin's unique identifier.\n",
                "maxLength": 8192,
                "nullable": true,
                "type": "string"
              },
              "percent": {
                "description": "The percentage of visitors directed to a different origin.\n",
                "maximum": 100,
                "minimum": 0,
                "type": "number"
              }
            },
            "type": "object"
          },
          "id": {
            "description": "__Read-only__ Akamai internal use only.\n",
            "nullable": true,
            "readOnly": true,
            "type": "integer"
          },
          "location": {
            "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
            "readOnly": true,
            "type": "string"
          },
          "matchURL": {
            "description": "The URL the Cloudlet uses to match the incoming request.\n",
            "maxLength": 8192,
            "nullable": true,
            "type": "string"
          },
          "matches": {
            "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
            "items": {
              "additionalProperties": false,
              "description": "The match rule criteria.\n",
              "oneOf": [
                {
                  "required": [
                    "matchType",
                    "matchValue"
                  ],
                  "title": "matchType and matchValue required"
                },
                {
                  "required": [
                    "matchType",
                    "objectMatchValue"
                  ],
                  "title": "matchType and objectMatchValue required"
                }
              ],
              "properties": {
                "caseSensitive": {
                  "description": "If `true`, the match is case sensitive.\n",
                  "type": "boolean"
                },
                "checkIPs": {
                  "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                  "enum": [
                    "CONNECTING_IP",
                    "XFF_HEADERS",
                    "CONNECTING_IP XFF_HEADERS"
                  ],
                  "nullable": true,
                  "type": "string"
                },
                "matchOperator": {
                  "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                  "enum": [
                    "contains",
                    "exists",
                    "equals"
                  ],
                  "type": "string"
                },
                "matchType": {
                  "description": "The type of match used.\n",
                  "enum": [
                    "header",
                    "hostname",
                    "path",
                    "extension",
                    "query",
                    "cookie",
                    "deviceCharacteristics",
                    "clientip",
                    "continent",
                    "countrycode",
                    "regioncode",
                    "protocol",
                    "method",
                    "proxy"
                  ],
                  "type": "string"
                },
                "matchValue": {
                  "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                  "maxLength": 8192,
                  "minLength": 1,
                  "type": "string"
                },
                "negate": {
                  "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                  "type": "boolean"
                },
                "objectMatchValue": {
                  "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                  "oneOf": [
                    {
                      "additionalProperties": false,
                      "description": "Use the `simple` array option when adding an array of string-based values.\n",
                      "properties": {
                        "type": {
                          "description": "The object type, which is `simple`.\n",
                          "enum": [
                            "simple"
                          ],
                          "type": "string"
                        },
                        "value": {
                          "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                          "items": {
                            "type": "string"
                          },
                          "nullable": true,
                          "type": "array"
                        }
                      },
                      "required": [
                        "type",
                        "value"
                      ],
                      "title": "Simple",
                      "type": "object"
                    },
                    {
                      "additionalProperties": false,
                      "description": "Use this for more complex match criteria.\n",
                      "properties": {
                        "name": {
                          "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                          "maxLength": 8192,
                          "minLength": 1,
                          "type": "string"
                        },
                        "nameCaseSensitive": {
                          "description": "When set to `true`, the `name` match is case-sensitive.\n",
                          "type": "boolean"
                        },
                        "nameHasWildcard": {
                          "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                          "type": "boolean"
                        },
                        "options": {
                          "additionalProperties": false,
                          "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                          "properties": {
                            "value": {
                              "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                              "items": {
                                "type": "string"
                              },
                              "nullable": true,
                              "type": "array"
                            },
                            "valueCaseSensitive": {
                              "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                              "type": "boolean"
                            },
                            "valueEscaped": {
                              "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                              "type": "boolean"
                            },
                            "valueHasWildcard": {
                              "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                              "type": "boolean"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "description": "The array type, which is `object`.\n",
                          "enum": [
                            "object"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "type"
                      ],
                      "title": "Object",
                      "type": "object"
                    }
                  ],
                  "title": "Object match value",
                  "type": "object"
                }
              },
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          },
          "matchesAlways": {
            "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n",
            "type": "boolean"
          },
          "name": {
            "description": "The name of the rule.\n",
            "maxLength": 8192,
            "nullable": true,
            "type": "string"
          },
          "start": {
            "default": 0,
            "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
            "minimum": 0,
            "type": "integer"
          },
          "type": {
            "description": "The type of Cloudlet the rule is for. For example, the string for Phased Release is `cdMatchRule`.\n",
            "enum": [
              "cdMatchRule"
            ],
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "Phased Release",
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/match-rule-cd.yaml"
        }
      },
      "match-rule-er-definitions_definitions-objectMatchValueObjectSubtype": {
        "additionalProperties": false,
        "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
        "properties": {
          "name": {
            "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
            "maxLength": 8192,
            "minLength": 1,
            "type": "string"
          },
          "nameCaseSensitive": {
            "description": "When set to `true`, the `name` match is case-sensitive.\n",
            "type": "boolean"
          },
          "nameHasWildcard": {
            "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
            "type": "boolean"
          },
          "options": {
            "additionalProperties": false,
            "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
            "properties": {
              "value": {
                "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                "items": {
                  "type": "string"
                },
                "nullable": true,
                "type": "array"
              },
              "valueCaseSensitive": {
                "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                "type": "boolean"
              },
              "valueEscaped": {
                "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                "type": "boolean"
              },
              "valueHasWildcard": {
                "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "type": {
            "description": "The array type, which is `object`.\n",
            "enum": [
              "object"
            ],
            "type": "string"
          }
        },
        "required": [
          "name",
          "type"
        ],
        "title": "Object",
        "type": "object"
      },
      "match-rule-er-definitions_definitions-objectMatchValueType": {
        "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
        "oneOf": [
          {
            "additionalProperties": false,
            "description": "Use the `simple` array option when adding an array of string-based values.\n",
            "properties": {
              "type": {
                "description": "The object type, which is `simple`.\n",
                "enum": [
                  "simple"
                ],
                "type": "string"
              },
              "value": {
                "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                "items": {
                  "type": "string"
                },
                "nullable": true,
                "type": "array"
              }
            },
            "required": [
              "type",
              "value"
            ],
            "title": "Simple",
            "type": "object"
          },
          {
            "additionalProperties": false,
            "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
            "properties": {
              "name": {
                "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                "maxLength": 8192,
                "minLength": 1,
                "type": "string"
              },
              "nameCaseSensitive": {
                "description": "When set to `true`, the `name` match is case-sensitive.\n",
                "type": "boolean"
              },
              "nameHasWildcard": {
                "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                "type": "boolean"
              },
              "options": {
                "additionalProperties": false,
                "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                "properties": {
                  "value": {
                    "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                    "items": {
                      "type": "string"
                    },
                    "nullable": true,
                    "type": "array"
                  },
                  "valueCaseSensitive": {
                    "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                    "type": "boolean"
                  },
                  "valueEscaped": {
                    "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                    "type": "boolean"
                  },
                  "valueHasWildcard": {
                    "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                    "type": "boolean"
                  }
                },
                "type": "object"
              },
              "type": {
                "description": "The array type, which is `object`.\n",
                "enum": [
                  "object"
                ],
                "type": "string"
              }
            },
            "required": [
              "name",
              "type"
            ],
            "title": "Object",
            "type": "object"
          }
        ],
        "title": "Object match value",
        "type": "object"
      },
      "match-rule-er-definitions_definitions-matchCriteriaType": {
        "additionalProperties": false,
        "description": "The match rule criteria.\n",
        "oneOf": [
          {
            "required": [
              "matchType",
              "matchValue"
            ],
            "title": "matchType and matchValue required"
          },
          {
            "required": [
              "matchType",
              "objectMatchValue"
            ],
            "title": "matchType and objectMatchValue required"
          }
        ],
        "properties": {
          "caseSensitive": {
            "description": "If `true`, the match is case sensitive.\n",
            "type": "boolean"
          },
          "checkIPs": {
            "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
            "enum": [
              "CONNECTING_IP",
              "XFF_HEADERS",
              "CONNECTING_IP XFF_HEADERS"
            ],
            "nullable": true,
            "type": "string"
          },
          "matchOperator": {
            "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
            "enum": [
              "contains",
              "exists",
              "equals"
            ],
            "type": "string"
          },
          "matchType": {
            "description": "The type of match used.\n",
            "enum": [
              "header",
              "hostname",
              "path",
              "extension",
              "query",
              "regex",
              "cookie",
              "deviceCharacteristics",
              "clientip",
              "continent",
              "countrycode",
              "regioncode",
              "protocol",
              "method",
              "proxy"
            ],
            "type": "string"
          },
          "matchValue": {
            "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
            "maxLength": 8192,
            "minLength": 1,
            "type": "string"
          },
          "negate": {
            "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
            "type": "boolean"
          },
          "objectMatchValue": {
            "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
            "oneOf": [
              {
                "additionalProperties": false,
                "description": "Use the `simple` array option when adding an array of string-based values.\n",
                "properties": {
                  "type": {
                    "description": "The object type, which is `simple`.\n",
                    "enum": [
                      "simple"
                    ],
                    "type": "string"
                  },
                  "value": {
                    "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                    "items": {
                      "type": "string"
                    },
                    "nullable": true,
                    "type": "array"
                  }
                },
                "required": [
                  "type",
                  "value"
                ],
                "title": "Simple",
                "type": "object"
              },
              {
                "additionalProperties": false,
                "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                "properties": {
                  "name": {
                    "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                    "maxLength": 8192,
                    "minLength": 1,
                    "type": "string"
                  },
                  "nameCaseSensitive": {
                    "description": "When set to `true`, the `name` match is case-sensitive.\n",
                    "type": "boolean"
                  },
                  "nameHasWildcard": {
                    "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                    "type": "boolean"
                  },
                  "options": {
                    "additionalProperties": false,
                    "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                    "properties": {
                      "value": {
                        "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                        "items": {
                          "type": "string"
                        },
                        "nullable": true,
                        "type": "array"
                      },
                      "valueCaseSensitive": {
                        "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                        "type": "boolean"
                      },
                      "valueEscaped": {
                        "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                        "type": "boolean"
                      },
                      "valueHasWildcard": {
                        "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                        "type": "boolean"
                      }
                    },
                    "type": "object"
                  },
                  "type": {
                    "description": "The array type, which is `object`.\n",
                    "enum": [
                      "object"
                    ],
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "type"
                ],
                "title": "Object",
                "type": "object"
              }
            ],
            "title": "Object match value",
            "type": "object"
          }
        },
        "type": "object"
      },
      "match-rule-er": {
        "additionalProperties": false,
        "description": "Contains match rule information for Edge Redirector.\n",
        "properties": {
          "akaRuleId": {
            "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
            "readOnly": true,
            "type": "string"
          },
          "disabled": {
            "default": false,
            "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
            "type": "boolean"
          },
          "end": {
            "default": 0,
            "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
            "minimum": 0,
            "type": "integer"
          },
          "id": {
            "description": "__Read-only__ Akamai internal use only.\n",
            "nullable": true,
            "readOnly": true,
            "type": "integer"
          },
          "location": {
            "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
            "readOnly": true,
            "type": "string"
          },
          "matchURL": {
            "description": "The URL the Cloudlet uses to match the incoming request.\n",
            "maxLength": 8192,
            "nullable": true,
            "type": "string"
          },
          "matches": {
            "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
            "items": {
              "additionalProperties": false,
              "description": "The match rule criteria.\n",
              "oneOf": [
                {
                  "required": [
                    "matchType",
                    "matchValue"
                  ],
                  "title": "matchType and matchValue required"
                },
                {
                  "required": [
                    "matchType",
                    "objectMatchValue"
                  ],
                  "title": "matchType and objectMatchValue required"
                }
              ],
              "properties": {
                "caseSensitive": {
                  "description": "If `true`, the match is case sensitive.\n",
                  "type": "boolean"
                },
                "checkIPs": {
                  "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                  "enum": [
                    "CONNECTING_IP",
                    "XFF_HEADERS",
                    "CONNECTING_IP XFF_HEADERS"
                  ],
                  "nullable": true,
                  "type": "string"
                },
                "matchOperator": {
                  "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                  "enum": [
                    "contains",
                    "exists",
                    "equals"
                  ],
                  "type": "string"
                },
                "matchType": {
                  "description": "The type of match used.\n",
                  "enum": [
                    "header",
                    "hostname",
                    "path",
                    "extension",
                    "query",
                    "regex",
                    "cookie",
                    "deviceCharacteristics",
                    "clientip",
                    "continent",
                    "countrycode",
                    "regioncode",
                    "protocol",
                    "method",
                    "proxy"
                  ],
                  "type": "string"
                },
                "matchValue": {
                  "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                  "maxLength": 8192,
                  "minLength": 1,
                  "type": "string"
                },
                "negate": {
                  "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                  "type": "boolean"
                },
                "objectMatchValue": {
                  "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                  "oneOf": [
                    {
                      "additionalProperties": false,
                      "description": "Use the `simple` array option when adding an array of string-based values.\n",
                      "properties": {
                        "type": {
                          "description": "The object type, which is `simple`.\n",
                          "enum": [
                            "simple"
                          ],
                          "type": "string"
                        },
                        "value": {
                          "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                          "items": {
                            "type": "string"
                          },
                          "nullable": true,
                          "type": "array"
                        }
                      },
                      "required": [
                        "type",
                        "value"
                      ],
                      "title": "Simple",
                      "type": "object"
                    },
                    {
                      "additionalProperties": false,
                      "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                      "properties": {
                        "name": {
                          "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                          "maxLength": 8192,
                          "minLength": 1,
                          "type": "string"
                        },
                        "nameCaseSensitive": {
                          "description": "When set to `true`, the `name` match is case-sensitive.\n",
                          "type": "boolean"
                        },
                        "nameHasWildcard": {
                          "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                          "type": "boolean"
                        },
                        "options": {
                          "additionalProperties": false,
                          "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                          "properties": {
                            "value": {
                              "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                              "items": {
                                "type": "string"
                              },
                              "nullable": true,
                              "type": "array"
                            },
                            "valueCaseSensitive": {
                              "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                              "type": "boolean"
                            },
                            "valueEscaped": {
                              "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                              "type": "boolean"
                            },
                            "valueHasWildcard": {
                              "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                              "type": "boolean"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "description": "The array type, which is `object`.\n",
                          "enum": [
                            "object"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "type"
                      ],
                      "title": "Object",
                      "type": "object"
                    }
                  ],
                  "title": "Object match value",
                  "type": "object"
                }
              },
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          },
          "matchesAlways": {
            "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n",
            "type": "boolean"
          },
          "name": {
            "description": "The name of the rule.\n",
            "maxLength": 8192,
            "nullable": true,
            "type": "string"
          },
          "redirectURL": {
            "description": "The URL Edge Redirector redirects the request to. If using `useRelativeUrl`, you can enter a path for the value. If `useRelativeUrl` is not used or set to `none`, then the `redirectUrl` should be a fully qualified URL.\n",
            "maxLength": 8192,
            "minLength": 1,
            "type": "string"
          },
          "start": {
            "default": 0,
            "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
            "minimum": 0,
            "type": "integer"
          },
          "statusCode": {
            "description": "The HTTP response redirect type status code: `301` for permanent redirect, `302` for temporary redirect, `303` for temporary using GET, `307` for temporary retain method, or `308` for permanent retain method.\n",
            "enum": [
              301,
              302,
              303,
              307,
              308
            ],
            "type": "integer"
          },
          "type": {
            "description": "The type of Cloudlet the rule is for. For example, the string for Edge Redirector is `erMatchRule`.\n",
            "enum": [
              "erMatchRule"
            ],
            "type": "string"
          },
          "useIncomingQueryString": {
            "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n",
            "type": "boolean"
          },
          "useIncomingSchemeAndHost": {
            "description": "If set to `true`, the Cloudlet copies both the scheme and the hostname from the incoming request to use in the redirect URL.\n",
            "type": "boolean"
          },
          "useRelativeUrl": {
            "description": "If set to `relative_url`, takes the path entered for the `redirectUrl` and sets it in the response’s `Location` header. The client browser receiving the request decides which protocol and hostname to use. If set to `copy_scheme_hostname`, it creates an absolute path by taking the protocol and hostname from the incoming request and combining them with path information entered for the `redirectUrl`. This absolute path is set in the response’s `Location` header. If you don't include `useRelativeUrl`, or if you set it to `none`, then specify the `redirectUrl` as a fully qualified URL.\n",
            "enum": [
              "relative_url",
              "copy_scheme_hostname",
              "none"
            ],
            "type": "string"
          }
        },
        "required": [
          "type",
          "redirectURL",
          "statusCode"
        ],
        "title": "Edge Redirector",
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/match-rule-er.yaml"
        }
      },
      "match-rule-fr-definitions_definitions-objectMatchValueObjectSubtype": {
        "additionalProperties": false,
        "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
        "properties": {
          "name": {
            "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
            "maxLength": 8192,
            "minLength": 1,
            "type": "string"
          },
          "nameCaseSensitive": {
            "description": "When set to `true`, the `name` match is case-sensitive.\n",
            "type": "boolean"
          },
          "nameHasWildcard": {
            "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
            "type": "boolean"
          },
          "options": {
            "additionalProperties": false,
            "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
            "properties": {
              "value": {
                "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                "items": {
                  "type": "string"
                },
                "nullable": true,
                "type": "array"
              },
              "valueCaseSensitive": {
                "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                "type": "boolean"
              },
              "valueEscaped": {
                "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                "type": "boolean"
              },
              "valueHasWildcard": {
                "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "type": {
            "description": "The array type, which is `object`.\n",
            "enum": [
              "object"
            ],
            "type": "string"
          }
        },
        "required": [
          "name",
          "type"
        ],
        "title": "Object",
        "type": "object"
      },
      "match-rule-fr-definitions_definitions-objectMatchValueType": {
        "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
        "oneOf": [
          {
            "additionalProperties": false,
            "description": "Use the `simple` array option when adding an array of string-based values.\n",
            "properties": {
              "type": {
                "description": "The object type, which is `simple`.\n",
                "enum": [
                  "simple"
                ],
                "type": "string"
              },
              "value": {
                "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                "items": {
                  "type": "string"
                },
                "nullable": true,
                "type": "array"
              }
            },
            "required": [
              "type",
              "value"
            ],
            "title": "Simple",
            "type": "object"
          },
          {
            "additionalProperties": false,
            "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
            "properties": {
              "name": {
                "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                "maxLength": 8192,
                "minLength": 1,
                "type": "string"
              },
              "nameCaseSensitive": {
                "description": "When set to `true`, the `name` match is case-sensitive.\n",
                "type": "boolean"
              },
              "nameHasWildcard": {
                "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                "type": "boolean"
              },
              "options": {
                "additionalProperties": false,
                "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                "properties": {
                  "value": {
                    "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                    "items": {
                      "type": "string"
                    },
                    "nullable": true,
                    "type": "array"
                  },
                  "valueCaseSensitive": {
                    "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                    "type": "boolean"
                  },
                  "valueEscaped": {
                    "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                    "type": "boolean"
                  },
                  "valueHasWildcard": {
                    "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                    "type": "boolean"
                  }
                },
                "type": "object"
              },
              "type": {
                "description": "The array type, which is `object`.\n",
                "enum": [
                  "object"
                ],
                "type": "string"
              }
            },
            "required": [
              "name",
              "type"
            ],
            "title": "Object",
            "type": "object"
          }
        ],
        "title": "Object match value",
        "type": "object"
      },
      "match-rule-fr-definitions_definitions-matchCriteriaType": {
        "additionalProperties": false,
        "description": "The match rule criteria.\n",
        "oneOf": [
          {
            "required": [
              "matchType",
              "matchValue"
            ],
            "title": "matchType and matchValue required"
          },
          {
            "required": [
              "matchType",
              "objectMatchValue"
            ],
            "title": "matchType and objectMatchValue required"
          }
        ],
        "properties": {
          "caseSensitive": {
            "description": "If `true`, the match is case sensitive.\n",
            "type": "boolean"
          },
          "checkIPs": {
            "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
            "enum": [
              "CONNECTING_IP",
              "XFF_HEADERS",
              "CONNECTING_IP XFF_HEADERS"
            ],
            "type": "string"
          },
          "matchOperator": {
            "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
            "enum": [
              "contains",
              "exists",
              "equals"
            ],
            "type": "string"
          },
          "matchType": {
            "description": "The type of match used.\n",
            "enum": [
              "header",
              "hostname",
              "path",
              "extension",
              "query",
              "regex",
              "cookie",
              "deviceCharacteristics",
              "clientip",
              "continent",
              "countrycode",
              "regioncode",
              "protocol",
              "method",
              "proxy"
            ],
            "type": "string"
          },
          "matchValue": {
            "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
            "maxLength": 8192,
            "minLength": 1,
            "type": "string"
          },
          "negate": {
            "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
            "type": "boolean"
          },
          "objectMatchValue": {
            "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
            "oneOf": [
              {
                "additionalProperties": false,
                "description": "Use the `simple` array option when adding an array of string-based values.\n",
                "properties": {
                  "type": {
                    "description": "The object type, which is `simple`.\n",
                    "enum": [
                      "simple"
                    ],
                    "type": "string"
                  },
                  "value": {
                    "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                    "items": {
                      "type": "string"
                    },
                    "nullable": true,
                    "type": "array"
                  }
                },
                "required": [
                  "type",
                  "value"
                ],
                "title": "Simple",
                "type": "object"
              },
              {
                "additionalProperties": false,
                "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                "properties": {
                  "name": {
                    "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                    "maxLength": 8192,
                    "minLength": 1,
                    "type": "string"
                  },
                  "nameCaseSensitive": {
                    "description": "When set to `true`, the `name` match is case-sensitive.\n",
                    "type": "boolean"
                  },
                  "nameHasWildcard": {
                    "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                    "type": "boolean"
                  },
                  "options": {
                    "additionalProperties": false,
                    "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                    "properties": {
                      "value": {
                        "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                        "items": {
                          "type": "string"
                        },
                        "nullable": true,
                        "type": "array"
                      },
                      "valueCaseSensitive": {
                        "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                        "type": "boolean"
                      },
                      "valueEscaped": {
                        "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                        "type": "boolean"
                      },
                      "valueHasWildcard": {
                        "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                        "type": "boolean"
                      }
                    },
                    "type": "object"
                  },
                  "type": {
                    "description": "The array type, which is `object`.\n",
                    "enum": [
                      "object"
                    ],
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "type"
                ],
                "title": "Object",
                "type": "object"
              }
            ],
            "title": "Object match value",
            "type": "object"
          }
        },
        "type": "object"
      },
      "match-rule-fr": {
        "additionalProperties": false,
        "description": "Contains match rule information for Forward Rewrite.\n",
        "properties": {
          "akaRuleId": {
            "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
            "readOnly": true,
            "type": "string"
          },
          "disabled": {
            "default": false,
            "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
            "type": "boolean"
          },
          "end": {
            "default": 0,
            "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
            "minimum": 0,
            "type": "integer"
          },
          "forwardSettings": {
            "additionalProperties": false,
            "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
            "properties": {
              "originId": {
                "description": "The conditional origin's unique identifier.\n",
                "maxLength": 8192,
                "nullable": true,
                "type": "string"
              },
              "pathAndQS": {
                "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                "maxLength": 8192,
                "minLength": 1,
                "type": "string"
              },
              "useIncomingQueryString": {
                "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n",
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "id": {
            "description": "__Read-only__ Akamai internal use only.\n",
            "nullable": true,
            "readOnly": true,
            "type": "integer"
          },
          "location": {
            "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
            "readOnly": true,
            "type": "string"
          },
          "matchURL": {
            "description": "The URL the Cloudlet uses to match the incoming request.\n",
            "maxLength": 8192,
            "nullable": true,
            "type": "string"
          },
          "matches": {
            "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
            "items": {
              "additionalProperties": false,
              "description": "The match rule criteria.\n",
              "oneOf": [
                {
                  "required": [
                    "matchType",
                    "matchValue"
                  ],
                  "title": "matchType and matchValue required"
                },
                {
                  "required": [
                    "matchType",
                    "objectMatchValue"
                  ],
                  "title": "matchType and objectMatchValue required"
                }
              ],
              "properties": {
                "caseSensitive": {
                  "description": "If `true`, the match is case sensitive.\n",
                  "type": "boolean"
                },
                "checkIPs": {
                  "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                  "enum": [
                    "CONNECTING_IP",
                    "XFF_HEADERS",
                    "CONNECTING_IP XFF_HEADERS"
                  ],
                  "type": "string"
                },
                "matchOperator": {
                  "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                  "enum": [
                    "contains",
                    "exists",
                    "equals"
                  ],
                  "type": "string"
                },
                "matchType": {
                  "description": "The type of match used.\n",
                  "enum": [
                    "header",
                    "hostname",
                    "path",
                    "extension",
                    "query",
                    "regex",
                    "cookie",
                    "deviceCharacteristics",
                    "clientip",
                    "continent",
                    "countrycode",
                    "regioncode",
                    "protocol",
                    "method",
                    "proxy"
                  ],
                  "type": "string"
                },
                "matchValue": {
                  "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                  "maxLength": 8192,
                  "minLength": 1,
                  "type": "string"
                },
                "negate": {
                  "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                  "type": "boolean"
                },
                "objectMatchValue": {
                  "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                  "oneOf": [
                    {
                      "additionalProperties": false,
                      "description": "Use the `simple` array option when adding an array of string-based values.\n",
                      "properties": {
                        "type": {
                          "description": "The object type, which is `simple`.\n",
                          "enum": [
                            "simple"
                          ],
                          "type": "string"
                        },
                        "value": {
                          "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                          "items": {
                            "type": "string"
                          },
                          "nullable": true,
                          "type": "array"
                        }
                      },
                      "required": [
                        "type",
                        "value"
                      ],
                      "title": "Simple",
                      "type": "object"
                    },
                    {
                      "additionalProperties": false,
                      "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                      "properties": {
                        "name": {
                          "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                          "maxLength": 8192,
                          "minLength": 1,
                          "type": "string"
                        },
                        "nameCaseSensitive": {
                          "description": "When set to `true`, the `name` match is case-sensitive.\n",
                          "type": "boolean"
                        },
                        "nameHasWildcard": {
                          "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                          "type": "boolean"
                        },
                        "options": {
                          "additionalProperties": false,
                          "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                          "properties": {
                            "value": {
                              "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                              "items": {
                                "type": "string"
                              },
                              "nullable": true,
                              "type": "array"
                            },
                            "valueCaseSensitive": {
                              "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                              "type": "boolean"
                            },
                            "valueEscaped": {
                              "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                              "type": "boolean"
                            },
                            "valueHasWildcard": {
                              "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                              "type": "boolean"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "description": "The array type, which is `object`.\n",
                          "enum": [
                            "object"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "type"
                      ],
                      "title": "Object",
                      "type": "object"
                    }
                  ],
                  "title": "Object match value",
                  "type": "object"
                }
              },
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          },
          "name": {
            "description": "The name of the rule.\n",
            "maxLength": 8192,
            "nullable": true,
            "type": "string"
          },
          "start": {
            "default": 0,
            "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
            "minimum": 0,
            "type": "integer"
          },
          "type": {
            "description": "The type of Cloudlet the rule is for. For example, the string for Forward Rewrite is `frMatchRule`.\n",
            "enum": [
              "frMatchRule"
            ],
            "type": "string"
          }
        },
        "required": [
          "type",
          "forwardSettings"
        ],
        "title": "Forward Rewrite",
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/match-rule-fr.yaml"
        }
      },
      "match-rule-ig-definitions_definitions-objectMatchValueObjectSubtype": {
        "additionalProperties": false,
        "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
        "properties": {
          "name": {
            "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
            "maxLength": 8192,
            "minLength": 1,
            "type": "string"
          },
          "nameCaseSensitive": {
            "description": "When set to `true`, the `name` match is case-sensitive.\n",
            "type": "boolean"
          },
          "nameHasWildcard": {
            "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
            "type": "boolean"
          },
          "options": {
            "additionalProperties": false,
            "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
            "properties": {
              "value": {
                "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                "items": {
                  "type": "string"
                },
                "nullable": true,
                "type": "array"
              },
              "valueCaseSensitive": {
                "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                "type": "boolean"
              },
              "valueEscaped": {
                "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                "type": "boolean"
              },
              "valueHasWildcard": {
                "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "type": {
            "description": "The array type, which is `object`.\n",
            "enum": [
              "object"
            ],
            "type": "string"
          }
        },
        "required": [
          "name",
          "type"
        ],
        "title": "Object",
        "type": "object"
      },
      "match-rule-ig-definitions_definitions-objectMatchValueType": {
        "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
        "oneOf": [
          {
            "additionalProperties": false,
            "description": "Use the `simple` array option when adding an array of string-based values.\n",
            "properties": {
              "type": {
                "description": "The object type, which is `simple`.\n",
                "enum": [
                  "simple"
                ],
                "type": "string"
              },
              "value": {
                "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                "items": {
                  "type": "string"
                },
                "nullable": true,
                "type": "array"
              }
            },
            "required": [
              "type",
              "value"
            ],
            "title": "Simple",
            "type": "object"
          },
          {
            "additionalProperties": false,
            "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
            "properties": {
              "name": {
                "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                "maxLength": 8192,
                "minLength": 1,
                "type": "string"
              },
              "nameCaseSensitive": {
                "description": "When set to `true`, the `name` match is case-sensitive.\n",
                "type": "boolean"
              },
              "nameHasWildcard": {
                "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                "type": "boolean"
              },
              "options": {
                "additionalProperties": false,
                "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                "properties": {
                  "value": {
                    "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                    "items": {
                      "type": "string"
                    },
                    "nullable": true,
                    "type": "array"
                  },
                  "valueCaseSensitive": {
                    "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                    "type": "boolean"
                  },
                  "valueEscaped": {
                    "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                    "type": "boolean"
                  },
                  "valueHasWildcard": {
                    "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                    "type": "boolean"
                  }
                },
                "type": "object"
              },
              "type": {
                "description": "The array type, which is `object`.\n",
                "enum": [
                  "object"
                ],
                "type": "string"
              }
            },
            "required": [
              "name",
              "type"
            ],
            "title": "Object",
            "type": "object"
          }
        ],
        "title": "Object match value",
        "type": "object"
      },
      "match-rule-ig-definitions_definitions-matchCriteriaType": {
        "additionalProperties": false,
        "description": "The match rule criteria.\n",
        "oneOf": [
          {
            "required": [
              "matchType",
              "matchValue"
            ],
            "title": "matchType and matchValue required"
          },
          {
            "required": [
              "matchType",
              "objectMatchValue"
            ],
            "title": "matchType and objectMatchValue required"
          }
        ],
        "properties": {
          "caseSensitive": {
            "description": "If `true`, the match is case sensitive.\n",
            "type": "boolean"
          },
          "checkIPs": {
            "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
            "enum": [
              "CONNECTING_IP",
              "XFF_HEADERS",
              "CONNECTING_IP XFF_HEADERS"
            ],
            "type": "string"
          },
          "matchOperator": {
            "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
            "enum": [
              "contains",
              "exists",
              "equals"
            ],
            "type": "string"
          },
          "matchType": {
            "description": "The type of match used.\n",
            "enum": [
              "clientip",
              "continent",
              "cookie",
              "countrycode",
              "deviceCharacteristics",
              "extension",
              "header",
              "hostname",
              "method",
              "path",
              "protocol",
              "proxy",
              "query",
              "regioncode"
            ],
            "type": "string"
          },
          "matchValue": {
            "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
            "maxLength": 8192,
            "minLength": 1,
            "type": "string"
          },
          "negate": {
            "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
            "type": "boolean"
          },
          "objectMatchValue": {
            "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
            "oneOf": [
              {
                "additionalProperties": false,
                "description": "Use the `simple` array option when adding an array of string-based values.\n",
                "properties": {
                  "type": {
                    "description": "The object type, which is `simple`.\n",
                    "enum": [
                      "simple"
                    ],
                    "type": "string"
                  },
                  "value": {
                    "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                    "items": {
                      "type": "string"
                    },
                    "nullable": true,
                    "type": "array"
                  }
                },
                "required": [
                  "type",
                  "value"
                ],
                "title": "Simple",
                "type": "object"
              },
              {
                "additionalProperties": false,
                "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                "properties": {
                  "name": {
                    "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                    "maxLength": 8192,
                    "minLength": 1,
                    "type": "string"
                  },
                  "nameCaseSensitive": {
                    "description": "When set to `true`, the `name` match is case-sensitive.\n",
                    "type": "boolean"
                  },
                  "nameHasWildcard": {
                    "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                    "type": "boolean"
                  },
                  "options": {
                    "additionalProperties": false,
                    "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                    "properties": {
                      "value": {
                        "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                        "items": {
                          "type": "string"
                        },
                        "nullable": true,
                        "type": "array"
                      },
                      "valueCaseSensitive": {
                        "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                        "type": "boolean"
                      },
                      "valueEscaped": {
                        "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                        "type": "boolean"
                      },
                      "valueHasWildcard": {
                        "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                        "type": "boolean"
                      }
                    },
                    "type": "object"
                  },
                  "type": {
                    "description": "The array type, which is `object`.\n",
                    "enum": [
                      "object"
                    ],
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "type"
                ],
                "title": "Object",
                "type": "object"
              }
            ],
            "title": "Object match value",
            "type": "object"
          }
        },
        "type": "object"
      },
      "match-rule-ig": {
        "additionalProperties": false,
        "description": "Contains match rule information for Request Control.\n",
        "properties": {
          "akaRuleId": {
            "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
            "readOnly": true,
            "type": "string"
          },
          "allowDeny": {
            "description": "If set to `allow`, the request is sent to origin when all conditions are true. If `deny`, the request is denied when all conditions are true. If `denybranded`, the request is denied and rerouted according to the configuration of the [Request Control behavior](https://techdocs.akamai.com/property-mgr/reference/latest-request-control).\n",
            "enum": [
              "allow",
              "deny",
              "denybranded"
            ],
            "type": "string"
          },
          "disabled": {
            "default": false,
            "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
            "type": "boolean"
          },
          "end": {
            "default": 0,
            "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
            "minimum": 0,
            "type": "integer"
          },
          "id": {
            "description": "__Read-only__ Akamai internal use only.\n",
            "nullable": true,
            "readOnly": true,
            "type": "integer"
          },
          "location": {
            "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
            "readOnly": true,
            "type": "string"
          },
          "matches": {
            "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
            "items": {
              "additionalProperties": false,
              "description": "The match rule criteria.\n",
              "oneOf": [
                {
                  "required": [
                    "matchType",
                    "matchValue"
                  ],
                  "title": "matchType and matchValue required"
                },
                {
                  "required": [
                    "matchType",
                    "objectMatchValue"
                  ],
                  "title": "matchType and objectMatchValue required"
                }
              ],
              "properties": {
                "caseSensitive": {
                  "description": "If `true`, the match is case sensitive.\n",
                  "type": "boolean"
                },
                "checkIPs": {
                  "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                  "enum": [
                    "CONNECTING_IP",
                    "XFF_HEADERS",
                    "CONNECTING_IP XFF_HEADERS"
                  ],
                  "type": "string"
                },
                "matchOperator": {
                  "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                  "enum": [
                    "contains",
                    "exists",
                    "equals"
                  ],
                  "type": "string"
                },
                "matchType": {
                  "description": "The type of match used.\n",
                  "enum": [
                    "clientip",
                    "continent",
                    "cookie",
                    "countrycode",
                    "deviceCharacteristics",
                    "extension",
                    "header",
                    "hostname",
                    "method",
                    "path",
                    "protocol",
                    "proxy",
                    "query",
                    "regioncode"
                  ],
                  "type": "string"
                },
                "matchValue": {
                  "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                  "maxLength": 8192,
                  "minLength": 1,
                  "type": "string"
                },
                "negate": {
                  "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                  "type": "boolean"
                },
                "objectMatchValue": {
                  "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                  "oneOf": [
                    {
                      "additionalProperties": false,
                      "description": "Use the `simple` array option when adding an array of string-based values.\n",
                      "properties": {
                        "type": {
                          "description": "The object type, which is `simple`.\n",
                          "enum": [
                            "simple"
                          ],
                          "type": "string"
                        },
                        "value": {
                          "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                          "items": {
                            "type": "string"
                          },
                          "nullable": true,
                          "type": "array"
                        }
                      },
                      "required": [
                        "type",
                        "value"
                      ],
                      "title": "Simple",
                      "type": "object"
                    },
                    {
                      "additionalProperties": false,
                      "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                      "properties": {
                        "name": {
                          "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                          "maxLength": 8192,
                          "minLength": 1,
                          "type": "string"
                        },
                        "nameCaseSensitive": {
                          "description": "When set to `true`, the `name` match is case-sensitive.\n",
                          "type": "boolean"
                        },
                        "nameHasWildcard": {
                          "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                          "type": "boolean"
                        },
                        "options": {
                          "additionalProperties": false,
                          "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                          "properties": {
                            "value": {
                              "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                              "items": {
                                "type": "string"
                              },
                              "nullable": true,
                              "type": "array"
                            },
                            "valueCaseSensitive": {
                              "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                              "type": "boolean"
                            },
                            "valueEscaped": {
                              "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                              "type": "boolean"
                            },
                            "valueHasWildcard": {
                              "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                              "type": "boolean"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "description": "The array type, which is `object`.\n",
                          "enum": [
                            "object"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "type"
                      ],
                      "title": "Object",
                      "type": "object"
                    }
                  ],
                  "title": "Object match value",
                  "type": "object"
                }
              },
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          },
          "matchesAlways": {
            "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n",
            "type": "boolean"
          },
          "name": {
            "description": "The name of the rule.\n",
            "maxLength": 8192,
            "nullable": true,
            "type": "string"
          },
          "start": {
            "default": 0,
            "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
            "minimum": 0,
            "type": "integer"
          },
          "type": {
            "description": "The type of Cloudlet the rule is for. For example, the string for Request Control is `igMatchRule`.\n",
            "enum": [
              "igMatchRule"
            ],
            "type": "string"
          }
        },
        "required": [
          "type",
          "allowDeny"
        ],
        "title": "Request Control",
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/match-rule-ig.yaml"
        }
      },
      "match-rule-vp-definitions_definitions-objectMatchValueObjectSubtype": {
        "type": "object",
        "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
        "title": "Object",
        "additionalProperties": false,
        "required": [
          "name",
          "type"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
            "minLength": 1,
            "maxLength": 8192
          },
          "type": {
            "type": "string",
            "description": "The array type, which is `object`.\n",
            "enum": [
              "object"
            ]
          },
          "options": {
            "type": "object",
            "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
            "additionalProperties": false,
            "properties": {
              "value": {
                "type": "array",
                "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              },
              "valueHasWildcard": {
                "type": "boolean",
                "description": "Set to `true` if the entries for `value` includes wildcards.\n"
              },
              "valueCaseSensitive": {
                "type": "boolean",
                "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n"
              },
              "valueEscaped": {
                "type": "boolean",
                "description": "Set to `true` if the entries for `value` includes escaped characters.\n"
              }
            }
          },
          "nameCaseSensitive": {
            "type": "boolean",
            "description": "When set to `true`, the `name` match is case-sensitive.\n"
          },
          "nameHasWildcard": {
            "type": "boolean",
            "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
          }
        }
      },
      "match-rule-vp-definitions_definitions-objectMatchValueType": {
        "type": "object",
        "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
        "title": "Object match value",
        "oneOf": [
          {
            "type": "object",
            "description": "Use the `simple` array option when adding an array of string-based values.\n",
            "title": "Simple",
            "additionalProperties": false,
            "required": [
              "type",
              "value"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "The object type, which is `simple`.\n",
                "enum": [
                  "simple"
                ]
              },
              "value": {
                "type": "array",
                "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              }
            }
          },
          {
            "type": "object",
            "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
            "title": "Object",
            "additionalProperties": false,
            "required": [
              "name",
              "type"
            ],
            "properties": {
              "name": {
                "type": "string",
                "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                "minLength": 1,
                "maxLength": 8192
              },
              "type": {
                "type": "string",
                "description": "The array type, which is `object`.\n",
                "enum": [
                  "object"
                ]
              },
              "options": {
                "type": "object",
                "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                "additionalProperties": false,
                "properties": {
                  "value": {
                    "type": "array",
                    "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                    "nullable": true,
                    "items": {
                      "type": "string"
                    }
                  },
                  "valueHasWildcard": {
                    "type": "boolean",
                    "description": "Set to `true` if the entries for `value` includes wildcards.\n"
                  },
                  "valueCaseSensitive": {
                    "type": "boolean",
                    "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n"
                  },
                  "valueEscaped": {
                    "type": "boolean",
                    "description": "Set to `true` if the entries for `value` includes escaped characters.\n"
                  }
                }
              },
              "nameCaseSensitive": {
                "type": "boolean",
                "description": "When set to `true`, the `name` match is case-sensitive.\n"
              },
              "nameHasWildcard": {
                "type": "boolean",
                "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
              }
            }
          }
        ]
      },
      "match-rule-vp-definitions_definitions-matchCriteriaType": {
        "type": "object",
        "description": "The match rule criteria.\n",
        "additionalProperties": false,
        "oneOf": [
          {
            "required": [
              "matchType",
              "matchValue"
            ],
            "title": "matchType and matchValue required"
          },
          {
            "required": [
              "matchType",
              "objectMatchValue"
            ],
            "title": "matchType and objectMatchValue required"
          }
        ],
        "properties": {
          "caseSensitive": {
            "type": "boolean",
            "description": "If `true`, the match is case sensitive.\n"
          },
          "matchValue": {
            "type": "string",
            "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
            "minLength": 1,
            "maxLength": 8192
          },
          "negate": {
            "type": "boolean",
            "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
          },
          "matchOperator": {
            "type": "string",
            "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
            "enum": [
              "contains",
              "exists",
              "equals"
            ]
          },
          "matchType": {
            "type": "string",
            "description": "The type of match used.\n",
            "enum": [
              "hostname",
              "path",
              "extension",
              "query",
              "cookie",
              "deviceCharacteristics",
              "clientip",
              "continent",
              "countrycode",
              "regioncode",
              "protocol",
              "header",
              "method",
              "proxy"
            ]
          },
          "checkIPs": {
            "type": "string",
            "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
            "enum": [
              "CONNECTING_IP",
              "XFF_HEADERS",
              "CONNECTING_IP XFF_HEADERS"
            ]
          },
          "objectMatchValue": {
            "type": "object",
            "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
            "title": "Object match value",
            "oneOf": [
              {
                "type": "object",
                "description": "Use the `simple` array option when adding an array of string-based values.\n",
                "title": "Simple",
                "additionalProperties": false,
                "required": [
                  "type",
                  "value"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "The object type, which is `simple`.\n",
                    "enum": [
                      "simple"
                    ]
                  },
                  "value": {
                    "type": "array",
                    "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                    "nullable": true,
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "type": "object",
                "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                "title": "Object",
                "additionalProperties": false,
                "required": [
                  "name",
                  "type"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                    "minLength": 1,
                    "maxLength": 8192
                  },
                  "type": {
                    "type": "string",
                    "description": "The array type, which is `object`.\n",
                    "enum": [
                      "object"
                    ]
                  },
                  "options": {
                    "type": "object",
                    "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                    "additionalProperties": false,
                    "properties": {
                      "value": {
                        "type": "array",
                        "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                        "nullable": true,
                        "items": {
                          "type": "string"
                        }
                      },
                      "valueHasWildcard": {
                        "type": "boolean",
                        "description": "Set to `true` if the entries for `value` includes wildcards.\n"
                      },
                      "valueCaseSensitive": {
                        "type": "boolean",
                        "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n"
                      },
                      "valueEscaped": {
                        "type": "boolean",
                        "description": "Set to `true` if the entries for `value` includes escaped characters.\n"
                      }
                    }
                  },
                  "nameCaseSensitive": {
                    "type": "boolean",
                    "description": "When set to `true`, the `name` match is case-sensitive.\n"
                  },
                  "nameHasWildcard": {
                    "type": "boolean",
                    "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                  }
                }
              }
            ]
          }
        }
      },
      "match-rule-vp": {
        "type": "object",
        "description": "Contains match rule information for Visitor Prioritization.\n",
        "title": "Visitor Prioritization",
        "additionalProperties": false,
        "required": [
          "type",
          "passThroughPercent"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Akamai internal use only.\n",
            "nullable": true,
            "readOnly": true
          },
          "location": {
            "type": "string",
            "description": "The navigable endpoint used for the object referred to in the operation.\n",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "The name of the rule.\n",
            "nullable": true,
            "maxLength": 8192
          },
          "type": {
            "type": "string",
            "description": "The type of Cloudlet the rule is for. For example, the string for Visitor Prioritization is `vpMatchRule`.\n",
            "enum": [
              "vpMatchRule"
            ]
          },
          "akaRuleId": {
            "type": "string",
            "description": "The rule's unique identifier within the policy version.\n",
            "readOnly": true
          },
          "start": {
            "type": "integer",
            "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
            "default": 0,
            "minimum": 0
          },
          "end": {
            "type": "integer",
            "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
            "default": 0,
            "minimum": 0
          },
          "matches": {
            "type": "array",
            "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
            "nullable": true,
            "items": {
              "type": "object",
              "description": "The match rule criteria.\n",
              "additionalProperties": false,
              "oneOf": [
                {
                  "required": [
                    "matchType",
                    "matchValue"
                  ],
                  "title": "matchType and matchValue required"
                },
                {
                  "required": [
                    "matchType",
                    "objectMatchValue"
                  ],
                  "title": "matchType and objectMatchValue required"
                }
              ],
              "properties": {
                "caseSensitive": {
                  "type": "boolean",
                  "description": "If `true`, the match is case sensitive.\n"
                },
                "matchValue": {
                  "type": "string",
                  "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                  "minLength": 1,
                  "maxLength": 8192
                },
                "negate": {
                  "type": "boolean",
                  "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                },
                "matchOperator": {
                  "type": "string",
                  "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                  "enum": [
                    "contains",
                    "exists",
                    "equals"
                  ]
                },
                "matchType": {
                  "type": "string",
                  "description": "The type of match used.\n",
                  "enum": [
                    "hostname",
                    "path",
                    "extension",
                    "query",
                    "cookie",
                    "deviceCharacteristics",
                    "clientip",
                    "continent",
                    "countrycode",
                    "regioncode",
                    "protocol",
                    "header",
                    "method",
                    "proxy"
                  ]
                },
                "checkIPs": {
                  "type": "string",
                  "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                  "enum": [
                    "CONNECTING_IP",
                    "XFF_HEADERS",
                    "CONNECTING_IP XFF_HEADERS"
                  ]
                },
                "objectMatchValue": {
                  "type": "object",
                  "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                  "title": "Object match value",
                  "oneOf": [
                    {
                      "type": "object",
                      "description": "Use the `simple` array option when adding an array of string-based values.\n",
                      "title": "Simple",
                      "additionalProperties": false,
                      "required": [
                        "type",
                        "value"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "The object type, which is `simple`.\n",
                          "enum": [
                            "simple"
                          ]
                        },
                        "value": {
                          "type": "array",
                          "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                          "nullable": true,
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                      "title": "Object",
                      "additionalProperties": false,
                      "required": [
                        "name",
                        "type"
                      ],
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                          "minLength": 1,
                          "maxLength": 8192
                        },
                        "type": {
                          "type": "string",
                          "description": "The array type, which is `object`.\n",
                          "enum": [
                            "object"
                          ]
                        },
                        "options": {
                          "type": "object",
                          "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                          "additionalProperties": false,
                          "properties": {
                            "value": {
                              "type": "array",
                              "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                              "nullable": true,
                              "items": {
                                "type": "string"
                              }
                            },
                            "valueHasWildcard": {
                              "type": "boolean",
                              "description": "Set to `true` if the entries for `value` includes wildcards.\n"
                            },
                            "valueCaseSensitive": {
                              "type": "boolean",
                              "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n"
                            },
                            "valueEscaped": {
                              "type": "boolean",
                              "description": "Set to `true` if the entries for `value` includes escaped characters.\n"
                            }
                          }
                        },
                        "nameCaseSensitive": {
                          "type": "boolean",
                          "description": "When set to `true`, the `name` match is case-sensitive.\n"
                        },
                        "nameHasWildcard": {
                          "type": "boolean",
                          "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "disabled": {
            "type": "boolean",
            "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
            "default": false
          },
          "passThroughPercent": {
            "type": "number",
            "description": "The range `0.000: 99.000` specifies the percentage of requests that pass through to the origin. The value of `100` means the request always passes through to the origin. For Visitor Prioritization, a value of `-1` means send everyone to the waiting room.\n",
            "minimum": -1,
            "maximum": 100
          },
          "matchURL": {
            "type": "string",
            "description": "The URL the Cloudlet uses to match the incoming request.\n",
            "nullable": true,
            "maxLength": 8192
          },
          "useIncomingQueryString": {
            "type": "boolean",
            "description": "If set to `true`, the Cloudlet includes the request's query string in the rewritten or forwarded URL.\n"
          }
        }
      },
      "match-rule": {
        "description": "Contains information about match rules.\n",
        "oneOf": [
          {
            "type": "object",
            "description": "Contains match rule information for Application Load Balancer.\n",
            "title": "Application Load Balancer",
            "additionalProperties": false,
            "required": [
              "type"
            ],
            "properties": {
              "id": {
                "type": "integer",
                "description": "Akamai internal use only.\n",
                "nullable": true,
                "readOnly": true
              },
              "location": {
                "type": "string",
                "description": "The navigable endpoint used for the object referred to in the operation.\n",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the rule.\n",
                "nullable": true,
                "maxLength": 8192
              },
              "type": {
                "type": "string",
                "description": "The type of Cloudlet the rule is for. For example, the string for Application Load Balancer is `albMatchRule`.\n",
                "enum": [
                  "albMatchRule"
                ]
              },
              "akaRuleId": {
                "type": "string",
                "description": "The rule's unique identifier within the policy version.\n",
                "readOnly": true
              },
              "disabled": {
                "type": "boolean",
                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                "default": false
              },
              "start": {
                "type": "integer",
                "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                "default": 0,
                "minimum": 0
              },
              "end": {
                "type": "integer",
                "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                "default": 0,
                "minimum": 0
              },
              "matchURL": {
                "type": "string",
                "description": "The URL the Cloudlet uses to match the incoming request.\n",
                "nullable": true,
                "maxLength": 8192
              },
              "matches": {
                "type": "array",
                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                "nullable": true,
                "items": {
                  "type": "object",
                  "description": "The match rule criteria.\n",
                  "additionalProperties": false,
                  "oneOf": [
                    {
                      "required": [
                        "matchType",
                        "matchValue"
                      ],
                      "title": "matchType and matchValue required"
                    },
                    {
                      "required": [
                        "matchType",
                        "objectMatchValue"
                      ],
                      "title": "matchType and objectMatchValue required"
                    }
                  ],
                  "properties": {
                    "caseSensitive": {
                      "type": "boolean",
                      "description": "If `true`, the match is case sensitive.\n"
                    },
                    "checkIPs": {
                      "type": "string",
                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                      "nullable": true,
                      "enum": [
                        "CONNECTING_IP",
                        "XFF_HEADERS",
                        "CONNECTING_IP XFF_HEADERS"
                      ]
                    },
                    "matchOperator": {
                      "type": "string",
                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                      "enum": [
                        "contains",
                        "exists",
                        "equals"
                      ]
                    },
                    "matchType": {
                      "type": "string",
                      "description": "The type of match used.\n",
                      "enum": [
                        "header",
                        "hostname",
                        "path",
                        "extension",
                        "query",
                        "regex",
                        "cookie",
                        "deviceCharacteristics",
                        "clientip",
                        "continent",
                        "countrycode",
                        "regioncode",
                        "protocol",
                        "method",
                        "proxy"
                      ]
                    },
                    "matchValue": {
                      "type": "string",
                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                      "minLength": 1,
                      "maxLength": 8192
                    },
                    "negate": {
                      "type": "boolean",
                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                    },
                    "objectMatchValue": {
                      "type": "object",
                      "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                      "title": "Object match value",
                      "oneOf": [
                        {
                          "type": "object",
                          "description": "Use the `simple` array option when adding an array of string-based values.\n",
                          "title": "Simple",
                          "additionalProperties": false,
                          "required": [
                            "type",
                            "value"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "description": "The object type, which is `simple`.\n",
                              "enum": [
                                "simple"
                              ]
                            },
                            "value": {
                              "type": "array",
                              "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                              "nullable": true,
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "description": "Use this for more complex match criteria.\n",
                          "title": "Object",
                          "additionalProperties": false,
                          "required": [
                            "name",
                            "type"
                          ],
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                              "minLength": 1,
                              "maxLength": 8192
                            },
                            "type": {
                              "type": "string",
                              "description": "The array type, which is `object`.\n",
                              "enum": [
                                "object"
                              ]
                            },
                            "options": {
                              "type": "object",
                              "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                              "additionalProperties": false,
                              "properties": {
                                "value": {
                                  "type": "array",
                                  "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                  "nullable": true,
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "valueCaseSensitive": {
                                  "type": "boolean",
                                  "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n"
                                },
                                "valueEscaped": {
                                  "type": "boolean",
                                  "description": "Set to `true` if the entries for `value` includes escaped characters.\n"
                                },
                                "valueHasWildcard": {
                                  "type": "boolean",
                                  "description": "Set to `true` if the entries for `value` includes wildcards.\n"
                                }
                              }
                            },
                            "nameCaseSensitive": {
                              "type": "boolean",
                              "description": "When set to `true`, the `name` match is case-sensitive.\n"
                            },
                            "nameHasWildcard": {
                              "type": "boolean",
                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "matchesAlways": {
                "type": "boolean",
                "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n"
              },
              "forwardSettings": {
                "type": "object",
                "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                "additionalProperties": false,
                "properties": {
                  "pathAndQS": {
                    "type": "string",
                    "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                    "minLength": 1,
                    "maxLength": 8192
                  },
                  "useIncomingQueryString": {
                    "type": "boolean",
                    "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n"
                  },
                  "originId": {
                    "type": "string",
                    "description": "The conditional origin's unique identifier.\n",
                    "nullable": true,
                    "maxLength": 8192
                  }
                }
              }
            }
          },
          {
            "additionalProperties": false,
            "description": "Contains match rule information for API Prioritization.\n",
            "properties": {
              "akaRuleId": {
                "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                "readOnly": true,
                "type": "string"
              },
              "disabled": {
                "default": false,
                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                "type": "boolean"
              },
              "end": {
                "default": 0,
                "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                "minimum": 0,
                "type": "integer"
              },
              "id": {
                "description": "__Read-only__ Akamai internal use only.\n",
                "nullable": true,
                "readOnly": true,
                "type": "integer"
              },
              "location": {
                "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                "readOnly": true,
                "type": "string"
              },
              "matchURL": {
                "description": "The URL the Cloudlet uses to match the incoming request.\n",
                "maxLength": 8192,
                "nullable": true,
                "type": "string"
              },
              "matches": {
                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                "items": {
                  "additionalProperties": false,
                  "description": "The match rule criteria.\n",
                  "oneOf": [
                    {
                      "required": [
                        "matchType",
                        "matchValue"
                      ],
                      "title": "matchType and matchValue required"
                    },
                    {
                      "required": [
                        "matchType",
                        "objectMatchValue"
                      ],
                      "title": "matchType and objectMatchValue required"
                    }
                  ],
                  "properties": {
                    "caseSensitive": {
                      "description": "If `true`, the match is case sensitive.\n",
                      "type": "boolean"
                    },
                    "checkIPs": {
                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                      "enum": [
                        "CONNECTING_IP",
                        "XFF_HEADERS",
                        "CONNECTING_IP XFF_HEADERS"
                      ],
                      "type": "string"
                    },
                    "matchOperator": {
                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                      "enum": [
                        "contains",
                        "exists",
                        "equals"
                      ],
                      "type": "string"
                    },
                    "matchType": {
                      "description": "The type of match used.\n",
                      "enum": [
                        "hostname",
                        "path",
                        "extension",
                        "query",
                        "cookie",
                        "deviceCharacteristics",
                        "clientip",
                        "continent",
                        "countrycode",
                        "regioncode",
                        "protocol",
                        "header",
                        "method",
                        "proxy"
                      ],
                      "type": "string"
                    },
                    "matchValue": {
                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                      "maxLength": 8192,
                      "minLength": 1,
                      "type": "string"
                    },
                    "negate": {
                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                      "type": "boolean"
                    },
                    "objectMatchValue": {
                      "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                      "oneOf": [
                        {
                          "additionalProperties": false,
                          "description": "Use the `simple` array option when adding an array of string-based values.\n",
                          "properties": {
                            "type": {
                              "description": "The object type, which is `simple`.\n",
                              "enum": [
                                "simple"
                              ],
                              "type": "string"
                            },
                            "value": {
                              "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                              "items": {
                                "type": "string"
                              },
                              "nullable": true,
                              "type": "array"
                            }
                          },
                          "required": [
                            "type",
                            "value"
                          ],
                          "title": "Simple",
                          "type": "object"
                        },
                        {
                          "additionalProperties": false,
                          "description": "Use this for more complex match criteria.\n",
                          "properties": {
                            "name": {
                              "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                              "maxLength": 8192,
                              "minLength": 1,
                              "type": "string"
                            },
                            "nameCaseSensitive": {
                              "description": "When set to `true`, the `name` match is case-sensitive.\n",
                              "type": "boolean"
                            },
                            "nameHasWildcard": {
                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                              "type": "boolean"
                            },
                            "options": {
                              "additionalProperties": false,
                              "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                              "properties": {
                                "value": {
                                  "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                  "items": {
                                    "type": "string"
                                  },
                                  "nullable": true,
                                  "type": "array"
                                },
                                "valueCaseSensitive": {
                                  "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                  "type": "boolean"
                                },
                                "valueEscaped": {
                                  "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                  "type": "boolean"
                                },
                                "valueHasWildcard": {
                                  "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                  "type": "boolean"
                                }
                              },
                              "type": "object"
                            },
                            "type": {
                              "description": "The array type, which is `object`.\n",
                              "enum": [
                                "object"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [
                            "name",
                            "type"
                          ],
                          "title": "Object",
                          "type": "object"
                        }
                      ],
                      "title": "Object match value",
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "nullable": true,
                "type": "array"
              },
              "name": {
                "description": "The name of the rule.\n",
                "maxLength": 8192,
                "nullable": true,
                "type": "string"
              },
              "passThroughPercent": {
                "description": "The percentage of requests that pass through to the origin, with `100` indicating the request always passes through to the origin. For Visitor Prioritization, a value of -1 sends everyone to the waiting room.\n",
                "maximum": 100,
                "minimum": -1,
                "type": "number"
              },
              "start": {
                "default": 0,
                "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                "minimum": 0,
                "type": "integer"
              },
              "type": {
                "description": "The type of Cloudlet the rule is for. For example, the string for API Prioritization is `apMatchRule`.\n",
                "enum": [
                  "apMatchRule"
                ],
                "type": "string"
              }
            },
            "required": [
              "type",
              "passThroughPercent"
            ],
            "title": "API Prioritization",
            "type": "object",
            "x-akamai": {
              "file-path": "schemas/match-rule-ap.yaml"
            }
          },
          {
            "additionalProperties": false,
            "description": "Contains match rule information for Audience Segmentation.\n",
            "properties": {
              "akaRuleId": {
                "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                "readOnly": true,
                "type": "string"
              },
              "disabled": {
                "default": false,
                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                "type": "boolean"
              },
              "end": {
                "default": 0,
                "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                "minimum": 0,
                "type": "integer"
              },
              "forwardSettings": {
                "additionalProperties": false,
                "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                "properties": {
                  "originId": {
                    "description": "The conditional origin's unique identifier.\n",
                    "maxLength": 8192,
                    "nullable": true,
                    "type": "string"
                  },
                  "pathAndQS": {
                    "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                    "maxLength": 8192,
                    "minLength": 1,
                    "type": "string"
                  },
                  "useIncomingQueryString": {
                    "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n",
                    "type": "boolean"
                  }
                },
                "type": "object"
              },
              "id": {
                "description": "__Read-only__ Akamai internal use only.\n",
                "nullable": true,
                "readOnly": true,
                "type": "integer"
              },
              "location": {
                "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                "readOnly": true,
                "type": "string"
              },
              "matchURL": {
                "description": "The URL the Cloudlet uses to match the incoming request.\n",
                "maxLength": 8192,
                "nullable": true,
                "type": "string"
              },
              "matches": {
                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                "items": {
                  "additionalProperties": false,
                  "description": "The match rule criteria.\n",
                  "oneOf": [
                    {
                      "required": [
                        "matchType",
                        "matchValue"
                      ],
                      "title": "matchType and matchValue required"
                    },
                    {
                      "required": [
                        "matchType",
                        "objectMatchValue"
                      ],
                      "title": "matchType and objectMatchValue required"
                    }
                  ],
                  "properties": {
                    "caseSensitive": {
                      "description": "If `true`, the match is case sensitive.\n",
                      "type": "boolean"
                    },
                    "checkIPs": {
                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                      "enum": [
                        "CONNECTING_IP",
                        "XFF_HEADERS",
                        "CONNECTING_IP XFF_HEADERS"
                      ],
                      "type": "string"
                    },
                    "matchOperator": {
                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                      "enum": [
                        "contains",
                        "exists",
                        "equals"
                      ],
                      "type": "string"
                    },
                    "matchType": {
                      "description": "The type of match used.\n",
                      "enum": [
                        "header",
                        "hostname",
                        "path",
                        "extension",
                        "query",
                        "range",
                        "regex",
                        "cookie",
                        "deviceCharacteristics",
                        "clientip",
                        "continent",
                        "countrycode",
                        "regioncode",
                        "protocol",
                        "method",
                        "proxy"
                      ],
                      "type": "string"
                    },
                    "matchValue": {
                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                      "maxLength": 8192,
                      "minLength": 1,
                      "type": "string"
                    },
                    "negate": {
                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                      "type": "boolean"
                    },
                    "objectMatchValue": {
                      "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.\n",
                      "oneOf": [
                        {
                          "additionalProperties": false,
                          "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.\n",
                          "properties": {
                            "type": {
                              "description": "The object type, which is `range`.\n",
                              "enum": [
                                "range"
                              ],
                              "type": "string"
                            },
                            "value": {
                              "description": "An inclusive range comprised of two numbers to match on.\n",
                              "items": {
                                "type": "integer"
                              },
                              "nullable": true,
                              "type": "array"
                            }
                          },
                          "required": [
                            "type",
                            "value"
                          ],
                          "title": "Range",
                          "type": "object"
                        },
                        {
                          "additionalProperties": false,
                          "description": "Use the `simple` array option when adding an array of string-based values.\n",
                          "properties": {
                            "type": {
                              "description": "The object type, which is `simple`.\n",
                              "enum": [
                                "simple"
                              ],
                              "type": "string"
                            },
                            "value": {
                              "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                              "items": {
                                "type": "string"
                              },
                              "nullable": true,
                              "type": "array"
                            }
                          },
                          "required": [
                            "type",
                            "value"
                          ],
                          "title": "Simple",
                          "type": "object"
                        },
                        {
                          "additionalProperties": false,
                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                          "properties": {
                            "name": {
                              "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                              "maxLength": 8192,
                              "minLength": 1,
                              "type": "string"
                            },
                            "nameCaseSensitive": {
                              "description": "When set to `true`, the `name` match is case-sensitive.\n",
                              "type": "boolean"
                            },
                            "nameHasWildcard": {
                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                              "type": "boolean"
                            },
                            "options": {
                              "additionalProperties": false,
                              "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                              "properties": {
                                "value": {
                                  "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                  "items": {
                                    "type": "string"
                                  },
                                  "nullable": true,
                                  "type": "array"
                                },
                                "valueCaseSensitive": {
                                  "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                  "type": "boolean"
                                },
                                "valueEscaped": {
                                  "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                  "type": "boolean"
                                },
                                "valueHasWildcard": {
                                  "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                  "type": "boolean"
                                }
                              },
                              "type": "object"
                            },
                            "type": {
                              "description": "The array type, which is `object`.\n",
                              "enum": [
                                "object"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [
                            "name",
                            "type"
                          ],
                          "title": "Object",
                          "type": "object"
                        }
                      ],
                      "title": "Object match value",
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "nullable": true,
                "type": "array"
              },
              "name": {
                "description": "The name of the rule.\n",
                "maxLength": 8192,
                "nullable": true,
                "type": "string"
              },
              "start": {
                "default": 0,
                "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                "minimum": 0,
                "type": "integer"
              },
              "type": {
                "description": "The type of Cloudlet the rule is for. For example, the string for Audience Segmentation is `asMatchRule`.\n",
                "enum": [
                  "asMatchRule"
                ],
                "type": "string"
              }
            },
            "required": [
              "type"
            ],
            "title": "Audience Segmentation",
            "type": "object",
            "x-akamai": {
              "file-path": "schemas/match-rule-as.yaml"
            }
          },
          {
            "additionalProperties": false,
            "description": "Contains match rule information for Phased Release.\n",
            "properties": {
              "akaRuleId": {
                "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                "readOnly": true,
                "type": "string"
              },
              "disabled": {
                "default": false,
                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                "type": "boolean"
              },
              "end": {
                "default": 0,
                "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                "minimum": 0,
                "type": "integer"
              },
              "forwardSettings": {
                "additionalProperties": false,
                "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, and `percent`.\n",
                "properties": {
                  "originId": {
                    "description": "The conditional origin's unique identifier.\n",
                    "maxLength": 8192,
                    "nullable": true,
                    "type": "string"
                  },
                  "percent": {
                    "description": "The percentage of visitors directed to a different origin.\n",
                    "maximum": 100,
                    "minimum": 0,
                    "type": "number"
                  }
                },
                "type": "object"
              },
              "id": {
                "description": "__Read-only__ Akamai internal use only.\n",
                "nullable": true,
                "readOnly": true,
                "type": "integer"
              },
              "location": {
                "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                "readOnly": true,
                "type": "string"
              },
              "matchURL": {
                "description": "The URL the Cloudlet uses to match the incoming request.\n",
                "maxLength": 8192,
                "nullable": true,
                "type": "string"
              },
              "matches": {
                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                "items": {
                  "additionalProperties": false,
                  "description": "The match rule criteria.\n",
                  "oneOf": [
                    {
                      "required": [
                        "matchType",
                        "matchValue"
                      ],
                      "title": "matchType and matchValue required"
                    },
                    {
                      "required": [
                        "matchType",
                        "objectMatchValue"
                      ],
                      "title": "matchType and objectMatchValue required"
                    }
                  ],
                  "properties": {
                    "caseSensitive": {
                      "description": "If `true`, the match is case sensitive.\n",
                      "type": "boolean"
                    },
                    "checkIPs": {
                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                      "enum": [
                        "CONNECTING_IP",
                        "XFF_HEADERS",
                        "CONNECTING_IP XFF_HEADERS"
                      ],
                      "nullable": true,
                      "type": "string"
                    },
                    "matchOperator": {
                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                      "enum": [
                        "contains",
                        "exists",
                        "equals"
                      ],
                      "type": "string"
                    },
                    "matchType": {
                      "description": "The type of match used.\n",
                      "enum": [
                        "header",
                        "hostname",
                        "path",
                        "extension",
                        "query",
                        "cookie",
                        "deviceCharacteristics",
                        "clientip",
                        "continent",
                        "countrycode",
                        "regioncode",
                        "protocol",
                        "method",
                        "proxy"
                      ],
                      "type": "string"
                    },
                    "matchValue": {
                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                      "maxLength": 8192,
                      "minLength": 1,
                      "type": "string"
                    },
                    "negate": {
                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                      "type": "boolean"
                    },
                    "objectMatchValue": {
                      "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                      "oneOf": [
                        {
                          "additionalProperties": false,
                          "description": "Use the `simple` array option when adding an array of string-based values.\n",
                          "properties": {
                            "type": {
                              "description": "The object type, which is `simple`.\n",
                              "enum": [
                                "simple"
                              ],
                              "type": "string"
                            },
                            "value": {
                              "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                              "items": {
                                "type": "string"
                              },
                              "nullable": true,
                              "type": "array"
                            }
                          },
                          "required": [
                            "type",
                            "value"
                          ],
                          "title": "Simple",
                          "type": "object"
                        },
                        {
                          "additionalProperties": false,
                          "description": "Use this for more complex match criteria.\n",
                          "properties": {
                            "name": {
                              "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                              "maxLength": 8192,
                              "minLength": 1,
                              "type": "string"
                            },
                            "nameCaseSensitive": {
                              "description": "When set to `true`, the `name` match is case-sensitive.\n",
                              "type": "boolean"
                            },
                            "nameHasWildcard": {
                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                              "type": "boolean"
                            },
                            "options": {
                              "additionalProperties": false,
                              "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                              "properties": {
                                "value": {
                                  "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                  "items": {
                                    "type": "string"
                                  },
                                  "nullable": true,
                                  "type": "array"
                                },
                                "valueCaseSensitive": {
                                  "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                  "type": "boolean"
                                },
                                "valueEscaped": {
                                  "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                  "type": "boolean"
                                },
                                "valueHasWildcard": {
                                  "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                  "type": "boolean"
                                }
                              },
                              "type": "object"
                            },
                            "type": {
                              "description": "The array type, which is `object`.\n",
                              "enum": [
                                "object"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [
                            "name",
                            "type"
                          ],
                          "title": "Object",
                          "type": "object"
                        }
                      ],
                      "title": "Object match value",
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "nullable": true,
                "type": "array"
              },
              "matchesAlways": {
                "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n",
                "type": "boolean"
              },
              "name": {
                "description": "The name of the rule.\n",
                "maxLength": 8192,
                "nullable": true,
                "type": "string"
              },
              "start": {
                "default": 0,
                "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                "minimum": 0,
                "type": "integer"
              },
              "type": {
                "description": "The type of Cloudlet the rule is for. For example, the string for Phased Release is `cdMatchRule`.\n",
                "enum": [
                  "cdMatchRule"
                ],
                "type": "string"
              }
            },
            "required": [
              "type"
            ],
            "title": "Phased Release",
            "type": "object",
            "x-akamai": {
              "file-path": "schemas/match-rule-cd.yaml"
            }
          },
          {
            "additionalProperties": false,
            "description": "Contains match rule information for Edge Redirector.\n",
            "properties": {
              "akaRuleId": {
                "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                "readOnly": true,
                "type": "string"
              },
              "disabled": {
                "default": false,
                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                "type": "boolean"
              },
              "end": {
                "default": 0,
                "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                "minimum": 0,
                "type": "integer"
              },
              "id": {
                "description": "__Read-only__ Akamai internal use only.\n",
                "nullable": true,
                "readOnly": true,
                "type": "integer"
              },
              "location": {
                "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                "readOnly": true,
                "type": "string"
              },
              "matchURL": {
                "description": "The URL the Cloudlet uses to match the incoming request.\n",
                "maxLength": 8192,
                "nullable": true,
                "type": "string"
              },
              "matches": {
                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                "items": {
                  "additionalProperties": false,
                  "description": "The match rule criteria.\n",
                  "oneOf": [
                    {
                      "required": [
                        "matchType",
                        "matchValue"
                      ],
                      "title": "matchType and matchValue required"
                    },
                    {
                      "required": [
                        "matchType",
                        "objectMatchValue"
                      ],
                      "title": "matchType and objectMatchValue required"
                    }
                  ],
                  "properties": {
                    "caseSensitive": {
                      "description": "If `true`, the match is case sensitive.\n",
                      "type": "boolean"
                    },
                    "checkIPs": {
                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                      "enum": [
                        "CONNECTING_IP",
                        "XFF_HEADERS",
                        "CONNECTING_IP XFF_HEADERS"
                      ],
                      "nullable": true,
                      "type": "string"
                    },
                    "matchOperator": {
                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                      "enum": [
                        "contains",
                        "exists",
                        "equals"
                      ],
                      "type": "string"
                    },
                    "matchType": {
                      "description": "The type of match used.\n",
                      "enum": [
                        "header",
                        "hostname",
                        "path",
                        "extension",
                        "query",
                        "regex",
                        "cookie",
                        "deviceCharacteristics",
                        "clientip",
                        "continent",
                        "countrycode",
                        "regioncode",
                        "protocol",
                        "method",
                        "proxy"
                      ],
                      "type": "string"
                    },
                    "matchValue": {
                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                      "maxLength": 8192,
                      "minLength": 1,
                      "type": "string"
                    },
                    "negate": {
                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                      "type": "boolean"
                    },
                    "objectMatchValue": {
                      "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                      "oneOf": [
                        {
                          "additionalProperties": false,
                          "description": "Use the `simple` array option when adding an array of string-based values.\n",
                          "properties": {
                            "type": {
                              "description": "The object type, which is `simple`.\n",
                              "enum": [
                                "simple"
                              ],
                              "type": "string"
                            },
                            "value": {
                              "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                              "items": {
                                "type": "string"
                              },
                              "nullable": true,
                              "type": "array"
                            }
                          },
                          "required": [
                            "type",
                            "value"
                          ],
                          "title": "Simple",
                          "type": "object"
                        },
                        {
                          "additionalProperties": false,
                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                          "properties": {
                            "name": {
                              "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                              "maxLength": 8192,
                              "minLength": 1,
                              "type": "string"
                            },
                            "nameCaseSensitive": {
                              "description": "When set to `true`, the `name` match is case-sensitive.\n",
                              "type": "boolean"
                            },
                            "nameHasWildcard": {
                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                              "type": "boolean"
                            },
                            "options": {
                              "additionalProperties": false,
                              "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                              "properties": {
                                "value": {
                                  "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                  "items": {
                                    "type": "string"
                                  },
                                  "nullable": true,
                                  "type": "array"
                                },
                                "valueCaseSensitive": {
                                  "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                  "type": "boolean"
                                },
                                "valueEscaped": {
                                  "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                  "type": "boolean"
                                },
                                "valueHasWildcard": {
                                  "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                  "type": "boolean"
                                }
                              },
                              "type": "object"
                            },
                            "type": {
                              "description": "The array type, which is `object`.\n",
                              "enum": [
                                "object"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [
                            "name",
                            "type"
                          ],
                          "title": "Object",
                          "type": "object"
                        }
                      ],
                      "title": "Object match value",
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "nullable": true,
                "type": "array"
              },
              "matchesAlways": {
                "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n",
                "type": "boolean"
              },
              "name": {
                "description": "The name of the rule.\n",
                "maxLength": 8192,
                "nullable": true,
                "type": "string"
              },
              "redirectURL": {
                "description": "The URL Edge Redirector redirects the request to. If using `useRelativeUrl`, you can enter a path for the value. If `useRelativeUrl` is not used or set to `none`, then the `redirectUrl` should be a fully qualified URL.\n",
                "maxLength": 8192,
                "minLength": 1,
                "type": "string"
              },
              "start": {
                "default": 0,
                "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                "minimum": 0,
                "type": "integer"
              },
              "statusCode": {
                "description": "The HTTP response redirect type status code: `301` for permanent redirect, `302` for temporary redirect, `303` for temporary using GET, `307` for temporary retain method, or `308` for permanent retain method.\n",
                "enum": [
                  301,
                  302,
                  303,
                  307,
                  308
                ],
                "type": "integer"
              },
              "type": {
                "description": "The type of Cloudlet the rule is for. For example, the string for Edge Redirector is `erMatchRule`.\n",
                "enum": [
                  "erMatchRule"
                ],
                "type": "string"
              },
              "useIncomingQueryString": {
                "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n",
                "type": "boolean"
              },
              "useIncomingSchemeAndHost": {
                "description": "If set to `true`, the Cloudlet copies both the scheme and the hostname from the incoming request to use in the redirect URL.\n",
                "type": "boolean"
              },
              "useRelativeUrl": {
                "description": "If set to `relative_url`, takes the path entered for the `redirectUrl` and sets it in the response’s `Location` header. The client browser receiving the request decides which protocol and hostname to use. If set to `copy_scheme_hostname`, it creates an absolute path by taking the protocol and hostname from the incoming request and combining them with path information entered for the `redirectUrl`. This absolute path is set in the response’s `Location` header. If you don't include `useRelativeUrl`, or if you set it to `none`, then specify the `redirectUrl` as a fully qualified URL.\n",
                "enum": [
                  "relative_url",
                  "copy_scheme_hostname",
                  "none"
                ],
                "type": "string"
              }
            },
            "required": [
              "type",
              "redirectURL",
              "statusCode"
            ],
            "title": "Edge Redirector",
            "type": "object",
            "x-akamai": {
              "file-path": "schemas/match-rule-er.yaml"
            }
          },
          {
            "additionalProperties": false,
            "description": "Contains match rule information for Forward Rewrite.\n",
            "properties": {
              "akaRuleId": {
                "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                "readOnly": true,
                "type": "string"
              },
              "disabled": {
                "default": false,
                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                "type": "boolean"
              },
              "end": {
                "default": 0,
                "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                "minimum": 0,
                "type": "integer"
              },
              "forwardSettings": {
                "additionalProperties": false,
                "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                "properties": {
                  "originId": {
                    "description": "The conditional origin's unique identifier.\n",
                    "maxLength": 8192,
                    "nullable": true,
                    "type": "string"
                  },
                  "pathAndQS": {
                    "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                    "maxLength": 8192,
                    "minLength": 1,
                    "type": "string"
                  },
                  "useIncomingQueryString": {
                    "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n",
                    "type": "boolean"
                  }
                },
                "type": "object"
              },
              "id": {
                "description": "__Read-only__ Akamai internal use only.\n",
                "nullable": true,
                "readOnly": true,
                "type": "integer"
              },
              "location": {
                "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                "readOnly": true,
                "type": "string"
              },
              "matchURL": {
                "description": "The URL the Cloudlet uses to match the incoming request.\n",
                "maxLength": 8192,
                "nullable": true,
                "type": "string"
              },
              "matches": {
                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                "items": {
                  "additionalProperties": false,
                  "description": "The match rule criteria.\n",
                  "oneOf": [
                    {
                      "required": [
                        "matchType",
                        "matchValue"
                      ],
                      "title": "matchType and matchValue required"
                    },
                    {
                      "required": [
                        "matchType",
                        "objectMatchValue"
                      ],
                      "title": "matchType and objectMatchValue required"
                    }
                  ],
                  "properties": {
                    "caseSensitive": {
                      "description": "If `true`, the match is case sensitive.\n",
                      "type": "boolean"
                    },
                    "checkIPs": {
                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                      "enum": [
                        "CONNECTING_IP",
                        "XFF_HEADERS",
                        "CONNECTING_IP XFF_HEADERS"
                      ],
                      "type": "string"
                    },
                    "matchOperator": {
                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                      "enum": [
                        "contains",
                        "exists",
                        "equals"
                      ],
                      "type": "string"
                    },
                    "matchType": {
                      "description": "The type of match used.\n",
                      "enum": [
                        "header",
                        "hostname",
                        "path",
                        "extension",
                        "query",
                        "regex",
                        "cookie",
                        "deviceCharacteristics",
                        "clientip",
                        "continent",
                        "countrycode",
                        "regioncode",
                        "protocol",
                        "method",
                        "proxy"
                      ],
                      "type": "string"
                    },
                    "matchValue": {
                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                      "maxLength": 8192,
                      "minLength": 1,
                      "type": "string"
                    },
                    "negate": {
                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                      "type": "boolean"
                    },
                    "objectMatchValue": {
                      "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                      "oneOf": [
                        {
                          "additionalProperties": false,
                          "description": "Use the `simple` array option when adding an array of string-based values.\n",
                          "properties": {
                            "type": {
                              "description": "The object type, which is `simple`.\n",
                              "enum": [
                                "simple"
                              ],
                              "type": "string"
                            },
                            "value": {
                              "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                              "items": {
                                "type": "string"
                              },
                              "nullable": true,
                              "type": "array"
                            }
                          },
                          "required": [
                            "type",
                            "value"
                          ],
                          "title": "Simple",
                          "type": "object"
                        },
                        {
                          "additionalProperties": false,
                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                          "properties": {
                            "name": {
                              "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                              "maxLength": 8192,
                              "minLength": 1,
                              "type": "string"
                            },
                            "nameCaseSensitive": {
                              "description": "When set to `true`, the `name` match is case-sensitive.\n",
                              "type": "boolean"
                            },
                            "nameHasWildcard": {
                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                              "type": "boolean"
                            },
                            "options": {
                              "additionalProperties": false,
                              "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                              "properties": {
                                "value": {
                                  "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                  "items": {
                                    "type": "string"
                                  },
                                  "nullable": true,
                                  "type": "array"
                                },
                                "valueCaseSensitive": {
                                  "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                  "type": "boolean"
                                },
                                "valueEscaped": {
                                  "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                  "type": "boolean"
                                },
                                "valueHasWildcard": {
                                  "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                  "type": "boolean"
                                }
                              },
                              "type": "object"
                            },
                            "type": {
                              "description": "The array type, which is `object`.\n",
                              "enum": [
                                "object"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [
                            "name",
                            "type"
                          ],
                          "title": "Object",
                          "type": "object"
                        }
                      ],
                      "title": "Object match value",
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "nullable": true,
                "type": "array"
              },
              "name": {
                "description": "The name of the rule.\n",
                "maxLength": 8192,
                "nullable": true,
                "type": "string"
              },
              "start": {
                "default": 0,
                "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                "minimum": 0,
                "type": "integer"
              },
              "type": {
                "description": "The type of Cloudlet the rule is for. For example, the string for Forward Rewrite is `frMatchRule`.\n",
                "enum": [
                  "frMatchRule"
                ],
                "type": "string"
              }
            },
            "required": [
              "type",
              "forwardSettings"
            ],
            "title": "Forward Rewrite",
            "type": "object",
            "x-akamai": {
              "file-path": "schemas/match-rule-fr.yaml"
            }
          },
          {
            "additionalProperties": false,
            "description": "Contains match rule information for Request Control.\n",
            "properties": {
              "akaRuleId": {
                "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                "readOnly": true,
                "type": "string"
              },
              "allowDeny": {
                "description": "If set to `allow`, the request is sent to origin when all conditions are true. If `deny`, the request is denied when all conditions are true. If `denybranded`, the request is denied and rerouted according to the configuration of the [Request Control behavior](https://techdocs.akamai.com/property-mgr/reference/latest-request-control).\n",
                "enum": [
                  "allow",
                  "deny",
                  "denybranded"
                ],
                "type": "string"
              },
              "disabled": {
                "default": false,
                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                "type": "boolean"
              },
              "end": {
                "default": 0,
                "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                "minimum": 0,
                "type": "integer"
              },
              "id": {
                "description": "__Read-only__ Akamai internal use only.\n",
                "nullable": true,
                "readOnly": true,
                "type": "integer"
              },
              "location": {
                "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                "readOnly": true,
                "type": "string"
              },
              "matches": {
                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                "items": {
                  "additionalProperties": false,
                  "description": "The match rule criteria.\n",
                  "oneOf": [
                    {
                      "required": [
                        "matchType",
                        "matchValue"
                      ],
                      "title": "matchType and matchValue required"
                    },
                    {
                      "required": [
                        "matchType",
                        "objectMatchValue"
                      ],
                      "title": "matchType and objectMatchValue required"
                    }
                  ],
                  "properties": {
                    "caseSensitive": {
                      "description": "If `true`, the match is case sensitive.\n",
                      "type": "boolean"
                    },
                    "checkIPs": {
                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                      "enum": [
                        "CONNECTING_IP",
                        "XFF_HEADERS",
                        "CONNECTING_IP XFF_HEADERS"
                      ],
                      "type": "string"
                    },
                    "matchOperator": {
                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                      "enum": [
                        "contains",
                        "exists",
                        "equals"
                      ],
                      "type": "string"
                    },
                    "matchType": {
                      "description": "The type of match used.\n",
                      "enum": [
                        "clientip",
                        "continent",
                        "cookie",
                        "countrycode",
                        "deviceCharacteristics",
                        "extension",
                        "header",
                        "hostname",
                        "method",
                        "path",
                        "protocol",
                        "proxy",
                        "query",
                        "regioncode"
                      ],
                      "type": "string"
                    },
                    "matchValue": {
                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                      "maxLength": 8192,
                      "minLength": 1,
                      "type": "string"
                    },
                    "negate": {
                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                      "type": "boolean"
                    },
                    "objectMatchValue": {
                      "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                      "oneOf": [
                        {
                          "additionalProperties": false,
                          "description": "Use the `simple` array option when adding an array of string-based values.\n",
                          "properties": {
                            "type": {
                              "description": "The object type, which is `simple`.\n",
                              "enum": [
                                "simple"
                              ],
                              "type": "string"
                            },
                            "value": {
                              "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                              "items": {
                                "type": "string"
                              },
                              "nullable": true,
                              "type": "array"
                            }
                          },
                          "required": [
                            "type",
                            "value"
                          ],
                          "title": "Simple",
                          "type": "object"
                        },
                        {
                          "additionalProperties": false,
                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                          "properties": {
                            "name": {
                              "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                              "maxLength": 8192,
                              "minLength": 1,
                              "type": "string"
                            },
                            "nameCaseSensitive": {
                              "description": "When set to `true`, the `name` match is case-sensitive.\n",
                              "type": "boolean"
                            },
                            "nameHasWildcard": {
                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                              "type": "boolean"
                            },
                            "options": {
                              "additionalProperties": false,
                              "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                              "properties": {
                                "value": {
                                  "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                  "items": {
                                    "type": "string"
                                  },
                                  "nullable": true,
                                  "type": "array"
                                },
                                "valueCaseSensitive": {
                                  "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                  "type": "boolean"
                                },
                                "valueEscaped": {
                                  "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                  "type": "boolean"
                                },
                                "valueHasWildcard": {
                                  "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                  "type": "boolean"
                                }
                              },
                              "type": "object"
                            },
                            "type": {
                              "description": "The array type, which is `object`.\n",
                              "enum": [
                                "object"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [
                            "name",
                            "type"
                          ],
                          "title": "Object",
                          "type": "object"
                        }
                      ],
                      "title": "Object match value",
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "nullable": true,
                "type": "array"
              },
              "matchesAlways": {
                "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n",
                "type": "boolean"
              },
              "name": {
                "description": "The name of the rule.\n",
                "maxLength": 8192,
                "nullable": true,
                "type": "string"
              },
              "start": {
                "default": 0,
                "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                "minimum": 0,
                "type": "integer"
              },
              "type": {
                "description": "The type of Cloudlet the rule is for. For example, the string for Request Control is `igMatchRule`.\n",
                "enum": [
                  "igMatchRule"
                ],
                "type": "string"
              }
            },
            "required": [
              "type",
              "allowDeny"
            ],
            "title": "Request Control",
            "type": "object",
            "x-akamai": {
              "file-path": "schemas/match-rule-ig.yaml"
            }
          },
          {
            "type": "object",
            "description": "Contains match rule information for Visitor Prioritization.\n",
            "title": "Visitor Prioritization",
            "additionalProperties": false,
            "required": [
              "type",
              "passThroughPercent"
            ],
            "properties": {
              "id": {
                "type": "integer",
                "description": "Akamai internal use only.\n",
                "nullable": true,
                "readOnly": true
              },
              "location": {
                "type": "string",
                "description": "The navigable endpoint used for the object referred to in the operation.\n",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the rule.\n",
                "nullable": true,
                "maxLength": 8192
              },
              "type": {
                "type": "string",
                "description": "The type of Cloudlet the rule is for. For example, the string for Visitor Prioritization is `vpMatchRule`.\n",
                "enum": [
                  "vpMatchRule"
                ]
              },
              "akaRuleId": {
                "type": "string",
                "description": "The rule's unique identifier within the policy version.\n",
                "readOnly": true
              },
              "start": {
                "type": "integer",
                "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                "default": 0,
                "minimum": 0
              },
              "end": {
                "type": "integer",
                "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                "default": 0,
                "minimum": 0
              },
              "matches": {
                "type": "array",
                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                "nullable": true,
                "items": {
                  "type": "object",
                  "description": "The match rule criteria.\n",
                  "additionalProperties": false,
                  "oneOf": [
                    {
                      "required": [
                        "matchType",
                        "matchValue"
                      ],
                      "title": "matchType and matchValue required"
                    },
                    {
                      "required": [
                        "matchType",
                        "objectMatchValue"
                      ],
                      "title": "matchType and objectMatchValue required"
                    }
                  ],
                  "properties": {
                    "caseSensitive": {
                      "type": "boolean",
                      "description": "If `true`, the match is case sensitive.\n"
                    },
                    "matchValue": {
                      "type": "string",
                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                      "minLength": 1,
                      "maxLength": 8192
                    },
                    "negate": {
                      "type": "boolean",
                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                    },
                    "matchOperator": {
                      "type": "string",
                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                      "enum": [
                        "contains",
                        "exists",
                        "equals"
                      ]
                    },
                    "matchType": {
                      "type": "string",
                      "description": "The type of match used.\n",
                      "enum": [
                        "hostname",
                        "path",
                        "extension",
                        "query",
                        "cookie",
                        "deviceCharacteristics",
                        "clientip",
                        "continent",
                        "countrycode",
                        "regioncode",
                        "protocol",
                        "header",
                        "method",
                        "proxy"
                      ]
                    },
                    "checkIPs": {
                      "type": "string",
                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                      "enum": [
                        "CONNECTING_IP",
                        "XFF_HEADERS",
                        "CONNECTING_IP XFF_HEADERS"
                      ]
                    },
                    "objectMatchValue": {
                      "type": "object",
                      "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                      "title": "Object match value",
                      "oneOf": [
                        {
                          "type": "object",
                          "description": "Use the `simple` array option when adding an array of string-based values.\n",
                          "title": "Simple",
                          "additionalProperties": false,
                          "required": [
                            "type",
                            "value"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "description": "The object type, which is `simple`.\n",
                              "enum": [
                                "simple"
                              ]
                            },
                            "value": {
                              "type": "array",
                              "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                              "nullable": true,
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                          "title": "Object",
                          "additionalProperties": false,
                          "required": [
                            "name",
                            "type"
                          ],
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                              "minLength": 1,
                              "maxLength": 8192
                            },
                            "type": {
                              "type": "string",
                              "description": "The array type, which is `object`.\n",
                              "enum": [
                                "object"
                              ]
                            },
                            "options": {
                              "type": "object",
                              "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                              "additionalProperties": false,
                              "properties": {
                                "value": {
                                  "type": "array",
                                  "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                  "nullable": true,
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "valueHasWildcard": {
                                  "type": "boolean",
                                  "description": "Set to `true` if the entries for `value` includes wildcards.\n"
                                },
                                "valueCaseSensitive": {
                                  "type": "boolean",
                                  "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n"
                                },
                                "valueEscaped": {
                                  "type": "boolean",
                                  "description": "Set to `true` if the entries for `value` includes escaped characters.\n"
                                }
                              }
                            },
                            "nameCaseSensitive": {
                              "type": "boolean",
                              "description": "When set to `true`, the `name` match is case-sensitive.\n"
                            },
                            "nameHasWildcard": {
                              "type": "boolean",
                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "disabled": {
                "type": "boolean",
                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                "default": false
              },
              "passThroughPercent": {
                "type": "number",
                "description": "The range `0.000: 99.000` specifies the percentage of requests that pass through to the origin. The value of `100` means the request always passes through to the origin. For Visitor Prioritization, a value of `-1` means send everyone to the waiting room.\n",
                "minimum": -1,
                "maximum": 100
              },
              "matchURL": {
                "type": "string",
                "description": "The URL the Cloudlet uses to match the incoming request.\n",
                "nullable": true,
                "maxLength": 8192
              },
              "useIncomingQueryString": {
                "type": "boolean",
                "description": "If set to `true`, the Cloudlet includes the request's query string in the rewritten or forwarded URL.\n"
              }
            }
          }
        ]
      },
      "match-rules": {
        "description": "A list of Cloudlet-specific match rules for this policy.\n",
        "items": {
          "description": "Contains information about match rules.\n",
          "oneOf": [
            {
              "type": "object",
              "description": "Contains match rule information for Application Load Balancer.\n",
              "title": "Application Load Balancer",
              "additionalProperties": false,
              "required": [
                "type"
              ],
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Akamai internal use only.\n",
                  "nullable": true,
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The navigable endpoint used for the object referred to in the operation.\n",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the rule.\n",
                  "nullable": true,
                  "maxLength": 8192
                },
                "type": {
                  "type": "string",
                  "description": "The type of Cloudlet the rule is for. For example, the string for Application Load Balancer is `albMatchRule`.\n",
                  "enum": [
                    "albMatchRule"
                  ]
                },
                "akaRuleId": {
                  "type": "string",
                  "description": "The rule's unique identifier within the policy version.\n",
                  "readOnly": true
                },
                "disabled": {
                  "type": "boolean",
                  "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                  "default": false
                },
                "start": {
                  "type": "integer",
                  "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                  "default": 0,
                  "minimum": 0
                },
                "end": {
                  "type": "integer",
                  "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                  "default": 0,
                  "minimum": 0
                },
                "matchURL": {
                  "type": "string",
                  "description": "The URL the Cloudlet uses to match the incoming request.\n",
                  "nullable": true,
                  "maxLength": 8192
                },
                "matches": {
                  "type": "array",
                  "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                  "nullable": true,
                  "items": {
                    "type": "object",
                    "description": "The match rule criteria.\n",
                    "additionalProperties": false,
                    "oneOf": [
                      {
                        "required": [
                          "matchType",
                          "matchValue"
                        ],
                        "title": "matchType and matchValue required"
                      },
                      {
                        "required": [
                          "matchType",
                          "objectMatchValue"
                        ],
                        "title": "matchType and objectMatchValue required"
                      }
                    ],
                    "properties": {
                      "caseSensitive": {
                        "type": "boolean",
                        "description": "If `true`, the match is case sensitive.\n"
                      },
                      "checkIPs": {
                        "type": "string",
                        "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                        "nullable": true,
                        "enum": [
                          "CONNECTING_IP",
                          "XFF_HEADERS",
                          "CONNECTING_IP XFF_HEADERS"
                        ]
                      },
                      "matchOperator": {
                        "type": "string",
                        "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                        "enum": [
                          "contains",
                          "exists",
                          "equals"
                        ]
                      },
                      "matchType": {
                        "type": "string",
                        "description": "The type of match used.\n",
                        "enum": [
                          "header",
                          "hostname",
                          "path",
                          "extension",
                          "query",
                          "regex",
                          "cookie",
                          "deviceCharacteristics",
                          "clientip",
                          "continent",
                          "countrycode",
                          "regioncode",
                          "protocol",
                          "method",
                          "proxy"
                        ]
                      },
                      "matchValue": {
                        "type": "string",
                        "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                        "minLength": 1,
                        "maxLength": 8192
                      },
                      "negate": {
                        "type": "boolean",
                        "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                      },
                      "objectMatchValue": {
                        "type": "object",
                        "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                        "title": "Object match value",
                        "oneOf": [
                          {
                            "type": "object",
                            "description": "Use the `simple` array option when adding an array of string-based values.\n",
                            "title": "Simple",
                            "additionalProperties": false,
                            "required": [
                              "type",
                              "value"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "The object type, which is `simple`.\n",
                                "enum": [
                                  "simple"
                                ]
                              },
                              "value": {
                                "type": "array",
                                "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                "nullable": true,
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          {
                            "type": "object",
                            "description": "Use this for more complex match criteria.\n",
                            "title": "Object",
                            "additionalProperties": false,
                            "required": [
                              "name",
                              "type"
                            ],
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                "minLength": 1,
                                "maxLength": 8192
                              },
                              "type": {
                                "type": "string",
                                "description": "The array type, which is `object`.\n",
                                "enum": [
                                  "object"
                                ]
                              },
                              "options": {
                                "type": "object",
                                "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                "additionalProperties": false,
                                "properties": {
                                  "value": {
                                    "type": "array",
                                    "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                    "nullable": true,
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "valueCaseSensitive": {
                                    "type": "boolean",
                                    "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n"
                                  },
                                  "valueEscaped": {
                                    "type": "boolean",
                                    "description": "Set to `true` if the entries for `value` includes escaped characters.\n"
                                  },
                                  "valueHasWildcard": {
                                    "type": "boolean",
                                    "description": "Set to `true` if the entries for `value` includes wildcards.\n"
                                  }
                                }
                              },
                              "nameCaseSensitive": {
                                "type": "boolean",
                                "description": "When set to `true`, the `name` match is case-sensitive.\n"
                              },
                              "nameHasWildcard": {
                                "type": "boolean",
                                "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                },
                "matchesAlways": {
                  "type": "boolean",
                  "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n"
                },
                "forwardSettings": {
                  "type": "object",
                  "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                  "additionalProperties": false,
                  "properties": {
                    "pathAndQS": {
                      "type": "string",
                      "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                      "minLength": 1,
                      "maxLength": 8192
                    },
                    "useIncomingQueryString": {
                      "type": "boolean",
                      "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n"
                    },
                    "originId": {
                      "type": "string",
                      "description": "The conditional origin's unique identifier.\n",
                      "nullable": true,
                      "maxLength": 8192
                    }
                  }
                }
              }
            },
            {
              "additionalProperties": false,
              "description": "Contains match rule information for API Prioritization.\n",
              "properties": {
                "akaRuleId": {
                  "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                  "readOnly": true,
                  "type": "string"
                },
                "disabled": {
                  "default": false,
                  "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                  "type": "boolean"
                },
                "end": {
                  "default": 0,
                  "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                  "minimum": 0,
                  "type": "integer"
                },
                "id": {
                  "description": "__Read-only__ Akamai internal use only.\n",
                  "nullable": true,
                  "readOnly": true,
                  "type": "integer"
                },
                "location": {
                  "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                  "readOnly": true,
                  "type": "string"
                },
                "matchURL": {
                  "description": "The URL the Cloudlet uses to match the incoming request.\n",
                  "maxLength": 8192,
                  "nullable": true,
                  "type": "string"
                },
                "matches": {
                  "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                  "items": {
                    "additionalProperties": false,
                    "description": "The match rule criteria.\n",
                    "oneOf": [
                      {
                        "required": [
                          "matchType",
                          "matchValue"
                        ],
                        "title": "matchType and matchValue required"
                      },
                      {
                        "required": [
                          "matchType",
                          "objectMatchValue"
                        ],
                        "title": "matchType and objectMatchValue required"
                      }
                    ],
                    "properties": {
                      "caseSensitive": {
                        "description": "If `true`, the match is case sensitive.\n",
                        "type": "boolean"
                      },
                      "checkIPs": {
                        "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                        "enum": [
                          "CONNECTING_IP",
                          "XFF_HEADERS",
                          "CONNECTING_IP XFF_HEADERS"
                        ],
                        "type": "string"
                      },
                      "matchOperator": {
                        "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                        "enum": [
                          "contains",
                          "exists",
                          "equals"
                        ],
                        "type": "string"
                      },
                      "matchType": {
                        "description": "The type of match used.\n",
                        "enum": [
                          "hostname",
                          "path",
                          "extension",
                          "query",
                          "cookie",
                          "deviceCharacteristics",
                          "clientip",
                          "continent",
                          "countrycode",
                          "regioncode",
                          "protocol",
                          "header",
                          "method",
                          "proxy"
                        ],
                        "type": "string"
                      },
                      "matchValue": {
                        "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                        "maxLength": 8192,
                        "minLength": 1,
                        "type": "string"
                      },
                      "negate": {
                        "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                        "type": "boolean"
                      },
                      "objectMatchValue": {
                        "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                        "oneOf": [
                          {
                            "additionalProperties": false,
                            "description": "Use the `simple` array option when adding an array of string-based values.\n",
                            "properties": {
                              "type": {
                                "description": "The object type, which is `simple`.\n",
                                "enum": [
                                  "simple"
                                ],
                                "type": "string"
                              },
                              "value": {
                                "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                "items": {
                                  "type": "string"
                                },
                                "nullable": true,
                                "type": "array"
                              }
                            },
                            "required": [
                              "type",
                              "value"
                            ],
                            "title": "Simple",
                            "type": "object"
                          },
                          {
                            "additionalProperties": false,
                            "description": "Use this for more complex match criteria.\n",
                            "properties": {
                              "name": {
                                "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                "maxLength": 8192,
                                "minLength": 1,
                                "type": "string"
                              },
                              "nameCaseSensitive": {
                                "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                "type": "boolean"
                              },
                              "nameHasWildcard": {
                                "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                "type": "boolean"
                              },
                              "options": {
                                "additionalProperties": false,
                                "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                "properties": {
                                  "value": {
                                    "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                    "items": {
                                      "type": "string"
                                    },
                                    "nullable": true,
                                    "type": "array"
                                  },
                                  "valueCaseSensitive": {
                                    "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                    "type": "boolean"
                                  },
                                  "valueEscaped": {
                                    "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                    "type": "boolean"
                                  },
                                  "valueHasWildcard": {
                                    "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                    "type": "boolean"
                                  }
                                },
                                "type": "object"
                              },
                              "type": {
                                "description": "The array type, which is `object`.\n",
                                "enum": [
                                  "object"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "type"
                            ],
                            "title": "Object",
                            "type": "object"
                          }
                        ],
                        "title": "Object match value",
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "nullable": true,
                  "type": "array"
                },
                "name": {
                  "description": "The name of the rule.\n",
                  "maxLength": 8192,
                  "nullable": true,
                  "type": "string"
                },
                "passThroughPercent": {
                  "description": "The percentage of requests that pass through to the origin, with `100` indicating the request always passes through to the origin. For Visitor Prioritization, a value of -1 sends everyone to the waiting room.\n",
                  "maximum": 100,
                  "minimum": -1,
                  "type": "number"
                },
                "start": {
                  "default": 0,
                  "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                  "minimum": 0,
                  "type": "integer"
                },
                "type": {
                  "description": "The type of Cloudlet the rule is for. For example, the string for API Prioritization is `apMatchRule`.\n",
                  "enum": [
                    "apMatchRule"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "type",
                "passThroughPercent"
              ],
              "title": "API Prioritization",
              "type": "object",
              "x-akamai": {
                "file-path": "schemas/match-rule-ap.yaml"
              }
            },
            {
              "additionalProperties": false,
              "description": "Contains match rule information for Audience Segmentation.\n",
              "properties": {
                "akaRuleId": {
                  "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                  "readOnly": true,
                  "type": "string"
                },
                "disabled": {
                  "default": false,
                  "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                  "type": "boolean"
                },
                "end": {
                  "default": 0,
                  "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                  "minimum": 0,
                  "type": "integer"
                },
                "forwardSettings": {
                  "additionalProperties": false,
                  "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                  "properties": {
                    "originId": {
                      "description": "The conditional origin's unique identifier.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "pathAndQS": {
                      "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                      "maxLength": 8192,
                      "minLength": 1,
                      "type": "string"
                    },
                    "useIncomingQueryString": {
                      "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                "id": {
                  "description": "__Read-only__ Akamai internal use only.\n",
                  "nullable": true,
                  "readOnly": true,
                  "type": "integer"
                },
                "location": {
                  "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                  "readOnly": true,
                  "type": "string"
                },
                "matchURL": {
                  "description": "The URL the Cloudlet uses to match the incoming request.\n",
                  "maxLength": 8192,
                  "nullable": true,
                  "type": "string"
                },
                "matches": {
                  "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                  "items": {
                    "additionalProperties": false,
                    "description": "The match rule criteria.\n",
                    "oneOf": [
                      {
                        "required": [
                          "matchType",
                          "matchValue"
                        ],
                        "title": "matchType and matchValue required"
                      },
                      {
                        "required": [
                          "matchType",
                          "objectMatchValue"
                        ],
                        "title": "matchType and objectMatchValue required"
                      }
                    ],
                    "properties": {
                      "caseSensitive": {
                        "description": "If `true`, the match is case sensitive.\n",
                        "type": "boolean"
                      },
                      "checkIPs": {
                        "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                        "enum": [
                          "CONNECTING_IP",
                          "XFF_HEADERS",
                          "CONNECTING_IP XFF_HEADERS"
                        ],
                        "type": "string"
                      },
                      "matchOperator": {
                        "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                        "enum": [
                          "contains",
                          "exists",
                          "equals"
                        ],
                        "type": "string"
                      },
                      "matchType": {
                        "description": "The type of match used.\n",
                        "enum": [
                          "header",
                          "hostname",
                          "path",
                          "extension",
                          "query",
                          "range",
                          "regex",
                          "cookie",
                          "deviceCharacteristics",
                          "clientip",
                          "continent",
                          "countrycode",
                          "regioncode",
                          "protocol",
                          "method",
                          "proxy"
                        ],
                        "type": "string"
                      },
                      "matchValue": {
                        "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                        "maxLength": 8192,
                        "minLength": 1,
                        "type": "string"
                      },
                      "negate": {
                        "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                        "type": "boolean"
                      },
                      "objectMatchValue": {
                        "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.\n",
                        "oneOf": [
                          {
                            "additionalProperties": false,
                            "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.\n",
                            "properties": {
                              "type": {
                                "description": "The object type, which is `range`.\n",
                                "enum": [
                                  "range"
                                ],
                                "type": "string"
                              },
                              "value": {
                                "description": "An inclusive range comprised of two numbers to match on.\n",
                                "items": {
                                  "type": "integer"
                                },
                                "nullable": true,
                                "type": "array"
                              }
                            },
                            "required": [
                              "type",
                              "value"
                            ],
                            "title": "Range",
                            "type": "object"
                          },
                          {
                            "additionalProperties": false,
                            "description": "Use the `simple` array option when adding an array of string-based values.\n",
                            "properties": {
                              "type": {
                                "description": "The object type, which is `simple`.\n",
                                "enum": [
                                  "simple"
                                ],
                                "type": "string"
                              },
                              "value": {
                                "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                "items": {
                                  "type": "string"
                                },
                                "nullable": true,
                                "type": "array"
                              }
                            },
                            "required": [
                              "type",
                              "value"
                            ],
                            "title": "Simple",
                            "type": "object"
                          },
                          {
                            "additionalProperties": false,
                            "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                            "properties": {
                              "name": {
                                "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                "maxLength": 8192,
                                "minLength": 1,
                                "type": "string"
                              },
                              "nameCaseSensitive": {
                                "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                "type": "boolean"
                              },
                              "nameHasWildcard": {
                                "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                "type": "boolean"
                              },
                              "options": {
                                "additionalProperties": false,
                                "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                "properties": {
                                  "value": {
                                    "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                    "items": {
                                      "type": "string"
                                    },
                                    "nullable": true,
                                    "type": "array"
                                  },
                                  "valueCaseSensitive": {
                                    "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                    "type": "boolean"
                                  },
                                  "valueEscaped": {
                                    "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                    "type": "boolean"
                                  },
                                  "valueHasWildcard": {
                                    "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                    "type": "boolean"
                                  }
                                },
                                "type": "object"
                              },
                              "type": {
                                "description": "The array type, which is `object`.\n",
                                "enum": [
                                  "object"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "type"
                            ],
                            "title": "Object",
                            "type": "object"
                          }
                        ],
                        "title": "Object match value",
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "nullable": true,
                  "type": "array"
                },
                "name": {
                  "description": "The name of the rule.\n",
                  "maxLength": 8192,
                  "nullable": true,
                  "type": "string"
                },
                "start": {
                  "default": 0,
                  "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                  "minimum": 0,
                  "type": "integer"
                },
                "type": {
                  "description": "The type of Cloudlet the rule is for. For example, the string for Audience Segmentation is `asMatchRule`.\n",
                  "enum": [
                    "asMatchRule"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "type"
              ],
              "title": "Audience Segmentation",
              "type": "object",
              "x-akamai": {
                "file-path": "schemas/match-rule-as.yaml"
              }
            },
            {
              "additionalProperties": false,
              "description": "Contains match rule information for Phased Release.\n",
              "properties": {
                "akaRuleId": {
                  "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                  "readOnly": true,
                  "type": "string"
                },
                "disabled": {
                  "default": false,
                  "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                  "type": "boolean"
                },
                "end": {
                  "default": 0,
                  "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                  "minimum": 0,
                  "type": "integer"
                },
                "forwardSettings": {
                  "additionalProperties": false,
                  "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, and `percent`.\n",
                  "properties": {
                    "originId": {
                      "description": "The conditional origin's unique identifier.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "percent": {
                      "description": "The percentage of visitors directed to a different origin.\n",
                      "maximum": 100,
                      "minimum": 0,
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "id": {
                  "description": "__Read-only__ Akamai internal use only.\n",
                  "nullable": true,
                  "readOnly": true,
                  "type": "integer"
                },
                "location": {
                  "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                  "readOnly": true,
                  "type": "string"
                },
                "matchURL": {
                  "description": "The URL the Cloudlet uses to match the incoming request.\n",
                  "maxLength": 8192,
                  "nullable": true,
                  "type": "string"
                },
                "matches": {
                  "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                  "items": {
                    "additionalProperties": false,
                    "description": "The match rule criteria.\n",
                    "oneOf": [
                      {
                        "required": [
                          "matchType",
                          "matchValue"
                        ],
                        "title": "matchType and matchValue required"
                      },
                      {
                        "required": [
                          "matchType",
                          "objectMatchValue"
                        ],
                        "title": "matchType and objectMatchValue required"
                      }
                    ],
                    "properties": {
                      "caseSensitive": {
                        "description": "If `true`, the match is case sensitive.\n",
                        "type": "boolean"
                      },
                      "checkIPs": {
                        "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                        "enum": [
                          "CONNECTING_IP",
                          "XFF_HEADERS",
                          "CONNECTING_IP XFF_HEADERS"
                        ],
                        "nullable": true,
                        "type": "string"
                      },
                      "matchOperator": {
                        "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                        "enum": [
                          "contains",
                          "exists",
                          "equals"
                        ],
                        "type": "string"
                      },
                      "matchType": {
                        "description": "The type of match used.\n",
                        "enum": [
                          "header",
                          "hostname",
                          "path",
                          "extension",
                          "query",
                          "cookie",
                          "deviceCharacteristics",
                          "clientip",
                          "continent",
                          "countrycode",
                          "regioncode",
                          "protocol",
                          "method",
                          "proxy"
                        ],
                        "type": "string"
                      },
                      "matchValue": {
                        "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                        "maxLength": 8192,
                        "minLength": 1,
                        "type": "string"
                      },
                      "negate": {
                        "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                        "type": "boolean"
                      },
                      "objectMatchValue": {
                        "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                        "oneOf": [
                          {
                            "additionalProperties": false,
                            "description": "Use the `simple` array option when adding an array of string-based values.\n",
                            "properties": {
                              "type": {
                                "description": "The object type, which is `simple`.\n",
                                "enum": [
                                  "simple"
                                ],
                                "type": "string"
                              },
                              "value": {
                                "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                "items": {
                                  "type": "string"
                                },
                                "nullable": true,
                                "type": "array"
                              }
                            },
                            "required": [
                              "type",
                              "value"
                            ],
                            "title": "Simple",
                            "type": "object"
                          },
                          {
                            "additionalProperties": false,
                            "description": "Use this for more complex match criteria.\n",
                            "properties": {
                              "name": {
                                "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                "maxLength": 8192,
                                "minLength": 1,
                                "type": "string"
                              },
                              "nameCaseSensitive": {
                                "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                "type": "boolean"
                              },
                              "nameHasWildcard": {
                                "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                "type": "boolean"
                              },
                              "options": {
                                "additionalProperties": false,
                                "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                "properties": {
                                  "value": {
                                    "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                    "items": {
                                      "type": "string"
                                    },
                                    "nullable": true,
                                    "type": "array"
                                  },
                                  "valueCaseSensitive": {
                                    "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                    "type": "boolean"
                                  },
                                  "valueEscaped": {
                                    "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                    "type": "boolean"
                                  },
                                  "valueHasWildcard": {
                                    "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                    "type": "boolean"
                                  }
                                },
                                "type": "object"
                              },
                              "type": {
                                "description": "The array type, which is `object`.\n",
                                "enum": [
                                  "object"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "type"
                            ],
                            "title": "Object",
                            "type": "object"
                          }
                        ],
                        "title": "Object match value",
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "nullable": true,
                  "type": "array"
                },
                "matchesAlways": {
                  "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n",
                  "type": "boolean"
                },
                "name": {
                  "description": "The name of the rule.\n",
                  "maxLength": 8192,
                  "nullable": true,
                  "type": "string"
                },
                "start": {
                  "default": 0,
                  "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                  "minimum": 0,
                  "type": "integer"
                },
                "type": {
                  "description": "The type of Cloudlet the rule is for. For example, the string for Phased Release is `cdMatchRule`.\n",
                  "enum": [
                    "cdMatchRule"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "type"
              ],
              "title": "Phased Release",
              "type": "object",
              "x-akamai": {
                "file-path": "schemas/match-rule-cd.yaml"
              }
            },
            {
              "additionalProperties": false,
              "description": "Contains match rule information for Edge Redirector.\n",
              "properties": {
                "akaRuleId": {
                  "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                  "readOnly": true,
                  "type": "string"
                },
                "disabled": {
                  "default": false,
                  "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                  "type": "boolean"
                },
                "end": {
                  "default": 0,
                  "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                  "minimum": 0,
                  "type": "integer"
                },
                "id": {
                  "description": "__Read-only__ Akamai internal use only.\n",
                  "nullable": true,
                  "readOnly": true,
                  "type": "integer"
                },
                "location": {
                  "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                  "readOnly": true,
                  "type": "string"
                },
                "matchURL": {
                  "description": "The URL the Cloudlet uses to match the incoming request.\n",
                  "maxLength": 8192,
                  "nullable": true,
                  "type": "string"
                },
                "matches": {
                  "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                  "items": {
                    "additionalProperties": false,
                    "description": "The match rule criteria.\n",
                    "oneOf": [
                      {
                        "required": [
                          "matchType",
                          "matchValue"
                        ],
                        "title": "matchType and matchValue required"
                      },
                      {
                        "required": [
                          "matchType",
                          "objectMatchValue"
                        ],
                        "title": "matchType and objectMatchValue required"
                      }
                    ],
                    "properties": {
                      "caseSensitive": {
                        "description": "If `true`, the match is case sensitive.\n",
                        "type": "boolean"
                      },
                      "checkIPs": {
                        "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                        "enum": [
                          "CONNECTING_IP",
                          "XFF_HEADERS",
                          "CONNECTING_IP XFF_HEADERS"
                        ],
                        "nullable": true,
                        "type": "string"
                      },
                      "matchOperator": {
                        "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                        "enum": [
                          "contains",
                          "exists",
                          "equals"
                        ],
                        "type": "string"
                      },
                      "matchType": {
                        "description": "The type of match used.\n",
                        "enum": [
                          "header",
                          "hostname",
                          "path",
                          "extension",
                          "query",
                          "regex",
                          "cookie",
                          "deviceCharacteristics",
                          "clientip",
                          "continent",
                          "countrycode",
                          "regioncode",
                          "protocol",
                          "method",
                          "proxy"
                        ],
                        "type": "string"
                      },
                      "matchValue": {
                        "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                        "maxLength": 8192,
                        "minLength": 1,
                        "type": "string"
                      },
                      "negate": {
                        "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                        "type": "boolean"
                      },
                      "objectMatchValue": {
                        "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                        "oneOf": [
                          {
                            "additionalProperties": false,
                            "description": "Use the `simple` array option when adding an array of string-based values.\n",
                            "properties": {
                              "type": {
                                "description": "The object type, which is `simple`.\n",
                                "enum": [
                                  "simple"
                                ],
                                "type": "string"
                              },
                              "value": {
                                "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                "items": {
                                  "type": "string"
                                },
                                "nullable": true,
                                "type": "array"
                              }
                            },
                            "required": [
                              "type",
                              "value"
                            ],
                            "title": "Simple",
                            "type": "object"
                          },
                          {
                            "additionalProperties": false,
                            "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                            "properties": {
                              "name": {
                                "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                "maxLength": 8192,
                                "minLength": 1,
                                "type": "string"
                              },
                              "nameCaseSensitive": {
                                "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                "type": "boolean"
                              },
                              "nameHasWildcard": {
                                "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                "type": "boolean"
                              },
                              "options": {
                                "additionalProperties": false,
                                "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                "properties": {
                                  "value": {
                                    "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                    "items": {
                                      "type": "string"
                                    },
                                    "nullable": true,
                                    "type": "array"
                                  },
                                  "valueCaseSensitive": {
                                    "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                    "type": "boolean"
                                  },
                                  "valueEscaped": {
                                    "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                    "type": "boolean"
                                  },
                                  "valueHasWildcard": {
                                    "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                    "type": "boolean"
                                  }
                                },
                                "type": "object"
                              },
                              "type": {
                                "description": "The array type, which is `object`.\n",
                                "enum": [
                                  "object"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "type"
                            ],
                            "title": "Object",
                            "type": "object"
                          }
                        ],
                        "title": "Object match value",
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "nullable": true,
                  "type": "array"
                },
                "matchesAlways": {
                  "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n",
                  "type": "boolean"
                },
                "name": {
                  "description": "The name of the rule.\n",
                  "maxLength": 8192,
                  "nullable": true,
                  "type": "string"
                },
                "redirectURL": {
                  "description": "The URL Edge Redirector redirects the request to. If using `useRelativeUrl`, you can enter a path for the value. If `useRelativeUrl` is not used or set to `none`, then the `redirectUrl` should be a fully qualified URL.\n",
                  "maxLength": 8192,
                  "minLength": 1,
                  "type": "string"
                },
                "start": {
                  "default": 0,
                  "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                  "minimum": 0,
                  "type": "integer"
                },
                "statusCode": {
                  "description": "The HTTP response redirect type status code: `301` for permanent redirect, `302` for temporary redirect, `303` for temporary using GET, `307` for temporary retain method, or `308` for permanent retain method.\n",
                  "enum": [
                    301,
                    302,
                    303,
                    307,
                    308
                  ],
                  "type": "integer"
                },
                "type": {
                  "description": "The type of Cloudlet the rule is for. For example, the string for Edge Redirector is `erMatchRule`.\n",
                  "enum": [
                    "erMatchRule"
                  ],
                  "type": "string"
                },
                "useIncomingQueryString": {
                  "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n",
                  "type": "boolean"
                },
                "useIncomingSchemeAndHost": {
                  "description": "If set to `true`, the Cloudlet copies both the scheme and the hostname from the incoming request to use in the redirect URL.\n",
                  "type": "boolean"
                },
                "useRelativeUrl": {
                  "description": "If set to `relative_url`, takes the path entered for the `redirectUrl` and sets it in the response’s `Location` header. The client browser receiving the request decides which protocol and hostname to use. If set to `copy_scheme_hostname`, it creates an absolute path by taking the protocol and hostname from the incoming request and combining them with path information entered for the `redirectUrl`. This absolute path is set in the response’s `Location` header. If you don't include `useRelativeUrl`, or if you set it to `none`, then specify the `redirectUrl` as a fully qualified URL.\n",
                  "enum": [
                    "relative_url",
                    "copy_scheme_hostname",
                    "none"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "type",
                "redirectURL",
                "statusCode"
              ],
              "title": "Edge Redirector",
              "type": "object",
              "x-akamai": {
                "file-path": "schemas/match-rule-er.yaml"
              }
            },
            {
              "additionalProperties": false,
              "description": "Contains match rule information for Forward Rewrite.\n",
              "properties": {
                "akaRuleId": {
                  "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                  "readOnly": true,
                  "type": "string"
                },
                "disabled": {
                  "default": false,
                  "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                  "type": "boolean"
                },
                "end": {
                  "default": 0,
                  "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                  "minimum": 0,
                  "type": "integer"
                },
                "forwardSettings": {
                  "additionalProperties": false,
                  "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                  "properties": {
                    "originId": {
                      "description": "The conditional origin's unique identifier.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "pathAndQS": {
                      "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                      "maxLength": 8192,
                      "minLength": 1,
                      "type": "string"
                    },
                    "useIncomingQueryString": {
                      "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                "id": {
                  "description": "__Read-only__ Akamai internal use only.\n",
                  "nullable": true,
                  "readOnly": true,
                  "type": "integer"
                },
                "location": {
                  "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                  "readOnly": true,
                  "type": "string"
                },
                "matchURL": {
                  "description": "The URL the Cloudlet uses to match the incoming request.\n",
                  "maxLength": 8192,
                  "nullable": true,
                  "type": "string"
                },
                "matches": {
                  "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                  "items": {
                    "additionalProperties": false,
                    "description": "The match rule criteria.\n",
                    "oneOf": [
                      {
                        "required": [
                          "matchType",
                          "matchValue"
                        ],
                        "title": "matchType and matchValue required"
                      },
                      {
                        "required": [
                          "matchType",
                          "objectMatchValue"
                        ],
                        "title": "matchType and objectMatchValue required"
                      }
                    ],
                    "properties": {
                      "caseSensitive": {
                        "description": "If `true`, the match is case sensitive.\n",
                        "type": "boolean"
                      },
                      "checkIPs": {
                        "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                        "enum": [
                          "CONNECTING_IP",
                          "XFF_HEADERS",
                          "CONNECTING_IP XFF_HEADERS"
                        ],
                        "type": "string"
                      },
                      "matchOperator": {
                        "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                        "enum": [
                          "contains",
                          "exists",
                          "equals"
                        ],
                        "type": "string"
                      },
                      "matchType": {
                        "description": "The type of match used.\n",
                        "enum": [
                          "header",
                          "hostname",
                          "path",
                          "extension",
                          "query",
                          "regex",
                          "cookie",
                          "deviceCharacteristics",
                          "clientip",
                          "continent",
                          "countrycode",
                          "regioncode",
                          "protocol",
                          "method",
                          "proxy"
                        ],
                        "type": "string"
                      },
                      "matchValue": {
                        "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                        "maxLength": 8192,
                        "minLength": 1,
                        "type": "string"
                      },
                      "negate": {
                        "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                        "type": "boolean"
                      },
                      "objectMatchValue": {
                        "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                        "oneOf": [
                          {
                            "additionalProperties": false,
                            "description": "Use the `simple` array option when adding an array of string-based values.\n",
                            "properties": {
                              "type": {
                                "description": "The object type, which is `simple`.\n",
                                "enum": [
                                  "simple"
                                ],
                                "type": "string"
                              },
                              "value": {
                                "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                "items": {
                                  "type": "string"
                                },
                                "nullable": true,
                                "type": "array"
                              }
                            },
                            "required": [
                              "type",
                              "value"
                            ],
                            "title": "Simple",
                            "type": "object"
                          },
                          {
                            "additionalProperties": false,
                            "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                            "properties": {
                              "name": {
                                "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                "maxLength": 8192,
                                "minLength": 1,
                                "type": "string"
                              },
                              "nameCaseSensitive": {
                                "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                "type": "boolean"
                              },
                              "nameHasWildcard": {
                                "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                "type": "boolean"
                              },
                              "options": {
                                "additionalProperties": false,
                                "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                "properties": {
                                  "value": {
                                    "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                    "items": {
                                      "type": "string"
                                    },
                                    "nullable": true,
                                    "type": "array"
                                  },
                                  "valueCaseSensitive": {
                                    "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                    "type": "boolean"
                                  },
                                  "valueEscaped": {
                                    "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                    "type": "boolean"
                                  },
                                  "valueHasWildcard": {
                                    "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                    "type": "boolean"
                                  }
                                },
                                "type": "object"
                              },
                              "type": {
                                "description": "The array type, which is `object`.\n",
                                "enum": [
                                  "object"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "type"
                            ],
                            "title": "Object",
                            "type": "object"
                          }
                        ],
                        "title": "Object match value",
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "nullable": true,
                  "type": "array"
                },
                "name": {
                  "description": "The name of the rule.\n",
                  "maxLength": 8192,
                  "nullable": true,
                  "type": "string"
                },
                "start": {
                  "default": 0,
                  "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                  "minimum": 0,
                  "type": "integer"
                },
                "type": {
                  "description": "The type of Cloudlet the rule is for. For example, the string for Forward Rewrite is `frMatchRule`.\n",
                  "enum": [
                    "frMatchRule"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "type",
                "forwardSettings"
              ],
              "title": "Forward Rewrite",
              "type": "object",
              "x-akamai": {
                "file-path": "schemas/match-rule-fr.yaml"
              }
            },
            {
              "additionalProperties": false,
              "description": "Contains match rule information for Request Control.\n",
              "properties": {
                "akaRuleId": {
                  "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                  "readOnly": true,
                  "type": "string"
                },
                "allowDeny": {
                  "description": "If set to `allow`, the request is sent to origin when all conditions are true. If `deny`, the request is denied when all conditions are true. If `denybranded`, the request is denied and rerouted according to the configuration of the [Request Control behavior](https://techdocs.akamai.com/property-mgr/reference/latest-request-control).\n",
                  "enum": [
                    "allow",
                    "deny",
                    "denybranded"
                  ],
                  "type": "string"
                },
                "disabled": {
                  "default": false,
                  "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                  "type": "boolean"
                },
                "end": {
                  "default": 0,
                  "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                  "minimum": 0,
                  "type": "integer"
                },
                "id": {
                  "description": "__Read-only__ Akamai internal use only.\n",
                  "nullable": true,
                  "readOnly": true,
                  "type": "integer"
                },
                "location": {
                  "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                  "readOnly": true,
                  "type": "string"
                },
                "matches": {
                  "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                  "items": {
                    "additionalProperties": false,
                    "description": "The match rule criteria.\n",
                    "oneOf": [
                      {
                        "required": [
                          "matchType",
                          "matchValue"
                        ],
                        "title": "matchType and matchValue required"
                      },
                      {
                        "required": [
                          "matchType",
                          "objectMatchValue"
                        ],
                        "title": "matchType and objectMatchValue required"
                      }
                    ],
                    "properties": {
                      "caseSensitive": {
                        "description": "If `true`, the match is case sensitive.\n",
                        "type": "boolean"
                      },
                      "checkIPs": {
                        "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                        "enum": [
                          "CONNECTING_IP",
                          "XFF_HEADERS",
                          "CONNECTING_IP XFF_HEADERS"
                        ],
                        "type": "string"
                      },
                      "matchOperator": {
                        "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                        "enum": [
                          "contains",
                          "exists",
                          "equals"
                        ],
                        "type": "string"
                      },
                      "matchType": {
                        "description": "The type of match used.\n",
                        "enum": [
                          "clientip",
                          "continent",
                          "cookie",
                          "countrycode",
                          "deviceCharacteristics",
                          "extension",
                          "header",
                          "hostname",
                          "method",
                          "path",
                          "protocol",
                          "proxy",
                          "query",
                          "regioncode"
                        ],
                        "type": "string"
                      },
                      "matchValue": {
                        "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                        "maxLength": 8192,
                        "minLength": 1,
                        "type": "string"
                      },
                      "negate": {
                        "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                        "type": "boolean"
                      },
                      "objectMatchValue": {
                        "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                        "oneOf": [
                          {
                            "additionalProperties": false,
                            "description": "Use the `simple` array option when adding an array of string-based values.\n",
                            "properties": {
                              "type": {
                                "description": "The object type, which is `simple`.\n",
                                "enum": [
                                  "simple"
                                ],
                                "type": "string"
                              },
                              "value": {
                                "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                "items": {
                                  "type": "string"
                                },
                                "nullable": true,
                                "type": "array"
                              }
                            },
                            "required": [
                              "type",
                              "value"
                            ],
                            "title": "Simple",
                            "type": "object"
                          },
                          {
                            "additionalProperties": false,
                            "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                            "properties": {
                              "name": {
                                "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                "maxLength": 8192,
                                "minLength": 1,
                                "type": "string"
                              },
                              "nameCaseSensitive": {
                                "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                "type": "boolean"
                              },
                              "nameHasWildcard": {
                                "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                "type": "boolean"
                              },
                              "options": {
                                "additionalProperties": false,
                                "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                "properties": {
                                  "value": {
                                    "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                    "items": {
                                      "type": "string"
                                    },
                                    "nullable": true,
                                    "type": "array"
                                  },
                                  "valueCaseSensitive": {
                                    "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                    "type": "boolean"
                                  },
                                  "valueEscaped": {
                                    "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                    "type": "boolean"
                                  },
                                  "valueHasWildcard": {
                                    "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                    "type": "boolean"
                                  }
                                },
                                "type": "object"
                              },
                              "type": {
                                "description": "The array type, which is `object`.\n",
                                "enum": [
                                  "object"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "type"
                            ],
                            "title": "Object",
                            "type": "object"
                          }
                        ],
                        "title": "Object match value",
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "nullable": true,
                  "type": "array"
                },
                "matchesAlways": {
                  "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n",
                  "type": "boolean"
                },
                "name": {
                  "description": "The name of the rule.\n",
                  "maxLength": 8192,
                  "nullable": true,
                  "type": "string"
                },
                "start": {
                  "default": 0,
                  "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                  "minimum": 0,
                  "type": "integer"
                },
                "type": {
                  "description": "The type of Cloudlet the rule is for. For example, the string for Request Control is `igMatchRule`.\n",
                  "enum": [
                    "igMatchRule"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "type",
                "allowDeny"
              ],
              "title": "Request Control",
              "type": "object",
              "x-akamai": {
                "file-path": "schemas/match-rule-ig.yaml"
              }
            },
            {
              "type": "object",
              "description": "Contains match rule information for Visitor Prioritization.\n",
              "title": "Visitor Prioritization",
              "additionalProperties": false,
              "required": [
                "type",
                "passThroughPercent"
              ],
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Akamai internal use only.\n",
                  "nullable": true,
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The navigable endpoint used for the object referred to in the operation.\n",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the rule.\n",
                  "nullable": true,
                  "maxLength": 8192
                },
                "type": {
                  "type": "string",
                  "description": "The type of Cloudlet the rule is for. For example, the string for Visitor Prioritization is `vpMatchRule`.\n",
                  "enum": [
                    "vpMatchRule"
                  ]
                },
                "akaRuleId": {
                  "type": "string",
                  "description": "The rule's unique identifier within the policy version.\n",
                  "readOnly": true
                },
                "start": {
                  "type": "integer",
                  "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                  "default": 0,
                  "minimum": 0
                },
                "end": {
                  "type": "integer",
                  "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                  "default": 0,
                  "minimum": 0
                },
                "matches": {
                  "type": "array",
                  "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                  "nullable": true,
                  "items": {
                    "type": "object",
                    "description": "The match rule criteria.\n",
                    "additionalProperties": false,
                    "oneOf": [
                      {
                        "required": [
                          "matchType",
                          "matchValue"
                        ],
                        "title": "matchType and matchValue required"
                      },
                      {
                        "required": [
                          "matchType",
                          "objectMatchValue"
                        ],
                        "title": "matchType and objectMatchValue required"
                      }
                    ],
                    "properties": {
                      "caseSensitive": {
                        "type": "boolean",
                        "description": "If `true`, the match is case sensitive.\n"
                      },
                      "matchValue": {
                        "type": "string",
                        "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                        "minLength": 1,
                        "maxLength": 8192
                      },
                      "negate": {
                        "type": "boolean",
                        "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                      },
                      "matchOperator": {
                        "type": "string",
                        "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                        "enum": [
                          "contains",
                          "exists",
                          "equals"
                        ]
                      },
                      "matchType": {
                        "type": "string",
                        "description": "The type of match used.\n",
                        "enum": [
                          "hostname",
                          "path",
                          "extension",
                          "query",
                          "cookie",
                          "deviceCharacteristics",
                          "clientip",
                          "continent",
                          "countrycode",
                          "regioncode",
                          "protocol",
                          "header",
                          "method",
                          "proxy"
                        ]
                      },
                      "checkIPs": {
                        "type": "string",
                        "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                        "enum": [
                          "CONNECTING_IP",
                          "XFF_HEADERS",
                          "CONNECTING_IP XFF_HEADERS"
                        ]
                      },
                      "objectMatchValue": {
                        "type": "object",
                        "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                        "title": "Object match value",
                        "oneOf": [
                          {
                            "type": "object",
                            "description": "Use the `simple` array option when adding an array of string-based values.\n",
                            "title": "Simple",
                            "additionalProperties": false,
                            "required": [
                              "type",
                              "value"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "The object type, which is `simple`.\n",
                                "enum": [
                                  "simple"
                                ]
                              },
                              "value": {
                                "type": "array",
                                "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                "nullable": true,
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          {
                            "type": "object",
                            "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                            "title": "Object",
                            "additionalProperties": false,
                            "required": [
                              "name",
                              "type"
                            ],
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                "minLength": 1,
                                "maxLength": 8192
                              },
                              "type": {
                                "type": "string",
                                "description": "The array type, which is `object`.\n",
                                "enum": [
                                  "object"
                                ]
                              },
                              "options": {
                                "type": "object",
                                "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                "additionalProperties": false,
                                "properties": {
                                  "value": {
                                    "type": "array",
                                    "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                    "nullable": true,
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "valueHasWildcard": {
                                    "type": "boolean",
                                    "description": "Set to `true` if the entries for `value` includes wildcards.\n"
                                  },
                                  "valueCaseSensitive": {
                                    "type": "boolean",
                                    "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n"
                                  },
                                  "valueEscaped": {
                                    "type": "boolean",
                                    "description": "Set to `true` if the entries for `value` includes escaped characters.\n"
                                  }
                                }
                              },
                              "nameCaseSensitive": {
                                "type": "boolean",
                                "description": "When set to `true`, the `name` match is case-sensitive.\n"
                              },
                              "nameHasWildcard": {
                                "type": "boolean",
                                "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                },
                "disabled": {
                  "type": "boolean",
                  "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                  "default": false
                },
                "passThroughPercent": {
                  "type": "number",
                  "description": "The range `0.000: 99.000` specifies the percentage of requests that pass through to the origin. The value of `100` means the request always passes through to the origin. For Visitor Prioritization, a value of `-1` means send everyone to the waiting room.\n",
                  "minimum": -1,
                  "maximum": 100
                },
                "matchURL": {
                  "type": "string",
                  "description": "The URL the Cloudlet uses to match the incoming request.\n",
                  "nullable": true,
                  "maxLength": 8192
                },
                "useIncomingQueryString": {
                  "type": "boolean",
                  "description": "If set to `true`, the Cloudlet includes the request's query string in the rewritten or forwarded URL.\n"
                }
              }
            }
          ]
        },
        "type": "array",
        "x-akamai": {
          "file-path": "schemas/match-rules.yaml"
        }
      },
      "policy-version": {
        "additionalProperties": false,
        "description": "Returns policy version details.\n",
        "properties": {
          "activations": {
            "description": "List of activations related to the policy version.\n",
            "items": {
              "additionalProperties": false,
              "description": "Returns details of a policy activation.\n",
              "properties": {
                "apiVersion": {
                  "description": "The specific version of this API.\n",
                  "type": "string"
                },
                "network": {
                  "description": "The network, either `STAGING`, `PRODUCTION`, or `prod` as shorthand, on which a load balancing configuration for Application Load Balancer has been activated. Values are case-insensitive in requests.\n",
                  "enum": [
                    "prod",
                    "staging"
                  ],
                  "type": "string"
                },
                "policyInfo": {
                  "type": "object",
                  "description": "Returns details of a policy associated with policy activation.\n",
                  "additionalProperties": false,
                  "required": [
                    "policyId",
                    "name",
                    "version",
                    "status",
                    "statusDetail",
                    "activatedBy",
                    "activationDate"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of the policy.\n"
                    },
                    "version": {
                      "type": "integer",
                      "description": "Version of the policy.\n"
                    },
                    "policyId": {
                      "type": "integer",
                      "description": "ID of the policy.\n"
                    },
                    "status": {
                      "type": "string",
                      "description": "Value representing activation status.\n",
                      "enum": [
                        "INACTIVE",
                        "PENDING",
                        "ACTIVE",
                        "FAILED",
                        "DEACTIVATED"
                      ]
                    },
                    "statusDetail": {
                      "type": "string",
                      "description": "Details of the activation status.\n"
                    },
                    "activatedBy": {
                      "type": "string",
                      "description": "User name who issued the activation.\n",
                      "nullable": true
                    },
                    "activationDate": {
                      "type": "integer",
                      "description": "Date of the activation in milliseconds.\n"
                    }
                  }
                },
                "propertyInfo": {
                  "type": "object",
                  "description": "Returns details of a property associated with policy activation.\n",
                  "additionalProperties": false,
                  "required": [
                    "name",
                    "version",
                    "groupId",
                    "status",
                    "activatedBy",
                    "activationDate",
                    "id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "ID of the property.\n"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the property.\n"
                    },
                    "version": {
                      "type": "integer",
                      "description": "Version of the property.\n"
                    },
                    "groupId": {
                      "type": "integer",
                      "description": "Identifies the group where the property is placed.\n"
                    },
                    "status": {
                      "type": "string",
                      "description": "Value representing activation status.\n",
                      "enum": [
                        "INACTIVE",
                        "PENDING",
                        "ACTIVE",
                        "FAILED",
                        "DEACTIVATED"
                      ]
                    },
                    "activatedBy": {
                      "type": "string",
                      "description": "User name who issued the activation.\n",
                      "nullable": true
                    },
                    "activationDate": {
                      "type": "integer",
                      "description": "Date of the activation in milliseconds.\n"
                    }
                  }
                },
                "serviceVersion": {
                  "description": "__Deprecated__ The build of the software running on the server. The value can be `null`.\n",
                  "nullable": true,
                  "type": "string",
                  "x-akamai": {
                    "status": "DEPRECATED"
                  }
                }
              },
              "required": [
                "network",
                "policyInfo",
                "propertyInfo"
              ],
              "type": "object",
              "x-akamai": {
                "file-path": "schemas/policy-activation.yaml"
              }
            },
            "type": "array"
          },
          "createDate": {
            "description": "Date of the policy version creation in milliseconds.\n",
            "type": "integer"
          },
          "createdBy": {
            "description": "User name who created the policy version.\n",
            "type": "string"
          },
          "deleted": {
            "description": "Flag determining whether the policy version is deleted or not.\n",
            "type": "boolean"
          },
          "description": {
            "description": "Description of the policy version.\n",
            "type": "string"
          },
          "lastModifiedBy": {
            "description": "User name who recently modified the policy version.\n",
            "type": "string"
          },
          "lastModifiedDate": {
            "description": "Date of the recent policy version modification in milliseconds.\n",
            "type": "integer"
          },
          "location": {
            "description": "The navigable endpoint used for the object referred to in the operation.\n",
            "type": "string"
          },
          "matchRuleFormat": {
            "description": "The version of the `matchRules` format.\n",
            "type": "string"
          },
          "matchRules": {
            "description": "A list of Cloudlet-specific match rules for this policy.\n",
            "items": {
              "description": "Contains information about match rules.\n",
              "oneOf": [
                {
                  "type": "object",
                  "description": "Contains match rule information for Application Load Balancer.\n",
                  "title": "Application Load Balancer",
                  "additionalProperties": false,
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Akamai internal use only.\n",
                      "nullable": true,
                      "readOnly": true
                    },
                    "location": {
                      "type": "string",
                      "description": "The navigable endpoint used for the object referred to in the operation.\n",
                      "readOnly": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the rule.\n",
                      "nullable": true,
                      "maxLength": 8192
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of Cloudlet the rule is for. For example, the string for Application Load Balancer is `albMatchRule`.\n",
                      "enum": [
                        "albMatchRule"
                      ]
                    },
                    "akaRuleId": {
                      "type": "string",
                      "description": "The rule's unique identifier within the policy version.\n",
                      "readOnly": true
                    },
                    "disabled": {
                      "type": "boolean",
                      "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                      "default": false
                    },
                    "start": {
                      "type": "integer",
                      "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                      "default": 0,
                      "minimum": 0
                    },
                    "end": {
                      "type": "integer",
                      "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                      "default": 0,
                      "minimum": 0
                    },
                    "matchURL": {
                      "type": "string",
                      "description": "The URL the Cloudlet uses to match the incoming request.\n",
                      "nullable": true,
                      "maxLength": 8192
                    },
                    "matches": {
                      "type": "array",
                      "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                      "nullable": true,
                      "items": {
                        "type": "object",
                        "description": "The match rule criteria.\n",
                        "additionalProperties": false,
                        "oneOf": [
                          {
                            "required": [
                              "matchType",
                              "matchValue"
                            ],
                            "title": "matchType and matchValue required"
                          },
                          {
                            "required": [
                              "matchType",
                              "objectMatchValue"
                            ],
                            "title": "matchType and objectMatchValue required"
                          }
                        ],
                        "properties": {
                          "caseSensitive": {
                            "type": "boolean",
                            "description": "If `true`, the match is case sensitive.\n"
                          },
                          "checkIPs": {
                            "type": "string",
                            "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                            "nullable": true,
                            "enum": [
                              "CONNECTING_IP",
                              "XFF_HEADERS",
                              "CONNECTING_IP XFF_HEADERS"
                            ]
                          },
                          "matchOperator": {
                            "type": "string",
                            "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                            "enum": [
                              "contains",
                              "exists",
                              "equals"
                            ]
                          },
                          "matchType": {
                            "type": "string",
                            "description": "The type of match used.\n",
                            "enum": [
                              "header",
                              "hostname",
                              "path",
                              "extension",
                              "query",
                              "regex",
                              "cookie",
                              "deviceCharacteristics",
                              "clientip",
                              "continent",
                              "countrycode",
                              "regioncode",
                              "protocol",
                              "method",
                              "proxy"
                            ]
                          },
                          "matchValue": {
                            "type": "string",
                            "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                            "minLength": 1,
                            "maxLength": 8192
                          },
                          "negate": {
                            "type": "boolean",
                            "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                          },
                          "objectMatchValue": {
                            "type": "object",
                            "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                            "title": "Object match value",
                            "oneOf": [
                              {
                                "type": "object",
                                "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                "title": "Simple",
                                "additionalProperties": false,
                                "required": [
                                  "type",
                                  "value"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "description": "The object type, which is `simple`.\n",
                                    "enum": [
                                      "simple"
                                    ]
                                  },
                                  "value": {
                                    "type": "array",
                                    "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                    "nullable": true,
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "description": "Use this for more complex match criteria.\n",
                                "title": "Object",
                                "additionalProperties": false,
                                "required": [
                                  "name",
                                  "type"
                                ],
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                    "minLength": 1,
                                    "maxLength": 8192
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "The array type, which is `object`.\n",
                                    "enum": [
                                      "object"
                                    ]
                                  },
                                  "options": {
                                    "type": "object",
                                    "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                    "additionalProperties": false,
                                    "properties": {
                                      "value": {
                                        "type": "array",
                                        "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "nullable": true,
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "valueCaseSensitive": {
                                        "type": "boolean",
                                        "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n"
                                      },
                                      "valueEscaped": {
                                        "type": "boolean",
                                        "description": "Set to `true` if the entries for `value` includes escaped characters.\n"
                                      },
                                      "valueHasWildcard": {
                                        "type": "boolean",
                                        "description": "Set to `true` if the entries for `value` includes wildcards.\n"
                                      }
                                    }
                                  },
                                  "nameCaseSensitive": {
                                    "type": "boolean",
                                    "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                  },
                                  "nameHasWildcard": {
                                    "type": "boolean",
                                    "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    },
                    "matchesAlways": {
                      "type": "boolean",
                      "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n"
                    },
                    "forwardSettings": {
                      "type": "object",
                      "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                      "additionalProperties": false,
                      "properties": {
                        "pathAndQS": {
                          "type": "string",
                          "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                          "minLength": 1,
                          "maxLength": 8192
                        },
                        "useIncomingQueryString": {
                          "type": "boolean",
                          "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n"
                        },
                        "originId": {
                          "type": "string",
                          "description": "The conditional origin's unique identifier.\n",
                          "nullable": true,
                          "maxLength": 8192
                        }
                      }
                    }
                  }
                },
                {
                  "additionalProperties": false,
                  "description": "Contains match rule information for API Prioritization.\n",
                  "properties": {
                    "akaRuleId": {
                      "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "disabled": {
                      "default": false,
                      "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                      "type": "boolean"
                    },
                    "end": {
                      "default": 0,
                      "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "id": {
                      "description": "__Read-only__ Akamai internal use only.\n",
                      "nullable": true,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "location": {
                      "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "matchURL": {
                      "description": "The URL the Cloudlet uses to match the incoming request.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "matches": {
                      "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                      "items": {
                        "additionalProperties": false,
                        "description": "The match rule criteria.\n",
                        "oneOf": [
                          {
                            "required": [
                              "matchType",
                              "matchValue"
                            ],
                            "title": "matchType and matchValue required"
                          },
                          {
                            "required": [
                              "matchType",
                              "objectMatchValue"
                            ],
                            "title": "matchType and objectMatchValue required"
                          }
                        ],
                        "properties": {
                          "caseSensitive": {
                            "description": "If `true`, the match is case sensitive.\n",
                            "type": "boolean"
                          },
                          "checkIPs": {
                            "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                            "enum": [
                              "CONNECTING_IP",
                              "XFF_HEADERS",
                              "CONNECTING_IP XFF_HEADERS"
                            ],
                            "type": "string"
                          },
                          "matchOperator": {
                            "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                            "enum": [
                              "contains",
                              "exists",
                              "equals"
                            ],
                            "type": "string"
                          },
                          "matchType": {
                            "description": "The type of match used.\n",
                            "enum": [
                              "hostname",
                              "path",
                              "extension",
                              "query",
                              "cookie",
                              "deviceCharacteristics",
                              "clientip",
                              "continent",
                              "countrycode",
                              "regioncode",
                              "protocol",
                              "header",
                              "method",
                              "proxy"
                            ],
                            "type": "string"
                          },
                          "matchValue": {
                            "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                            "maxLength": 8192,
                            "minLength": 1,
                            "type": "string"
                          },
                          "negate": {
                            "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                            "type": "boolean"
                          },
                          "objectMatchValue": {
                            "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                            "oneOf": [
                              {
                                "additionalProperties": false,
                                "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                "properties": {
                                  "type": {
                                    "description": "The object type, which is `simple`.\n",
                                    "enum": [
                                      "simple"
                                    ],
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                    "items": {
                                      "type": "string"
                                    },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                },
                                "required": [
                                  "type",
                                  "value"
                                ],
                                "title": "Simple",
                                "type": "object"
                              },
                              {
                                "additionalProperties": false,
                                "description": "Use this for more complex match criteria.\n",
                                "properties": {
                                  "name": {
                                    "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "nameCaseSensitive": {
                                    "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                    "type": "boolean"
                                  },
                                  "nameHasWildcard": {
                                    "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                    "type": "boolean"
                                  },
                                  "options": {
                                    "additionalProperties": false,
                                    "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                    "properties": {
                                      "value": {
                                        "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "items": {
                                          "type": "string"
                                        },
                                        "nullable": true,
                                        "type": "array"
                                      },
                                      "valueCaseSensitive": {
                                        "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                        "type": "boolean"
                                      },
                                      "valueEscaped": {
                                        "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                        "type": "boolean"
                                      },
                                      "valueHasWildcard": {
                                        "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                        "type": "boolean"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": {
                                    "description": "The array type, which is `object`.\n",
                                    "enum": [
                                      "object"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "type"
                                ],
                                "title": "Object",
                                "type": "object"
                              }
                            ],
                            "title": "Object match value",
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "nullable": true,
                      "type": "array"
                    },
                    "name": {
                      "description": "The name of the rule.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "passThroughPercent": {
                      "description": "The percentage of requests that pass through to the origin, with `100` indicating the request always passes through to the origin. For Visitor Prioritization, a value of -1 sends everyone to the waiting room.\n",
                      "maximum": 100,
                      "minimum": -1,
                      "type": "number"
                    },
                    "start": {
                      "default": 0,
                      "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "type": {
                      "description": "The type of Cloudlet the rule is for. For example, the string for API Prioritization is `apMatchRule`.\n",
                      "enum": [
                        "apMatchRule"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "type",
                    "passThroughPercent"
                  ],
                  "title": "API Prioritization",
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/match-rule-ap.yaml"
                  }
                },
                {
                  "additionalProperties": false,
                  "description": "Contains match rule information for Audience Segmentation.\n",
                  "properties": {
                    "akaRuleId": {
                      "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "disabled": {
                      "default": false,
                      "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                      "type": "boolean"
                    },
                    "end": {
                      "default": 0,
                      "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "forwardSettings": {
                      "additionalProperties": false,
                      "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                      "properties": {
                        "originId": {
                          "description": "The conditional origin's unique identifier.\n",
                          "maxLength": 8192,
                          "nullable": true,
                          "type": "string"
                        },
                        "pathAndQS": {
                          "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                          "maxLength": 8192,
                          "minLength": 1,
                          "type": "string"
                        },
                        "useIncomingQueryString": {
                          "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n",
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "id": {
                      "description": "__Read-only__ Akamai internal use only.\n",
                      "nullable": true,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "location": {
                      "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "matchURL": {
                      "description": "The URL the Cloudlet uses to match the incoming request.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "matches": {
                      "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                      "items": {
                        "additionalProperties": false,
                        "description": "The match rule criteria.\n",
                        "oneOf": [
                          {
                            "required": [
                              "matchType",
                              "matchValue"
                            ],
                            "title": "matchType and matchValue required"
                          },
                          {
                            "required": [
                              "matchType",
                              "objectMatchValue"
                            ],
                            "title": "matchType and objectMatchValue required"
                          }
                        ],
                        "properties": {
                          "caseSensitive": {
                            "description": "If `true`, the match is case sensitive.\n",
                            "type": "boolean"
                          },
                          "checkIPs": {
                            "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                            "enum": [
                              "CONNECTING_IP",
                              "XFF_HEADERS",
                              "CONNECTING_IP XFF_HEADERS"
                            ],
                            "type": "string"
                          },
                          "matchOperator": {
                            "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                            "enum": [
                              "contains",
                              "exists",
                              "equals"
                            ],
                            "type": "string"
                          },
                          "matchType": {
                            "description": "The type of match used.\n",
                            "enum": [
                              "header",
                              "hostname",
                              "path",
                              "extension",
                              "query",
                              "range",
                              "regex",
                              "cookie",
                              "deviceCharacteristics",
                              "clientip",
                              "continent",
                              "countrycode",
                              "regioncode",
                              "protocol",
                              "method",
                              "proxy"
                            ],
                            "type": "string"
                          },
                          "matchValue": {
                            "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                            "maxLength": 8192,
                            "minLength": 1,
                            "type": "string"
                          },
                          "negate": {
                            "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                            "type": "boolean"
                          },
                          "objectMatchValue": {
                            "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.\n",
                            "oneOf": [
                              {
                                "additionalProperties": false,
                                "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.\n",
                                "properties": {
                                  "type": {
                                    "description": "The object type, which is `range`.\n",
                                    "enum": [
                                      "range"
                                    ],
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "An inclusive range comprised of two numbers to match on.\n",
                                    "items": {
                                      "type": "integer"
                                    },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                },
                                "required": [
                                  "type",
                                  "value"
                                ],
                                "title": "Range",
                                "type": "object"
                              },
                              {
                                "additionalProperties": false,
                                "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                "properties": {
                                  "type": {
                                    "description": "The object type, which is `simple`.\n",
                                    "enum": [
                                      "simple"
                                    ],
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                    "items": {
                                      "type": "string"
                                    },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                },
                                "required": [
                                  "type",
                                  "value"
                                ],
                                "title": "Simple",
                                "type": "object"
                              },
                              {
                                "additionalProperties": false,
                                "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                "properties": {
                                  "name": {
                                    "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "nameCaseSensitive": {
                                    "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                    "type": "boolean"
                                  },
                                  "nameHasWildcard": {
                                    "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                    "type": "boolean"
                                  },
                                  "options": {
                                    "additionalProperties": false,
                                    "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                    "properties": {
                                      "value": {
                                        "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "items": {
                                          "type": "string"
                                        },
                                        "nullable": true,
                                        "type": "array"
                                      },
                                      "valueCaseSensitive": {
                                        "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                        "type": "boolean"
                                      },
                                      "valueEscaped": {
                                        "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                        "type": "boolean"
                                      },
                                      "valueHasWildcard": {
                                        "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                        "type": "boolean"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": {
                                    "description": "The array type, which is `object`.\n",
                                    "enum": [
                                      "object"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "type"
                                ],
                                "title": "Object",
                                "type": "object"
                              }
                            ],
                            "title": "Object match value",
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "nullable": true,
                      "type": "array"
                    },
                    "name": {
                      "description": "The name of the rule.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "start": {
                      "default": 0,
                      "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "type": {
                      "description": "The type of Cloudlet the rule is for. For example, the string for Audience Segmentation is `asMatchRule`.\n",
                      "enum": [
                        "asMatchRule"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "type"
                  ],
                  "title": "Audience Segmentation",
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/match-rule-as.yaml"
                  }
                },
                {
                  "additionalProperties": false,
                  "description": "Contains match rule information for Phased Release.\n",
                  "properties": {
                    "akaRuleId": {
                      "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "disabled": {
                      "default": false,
                      "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                      "type": "boolean"
                    },
                    "end": {
                      "default": 0,
                      "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "forwardSettings": {
                      "additionalProperties": false,
                      "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, and `percent`.\n",
                      "properties": {
                        "originId": {
                          "description": "The conditional origin's unique identifier.\n",
                          "maxLength": 8192,
                          "nullable": true,
                          "type": "string"
                        },
                        "percent": {
                          "description": "The percentage of visitors directed to a different origin.\n",
                          "maximum": 100,
                          "minimum": 0,
                          "type": "number"
                        }
                      },
                      "type": "object"
                    },
                    "id": {
                      "description": "__Read-only__ Akamai internal use only.\n",
                      "nullable": true,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "location": {
                      "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "matchURL": {
                      "description": "The URL the Cloudlet uses to match the incoming request.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "matches": {
                      "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                      "items": {
                        "additionalProperties": false,
                        "description": "The match rule criteria.\n",
                        "oneOf": [
                          {
                            "required": [
                              "matchType",
                              "matchValue"
                            ],
                            "title": "matchType and matchValue required"
                          },
                          {
                            "required": [
                              "matchType",
                              "objectMatchValue"
                            ],
                            "title": "matchType and objectMatchValue required"
                          }
                        ],
                        "properties": {
                          "caseSensitive": {
                            "description": "If `true`, the match is case sensitive.\n",
                            "type": "boolean"
                          },
                          "checkIPs": {
                            "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                            "enum": [
                              "CONNECTING_IP",
                              "XFF_HEADERS",
                              "CONNECTING_IP XFF_HEADERS"
                            ],
                            "nullable": true,
                            "type": "string"
                          },
                          "matchOperator": {
                            "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                            "enum": [
                              "contains",
                              "exists",
                              "equals"
                            ],
                            "type": "string"
                          },
                          "matchType": {
                            "description": "The type of match used.\n",
                            "enum": [
                              "header",
                              "hostname",
                              "path",
                              "extension",
                              "query",
                              "cookie",
                              "deviceCharacteristics",
                              "clientip",
                              "continent",
                              "countrycode",
                              "regioncode",
                              "protocol",
                              "method",
                              "proxy"
                            ],
                            "type": "string"
                          },
                          "matchValue": {
                            "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                            "maxLength": 8192,
                            "minLength": 1,
                            "type": "string"
                          },
                          "negate": {
                            "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                            "type": "boolean"
                          },
                          "objectMatchValue": {
                            "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                            "oneOf": [
                              {
                                "additionalProperties": false,
                                "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                "properties": {
                                  "type": {
                                    "description": "The object type, which is `simple`.\n",
                                    "enum": [
                                      "simple"
                                    ],
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                    "items": {
                                      "type": "string"
                                    },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                },
                                "required": [
                                  "type",
                                  "value"
                                ],
                                "title": "Simple",
                                "type": "object"
                              },
                              {
                                "additionalProperties": false,
                                "description": "Use this for more complex match criteria.\n",
                                "properties": {
                                  "name": {
                                    "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "nameCaseSensitive": {
                                    "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                    "type": "boolean"
                                  },
                                  "nameHasWildcard": {
                                    "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                    "type": "boolean"
                                  },
                                  "options": {
                                    "additionalProperties": false,
                                    "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                    "properties": {
                                      "value": {
                                        "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "items": {
                                          "type": "string"
                                        },
                                        "nullable": true,
                                        "type": "array"
                                      },
                                      "valueCaseSensitive": {
                                        "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                        "type": "boolean"
                                      },
                                      "valueEscaped": {
                                        "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                        "type": "boolean"
                                      },
                                      "valueHasWildcard": {
                                        "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                        "type": "boolean"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": {
                                    "description": "The array type, which is `object`.\n",
                                    "enum": [
                                      "object"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "type"
                                ],
                                "title": "Object",
                                "type": "object"
                              }
                            ],
                            "title": "Object match value",
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "nullable": true,
                      "type": "array"
                    },
                    "matchesAlways": {
                      "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n",
                      "type": "boolean"
                    },
                    "name": {
                      "description": "The name of the rule.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "start": {
                      "default": 0,
                      "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "type": {
                      "description": "The type of Cloudlet the rule is for. For example, the string for Phased Release is `cdMatchRule`.\n",
                      "enum": [
                        "cdMatchRule"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "type"
                  ],
                  "title": "Phased Release",
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/match-rule-cd.yaml"
                  }
                },
                {
                  "additionalProperties": false,
                  "description": "Contains match rule information for Edge Redirector.\n",
                  "properties": {
                    "akaRuleId": {
                      "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "disabled": {
                      "default": false,
                      "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                      "type": "boolean"
                    },
                    "end": {
                      "default": 0,
                      "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "id": {
                      "description": "__Read-only__ Akamai internal use only.\n",
                      "nullable": true,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "location": {
                      "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "matchURL": {
                      "description": "The URL the Cloudlet uses to match the incoming request.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "matches": {
                      "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                      "items": {
                        "additionalProperties": false,
                        "description": "The match rule criteria.\n",
                        "oneOf": [
                          {
                            "required": [
                              "matchType",
                              "matchValue"
                            ],
                            "title": "matchType and matchValue required"
                          },
                          {
                            "required": [
                              "matchType",
                              "objectMatchValue"
                            ],
                            "title": "matchType and objectMatchValue required"
                          }
                        ],
                        "properties": {
                          "caseSensitive": {
                            "description": "If `true`, the match is case sensitive.\n",
                            "type": "boolean"
                          },
                          "checkIPs": {
                            "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                            "enum": [
                              "CONNECTING_IP",
                              "XFF_HEADERS",
                              "CONNECTING_IP XFF_HEADERS"
                            ],
                            "nullable": true,
                            "type": "string"
                          },
                          "matchOperator": {
                            "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                            "enum": [
                              "contains",
                              "exists",
                              "equals"
                            ],
                            "type": "string"
                          },
                          "matchType": {
                            "description": "The type of match used.\n",
                            "enum": [
                              "header",
                              "hostname",
                              "path",
                              "extension",
                              "query",
                              "regex",
                              "cookie",
                              "deviceCharacteristics",
                              "clientip",
                              "continent",
                              "countrycode",
                              "regioncode",
                              "protocol",
                              "method",
                              "proxy"
                            ],
                            "type": "string"
                          },
                          "matchValue": {
                            "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                            "maxLength": 8192,
                            "minLength": 1,
                            "type": "string"
                          },
                          "negate": {
                            "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                            "type": "boolean"
                          },
                          "objectMatchValue": {
                            "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                            "oneOf": [
                              {
                                "additionalProperties": false,
                                "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                "properties": {
                                  "type": {
                                    "description": "The object type, which is `simple`.\n",
                                    "enum": [
                                      "simple"
                                    ],
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                    "items": {
                                      "type": "string"
                                    },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                },
                                "required": [
                                  "type",
                                  "value"
                                ],
                                "title": "Simple",
                                "type": "object"
                              },
                              {
                                "additionalProperties": false,
                                "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                "properties": {
                                  "name": {
                                    "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "nameCaseSensitive": {
                                    "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                    "type": "boolean"
                                  },
                                  "nameHasWildcard": {
                                    "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                    "type": "boolean"
                                  },
                                  "options": {
                                    "additionalProperties": false,
                                    "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                    "properties": {
                                      "value": {
                                        "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "items": {
                                          "type": "string"
                                        },
                                        "nullable": true,
                                        "type": "array"
                                      },
                                      "valueCaseSensitive": {
                                        "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                        "type": "boolean"
                                      },
                                      "valueEscaped": {
                                        "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                        "type": "boolean"
                                      },
                                      "valueHasWildcard": {
                                        "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                        "type": "boolean"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": {
                                    "description": "The array type, which is `object`.\n",
                                    "enum": [
                                      "object"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "type"
                                ],
                                "title": "Object",
                                "type": "object"
                              }
                            ],
                            "title": "Object match value",
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "nullable": true,
                      "type": "array"
                    },
                    "matchesAlways": {
                      "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n",
                      "type": "boolean"
                    },
                    "name": {
                      "description": "The name of the rule.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "redirectURL": {
                      "description": "The URL Edge Redirector redirects the request to. If using `useRelativeUrl`, you can enter a path for the value. If `useRelativeUrl` is not used or set to `none`, then the `redirectUrl` should be a fully qualified URL.\n",
                      "maxLength": 8192,
                      "minLength": 1,
                      "type": "string"
                    },
                    "start": {
                      "default": 0,
                      "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "statusCode": {
                      "description": "The HTTP response redirect type status code: `301` for permanent redirect, `302` for temporary redirect, `303` for temporary using GET, `307` for temporary retain method, or `308` for permanent retain method.\n",
                      "enum": [
                        301,
                        302,
                        303,
                        307,
                        308
                      ],
                      "type": "integer"
                    },
                    "type": {
                      "description": "The type of Cloudlet the rule is for. For example, the string for Edge Redirector is `erMatchRule`.\n",
                      "enum": [
                        "erMatchRule"
                      ],
                      "type": "string"
                    },
                    "useIncomingQueryString": {
                      "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n",
                      "type": "boolean"
                    },
                    "useIncomingSchemeAndHost": {
                      "description": "If set to `true`, the Cloudlet copies both the scheme and the hostname from the incoming request to use in the redirect URL.\n",
                      "type": "boolean"
                    },
                    "useRelativeUrl": {
                      "description": "If set to `relative_url`, takes the path entered for the `redirectUrl` and sets it in the response’s `Location` header. The client browser receiving the request decides which protocol and hostname to use. If set to `copy_scheme_hostname`, it creates an absolute path by taking the protocol and hostname from the incoming request and combining them with path information entered for the `redirectUrl`. This absolute path is set in the response’s `Location` header. If you don't include `useRelativeUrl`, or if you set it to `none`, then specify the `redirectUrl` as a fully qualified URL.\n",
                      "enum": [
                        "relative_url",
                        "copy_scheme_hostname",
                        "none"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "type",
                    "redirectURL",
                    "statusCode"
                  ],
                  "title": "Edge Redirector",
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/match-rule-er.yaml"
                  }
                },
                {
                  "additionalProperties": false,
                  "description": "Contains match rule information for Forward Rewrite.\n",
                  "properties": {
                    "akaRuleId": {
                      "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "disabled": {
                      "default": false,
                      "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                      "type": "boolean"
                    },
                    "end": {
                      "default": 0,
                      "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "forwardSettings": {
                      "additionalProperties": false,
                      "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                      "properties": {
                        "originId": {
                          "description": "The conditional origin's unique identifier.\n",
                          "maxLength": 8192,
                          "nullable": true,
                          "type": "string"
                        },
                        "pathAndQS": {
                          "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                          "maxLength": 8192,
                          "minLength": 1,
                          "type": "string"
                        },
                        "useIncomingQueryString": {
                          "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n",
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "id": {
                      "description": "__Read-only__ Akamai internal use only.\n",
                      "nullable": true,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "location": {
                      "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "matchURL": {
                      "description": "The URL the Cloudlet uses to match the incoming request.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "matches": {
                      "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                      "items": {
                        "additionalProperties": false,
                        "description": "The match rule criteria.\n",
                        "oneOf": [
                          {
                            "required": [
                              "matchType",
                              "matchValue"
                            ],
                            "title": "matchType and matchValue required"
                          },
                          {
                            "required": [
                              "matchType",
                              "objectMatchValue"
                            ],
                            "title": "matchType and objectMatchValue required"
                          }
                        ],
                        "properties": {
                          "caseSensitive": {
                            "description": "If `true`, the match is case sensitive.\n",
                            "type": "boolean"
                          },
                          "checkIPs": {
                            "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                            "enum": [
                              "CONNECTING_IP",
                              "XFF_HEADERS",
                              "CONNECTING_IP XFF_HEADERS"
                            ],
                            "type": "string"
                          },
                          "matchOperator": {
                            "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                            "enum": [
                              "contains",
                              "exists",
                              "equals"
                            ],
                            "type": "string"
                          },
                          "matchType": {
                            "description": "The type of match used.\n",
                            "enum": [
                              "header",
                              "hostname",
                              "path",
                              "extension",
                              "query",
                              "regex",
                              "cookie",
                              "deviceCharacteristics",
                              "clientip",
                              "continent",
                              "countrycode",
                              "regioncode",
                              "protocol",
                              "method",
                              "proxy"
                            ],
                            "type": "string"
                          },
                          "matchValue": {
                            "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                            "maxLength": 8192,
                            "minLength": 1,
                            "type": "string"
                          },
                          "negate": {
                            "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                            "type": "boolean"
                          },
                          "objectMatchValue": {
                            "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                            "oneOf": [
                              {
                                "additionalProperties": false,
                                "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                "properties": {
                                  "type": {
                                    "description": "The object type, which is `simple`.\n",
                                    "enum": [
                                      "simple"
                                    ],
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                    "items": {
                                      "type": "string"
                                    },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                },
                                "required": [
                                  "type",
                                  "value"
                                ],
                                "title": "Simple",
                                "type": "object"
                              },
                              {
                                "additionalProperties": false,
                                "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                "properties": {
                                  "name": {
                                    "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "nameCaseSensitive": {
                                    "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                    "type": "boolean"
                                  },
                                  "nameHasWildcard": {
                                    "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                    "type": "boolean"
                                  },
                                  "options": {
                                    "additionalProperties": false,
                                    "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                    "properties": {
                                      "value": {
                                        "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "items": {
                                          "type": "string"
                                        },
                                        "nullable": true,
                                        "type": "array"
                                      },
                                      "valueCaseSensitive": {
                                        "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                        "type": "boolean"
                                      },
                                      "valueEscaped": {
                                        "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                        "type": "boolean"
                                      },
                                      "valueHasWildcard": {
                                        "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                        "type": "boolean"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": {
                                    "description": "The array type, which is `object`.\n",
                                    "enum": [
                                      "object"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "type"
                                ],
                                "title": "Object",
                                "type": "object"
                              }
                            ],
                            "title": "Object match value",
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "nullable": true,
                      "type": "array"
                    },
                    "name": {
                      "description": "The name of the rule.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "start": {
                      "default": 0,
                      "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "type": {
                      "description": "The type of Cloudlet the rule is for. For example, the string for Forward Rewrite is `frMatchRule`.\n",
                      "enum": [
                        "frMatchRule"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "type",
                    "forwardSettings"
                  ],
                  "title": "Forward Rewrite",
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/match-rule-fr.yaml"
                  }
                },
                {
                  "additionalProperties": false,
                  "description": "Contains match rule information for Request Control.\n",
                  "properties": {
                    "akaRuleId": {
                      "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "allowDeny": {
                      "description": "If set to `allow`, the request is sent to origin when all conditions are true. If `deny`, the request is denied when all conditions are true. If `denybranded`, the request is denied and rerouted according to the configuration of the [Request Control behavior](https://techdocs.akamai.com/property-mgr/reference/latest-request-control).\n",
                      "enum": [
                        "allow",
                        "deny",
                        "denybranded"
                      ],
                      "type": "string"
                    },
                    "disabled": {
                      "default": false,
                      "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                      "type": "boolean"
                    },
                    "end": {
                      "default": 0,
                      "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "id": {
                      "description": "__Read-only__ Akamai internal use only.\n",
                      "nullable": true,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "location": {
                      "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "matches": {
                      "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                      "items": {
                        "additionalProperties": false,
                        "description": "The match rule criteria.\n",
                        "oneOf": [
                          {
                            "required": [
                              "matchType",
                              "matchValue"
                            ],
                            "title": "matchType and matchValue required"
                          },
                          {
                            "required": [
                              "matchType",
                              "objectMatchValue"
                            ],
                            "title": "matchType and objectMatchValue required"
                          }
                        ],
                        "properties": {
                          "caseSensitive": {
                            "description": "If `true`, the match is case sensitive.\n",
                            "type": "boolean"
                          },
                          "checkIPs": {
                            "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                            "enum": [
                              "CONNECTING_IP",
                              "XFF_HEADERS",
                              "CONNECTING_IP XFF_HEADERS"
                            ],
                            "type": "string"
                          },
                          "matchOperator": {
                            "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                            "enum": [
                              "contains",
                              "exists",
                              "equals"
                            ],
                            "type": "string"
                          },
                          "matchType": {
                            "description": "The type of match used.\n",
                            "enum": [
                              "clientip",
                              "continent",
                              "cookie",
                              "countrycode",
                              "deviceCharacteristics",
                              "extension",
                              "header",
                              "hostname",
                              "method",
                              "path",
                              "protocol",
                              "proxy",
                              "query",
                              "regioncode"
                            ],
                            "type": "string"
                          },
                          "matchValue": {
                            "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                            "maxLength": 8192,
                            "minLength": 1,
                            "type": "string"
                          },
                          "negate": {
                            "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                            "type": "boolean"
                          },
                          "objectMatchValue": {
                            "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                            "oneOf": [
                              {
                                "additionalProperties": false,
                                "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                "properties": {
                                  "type": {
                                    "description": "The object type, which is `simple`.\n",
                                    "enum": [
                                      "simple"
                                    ],
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                    "items": {
                                      "type": "string"
                                    },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                },
                                "required": [
                                  "type",
                                  "value"
                                ],
                                "title": "Simple",
                                "type": "object"
                              },
                              {
                                "additionalProperties": false,
                                "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                "properties": {
                                  "name": {
                                    "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "nameCaseSensitive": {
                                    "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                    "type": "boolean"
                                  },
                                  "nameHasWildcard": {
                                    "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                    "type": "boolean"
                                  },
                                  "options": {
                                    "additionalProperties": false,
                                    "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                    "properties": {
                                      "value": {
                                        "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "items": {
                                          "type": "string"
                                        },
                                        "nullable": true,
                                        "type": "array"
                                      },
                                      "valueCaseSensitive": {
                                        "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                        "type": "boolean"
                                      },
                                      "valueEscaped": {
                                        "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                        "type": "boolean"
                                      },
                                      "valueHasWildcard": {
                                        "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                        "type": "boolean"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": {
                                    "description": "The array type, which is `object`.\n",
                                    "enum": [
                                      "object"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "type"
                                ],
                                "title": "Object",
                                "type": "object"
                              }
                            ],
                            "title": "Object match value",
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "nullable": true,
                      "type": "array"
                    },
                    "matchesAlways": {
                      "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n",
                      "type": "boolean"
                    },
                    "name": {
                      "description": "The name of the rule.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "start": {
                      "default": 0,
                      "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "type": {
                      "description": "The type of Cloudlet the rule is for. For example, the string for Request Control is `igMatchRule`.\n",
                      "enum": [
                        "igMatchRule"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "type",
                    "allowDeny"
                  ],
                  "title": "Request Control",
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/match-rule-ig.yaml"
                  }
                },
                {
                  "type": "object",
                  "description": "Contains match rule information for Visitor Prioritization.\n",
                  "title": "Visitor Prioritization",
                  "additionalProperties": false,
                  "required": [
                    "type",
                    "passThroughPercent"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Akamai internal use only.\n",
                      "nullable": true,
                      "readOnly": true
                    },
                    "location": {
                      "type": "string",
                      "description": "The navigable endpoint used for the object referred to in the operation.\n",
                      "readOnly": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the rule.\n",
                      "nullable": true,
                      "maxLength": 8192
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of Cloudlet the rule is for. For example, the string for Visitor Prioritization is `vpMatchRule`.\n",
                      "enum": [
                        "vpMatchRule"
                      ]
                    },
                    "akaRuleId": {
                      "type": "string",
                      "description": "The rule's unique identifier within the policy version.\n",
                      "readOnly": true
                    },
                    "start": {
                      "type": "integer",
                      "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                      "default": 0,
                      "minimum": 0
                    },
                    "end": {
                      "type": "integer",
                      "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                      "default": 0,
                      "minimum": 0
                    },
                    "matches": {
                      "type": "array",
                      "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                      "nullable": true,
                      "items": {
                        "type": "object",
                        "description": "The match rule criteria.\n",
                        "additionalProperties": false,
                        "oneOf": [
                          {
                            "required": [
                              "matchType",
                              "matchValue"
                            ],
                            "title": "matchType and matchValue required"
                          },
                          {
                            "required": [
                              "matchType",
                              "objectMatchValue"
                            ],
                            "title": "matchType and objectMatchValue required"
                          }
                        ],
                        "properties": {
                          "caseSensitive": {
                            "type": "boolean",
                            "description": "If `true`, the match is case sensitive.\n"
                          },
                          "matchValue": {
                            "type": "string",
                            "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                            "minLength": 1,
                            "maxLength": 8192
                          },
                          "negate": {
                            "type": "boolean",
                            "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                          },
                          "matchOperator": {
                            "type": "string",
                            "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                            "enum": [
                              "contains",
                              "exists",
                              "equals"
                            ]
                          },
                          "matchType": {
                            "type": "string",
                            "description": "The type of match used.\n",
                            "enum": [
                              "hostname",
                              "path",
                              "extension",
                              "query",
                              "cookie",
                              "deviceCharacteristics",
                              "clientip",
                              "continent",
                              "countrycode",
                              "regioncode",
                              "protocol",
                              "header",
                              "method",
                              "proxy"
                            ]
                          },
                          "checkIPs": {
                            "type": "string",
                            "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                            "enum": [
                              "CONNECTING_IP",
                              "XFF_HEADERS",
                              "CONNECTING_IP XFF_HEADERS"
                            ]
                          },
                          "objectMatchValue": {
                            "type": "object",
                            "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                            "title": "Object match value",
                            "oneOf": [
                              {
                                "type": "object",
                                "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                "title": "Simple",
                                "additionalProperties": false,
                                "required": [
                                  "type",
                                  "value"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "description": "The object type, which is `simple`.\n",
                                    "enum": [
                                      "simple"
                                    ]
                                  },
                                  "value": {
                                    "type": "array",
                                    "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                    "nullable": true,
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                "title": "Object",
                                "additionalProperties": false,
                                "required": [
                                  "name",
                                  "type"
                                ],
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                    "minLength": 1,
                                    "maxLength": 8192
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "The array type, which is `object`.\n",
                                    "enum": [
                                      "object"
                                    ]
                                  },
                                  "options": {
                                    "type": "object",
                                    "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                    "additionalProperties": false,
                                    "properties": {
                                      "value": {
                                        "type": "array",
                                        "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "nullable": true,
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "valueHasWildcard": {
                                        "type": "boolean",
                                        "description": "Set to `true` if the entries for `value` includes wildcards.\n"
                                      },
                                      "valueCaseSensitive": {
                                        "type": "boolean",
                                        "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n"
                                      },
                                      "valueEscaped": {
                                        "type": "boolean",
                                        "description": "Set to `true` if the entries for `value` includes escaped characters.\n"
                                      }
                                    }
                                  },
                                  "nameCaseSensitive": {
                                    "type": "boolean",
                                    "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                  },
                                  "nameHasWildcard": {
                                    "type": "boolean",
                                    "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    },
                    "disabled": {
                      "type": "boolean",
                      "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                      "default": false
                    },
                    "passThroughPercent": {
                      "type": "number",
                      "description": "The range `0.000: 99.000` specifies the percentage of requests that pass through to the origin. The value of `100` means the request always passes through to the origin. For Visitor Prioritization, a value of `-1` means send everyone to the waiting room.\n",
                      "minimum": -1,
                      "maximum": 100
                    },
                    "matchURL": {
                      "type": "string",
                      "description": "The URL the Cloudlet uses to match the incoming request.\n",
                      "nullable": true,
                      "maxLength": 8192
                    },
                    "useIncomingQueryString": {
                      "type": "boolean",
                      "description": "If set to `true`, the Cloudlet includes the request's query string in the rewritten or forwarded URL.\n"
                    }
                  }
                }
              ]
            },
            "type": "array",
            "x-akamai": {
              "file-path": "schemas/match-rules.yaml"
            }
          },
          "policyId": {
            "description": "ID of the policy the version is associated to.\n",
            "type": "integer"
          },
          "revisionId": {
            "description": "ID of the revision.\n",
            "type": "integer"
          },
          "rulesLocked": {
            "description": "Flag determining whether the rules are locked or not.\n",
            "type": "boolean"
          },
          "version": {
            "description": "Version of the policy.\n",
            "type": "integer"
          }
        },
        "required": [
          "activations",
          "createdBy",
          "createDate",
          "deleted",
          "description",
          "lastModifiedBy",
          "lastModifiedDate",
          "location",
          "matchRuleFormat",
          "matchRules",
          "policyId",
          "revisionId",
          "rulesLocked",
          "version"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/policy-version.yaml"
        }
      },
      "get-policy-versions-response": {
        "description": "Returns all policy versions.\n",
        "items": {
          "additionalProperties": false,
          "description": "Returns policy version details.\n",
          "properties": {
            "activations": {
              "description": "List of activations related to the policy version.\n",
              "items": {
                "additionalProperties": false,
                "description": "Returns details of a policy activation.\n",
                "properties": {
                  "apiVersion": {
                    "description": "The specific version of this API.\n",
                    "type": "string"
                  },
                  "network": {
                    "description": "The network, either `STAGING`, `PRODUCTION`, or `prod` as shorthand, on which a load balancing configuration for Application Load Balancer has been activated. Values are case-insensitive in requests.\n",
                    "enum": [
                      "prod",
                      "staging"
                    ],
                    "type": "string"
                  },
                  "policyInfo": {
                    "type": "object",
                    "description": "Returns details of a policy associated with policy activation.\n",
                    "additionalProperties": false,
                    "required": [
                      "policyId",
                      "name",
                      "version",
                      "status",
                      "statusDetail",
                      "activatedBy",
                      "activationDate"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the policy.\n"
                      },
                      "version": {
                        "type": "integer",
                        "description": "Version of the policy.\n"
                      },
                      "policyId": {
                        "type": "integer",
                        "description": "ID of the policy.\n"
                      },
                      "status": {
                        "type": "string",
                        "description": "Value representing activation status.\n",
                        "enum": [
                          "INACTIVE",
                          "PENDING",
                          "ACTIVE",
                          "FAILED",
                          "DEACTIVATED"
                        ]
                      },
                      "statusDetail": {
                        "type": "string",
                        "description": "Details of the activation status.\n"
                      },
                      "activatedBy": {
                        "type": "string",
                        "description": "User name who issued the activation.\n",
                        "nullable": true
                      },
                      "activationDate": {
                        "type": "integer",
                        "description": "Date of the activation in milliseconds.\n"
                      }
                    }
                  },
                  "propertyInfo": {
                    "type": "object",
                    "description": "Returns details of a property associated with policy activation.\n",
                    "additionalProperties": false,
                    "required": [
                      "name",
                      "version",
                      "groupId",
                      "status",
                      "activatedBy",
                      "activationDate",
                      "id"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "ID of the property.\n"
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the property.\n"
                      },
                      "version": {
                        "type": "integer",
                        "description": "Version of the property.\n"
                      },
                      "groupId": {
                        "type": "integer",
                        "description": "Identifies the group where the property is placed.\n"
                      },
                      "status": {
                        "type": "string",
                        "description": "Value representing activation status.\n",
                        "enum": [
                          "INACTIVE",
                          "PENDING",
                          "ACTIVE",
                          "FAILED",
                          "DEACTIVATED"
                        ]
                      },
                      "activatedBy": {
                        "type": "string",
                        "description": "User name who issued the activation.\n",
                        "nullable": true
                      },
                      "activationDate": {
                        "type": "integer",
                        "description": "Date of the activation in milliseconds.\n"
                      }
                    }
                  },
                  "serviceVersion": {
                    "description": "__Deprecated__ The build of the software running on the server. The value can be `null`.\n",
                    "nullable": true,
                    "type": "string",
                    "x-akamai": {
                      "status": "DEPRECATED"
                    }
                  }
                },
                "required": [
                  "network",
                  "policyInfo",
                  "propertyInfo"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/policy-activation.yaml"
                }
              },
              "type": "array"
            },
            "createDate": {
              "description": "Date of the policy version creation in milliseconds.\n",
              "type": "integer"
            },
            "createdBy": {
              "description": "User name who created the policy version.\n",
              "type": "string"
            },
            "deleted": {
              "description": "Flag determining whether the policy version is deleted or not.\n",
              "type": "boolean"
            },
            "description": {
              "description": "Description of the policy version.\n",
              "type": "string"
            },
            "lastModifiedBy": {
              "description": "User name who recently modified the policy version.\n",
              "type": "string"
            },
            "lastModifiedDate": {
              "description": "Date of the recent policy version modification in milliseconds.\n",
              "type": "integer"
            },
            "location": {
              "description": "The navigable endpoint used for the object referred to in the operation.\n",
              "type": "string"
            },
            "matchRuleFormat": {
              "description": "The version of the `matchRules` format.\n",
              "type": "string"
            },
            "matchRules": {
              "description": "A list of Cloudlet-specific match rules for this policy.\n",
              "items": {
                "description": "Contains information about match rules.\n",
                "oneOf": [
                  {
                    "type": "object",
                    "description": "Contains match rule information for Application Load Balancer.\n",
                    "title": "Application Load Balancer",
                    "additionalProperties": false,
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "Akamai internal use only.\n",
                        "nullable": true,
                        "readOnly": true
                      },
                      "location": {
                        "type": "string",
                        "description": "The navigable endpoint used for the object referred to in the operation.\n",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the rule.\n",
                        "nullable": true,
                        "maxLength": 8192
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of Cloudlet the rule is for. For example, the string for Application Load Balancer is `albMatchRule`.\n",
                        "enum": [
                          "albMatchRule"
                        ]
                      },
                      "akaRuleId": {
                        "type": "string",
                        "description": "The rule's unique identifier within the policy version.\n",
                        "readOnly": true
                      },
                      "disabled": {
                        "type": "boolean",
                        "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                        "default": false
                      },
                      "start": {
                        "type": "integer",
                        "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                        "default": 0,
                        "minimum": 0
                      },
                      "end": {
                        "type": "integer",
                        "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                        "default": 0,
                        "minimum": 0
                      },
                      "matchURL": {
                        "type": "string",
                        "description": "The URL the Cloudlet uses to match the incoming request.\n",
                        "nullable": true,
                        "maxLength": 8192
                      },
                      "matches": {
                        "type": "array",
                        "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                        "nullable": true,
                        "items": {
                          "type": "object",
                          "description": "The match rule criteria.\n",
                          "additionalProperties": false,
                          "oneOf": [
                            {
                              "required": [
                                "matchType",
                                "matchValue"
                              ],
                              "title": "matchType and matchValue required"
                            },
                            {
                              "required": [
                                "matchType",
                                "objectMatchValue"
                              ],
                              "title": "matchType and objectMatchValue required"
                            }
                          ],
                          "properties": {
                            "caseSensitive": {
                              "type": "boolean",
                              "description": "If `true`, the match is case sensitive.\n"
                            },
                            "checkIPs": {
                              "type": "string",
                              "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                              "nullable": true,
                              "enum": [
                                "CONNECTING_IP",
                                "XFF_HEADERS",
                                "CONNECTING_IP XFF_HEADERS"
                              ]
                            },
                            "matchOperator": {
                              "type": "string",
                              "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                              "enum": [
                                "contains",
                                "exists",
                                "equals"
                              ]
                            },
                            "matchType": {
                              "type": "string",
                              "description": "The type of match used.\n",
                              "enum": [
                                "header",
                                "hostname",
                                "path",
                                "extension",
                                "query",
                                "regex",
                                "cookie",
                                "deviceCharacteristics",
                                "clientip",
                                "continent",
                                "countrycode",
                                "regioncode",
                                "protocol",
                                "method",
                                "proxy"
                              ]
                            },
                            "matchValue": {
                              "type": "string",
                              "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                              "minLength": 1,
                              "maxLength": 8192
                            },
                            "negate": {
                              "type": "boolean",
                              "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                            },
                            "objectMatchValue": {
                              "type": "object",
                              "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                              "title": "Object match value",
                              "oneOf": [
                                {
                                  "type": "object",
                                  "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                  "title": "Simple",
                                  "additionalProperties": false,
                                  "required": [
                                    "type",
                                    "value"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "description": "The object type, which is `simple`.\n",
                                      "enum": [
                                        "simple"
                                      ]
                                    },
                                    "value": {
                                      "type": "array",
                                      "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                      "nullable": true,
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "description": "Use this for more complex match criteria.\n",
                                  "title": "Object",
                                  "additionalProperties": false,
                                  "required": [
                                    "name",
                                    "type"
                                  ],
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                      "minLength": 1,
                                      "maxLength": 8192
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "The array type, which is `object`.\n",
                                      "enum": [
                                        "object"
                                      ]
                                    },
                                    "options": {
                                      "type": "object",
                                      "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                      "additionalProperties": false,
                                      "properties": {
                                        "value": {
                                          "type": "array",
                                          "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                          "nullable": true,
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "valueCaseSensitive": {
                                          "type": "boolean",
                                          "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n"
                                        },
                                        "valueEscaped": {
                                          "type": "boolean",
                                          "description": "Set to `true` if the entries for `value` includes escaped characters.\n"
                                        },
                                        "valueHasWildcard": {
                                          "type": "boolean",
                                          "description": "Set to `true` if the entries for `value` includes wildcards.\n"
                                        }
                                      }
                                    },
                                    "nameCaseSensitive": {
                                      "type": "boolean",
                                      "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                    },
                                    "nameHasWildcard": {
                                      "type": "boolean",
                                      "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      },
                      "matchesAlways": {
                        "type": "boolean",
                        "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n"
                      },
                      "forwardSettings": {
                        "type": "object",
                        "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                        "additionalProperties": false,
                        "properties": {
                          "pathAndQS": {
                            "type": "string",
                            "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                            "minLength": 1,
                            "maxLength": 8192
                          },
                          "useIncomingQueryString": {
                            "type": "boolean",
                            "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n"
                          },
                          "originId": {
                            "type": "string",
                            "description": "The conditional origin's unique identifier.\n",
                            "nullable": true,
                            "maxLength": 8192
                          }
                        }
                      }
                    }
                  },
                  {
                    "additionalProperties": false,
                    "description": "Contains match rule information for API Prioritization.\n",
                    "properties": {
                      "akaRuleId": {
                        "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                        "readOnly": true,
                        "type": "string"
                      },
                      "disabled": {
                        "default": false,
                        "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                        "type": "boolean"
                      },
                      "end": {
                        "default": 0,
                        "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "id": {
                        "description": "__Read-only__ Akamai internal use only.\n",
                        "nullable": true,
                        "readOnly": true,
                        "type": "integer"
                      },
                      "location": {
                        "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                        "readOnly": true,
                        "type": "string"
                      },
                      "matchURL": {
                        "description": "The URL the Cloudlet uses to match the incoming request.\n",
                        "maxLength": 8192,
                        "nullable": true,
                        "type": "string"
                      },
                      "matches": {
                        "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                        "items": {
                          "additionalProperties": false,
                          "description": "The match rule criteria.\n",
                          "oneOf": [
                            {
                              "required": [
                                "matchType",
                                "matchValue"
                              ],
                              "title": "matchType and matchValue required"
                            },
                            {
                              "required": [
                                "matchType",
                                "objectMatchValue"
                              ],
                              "title": "matchType and objectMatchValue required"
                            }
                          ],
                          "properties": {
                            "caseSensitive": {
                              "description": "If `true`, the match is case sensitive.\n",
                              "type": "boolean"
                            },
                            "checkIPs": {
                              "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                              "enum": [
                                "CONNECTING_IP",
                                "XFF_HEADERS",
                                "CONNECTING_IP XFF_HEADERS"
                              ],
                              "type": "string"
                            },
                            "matchOperator": {
                              "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                              "enum": [
                                "contains",
                                "exists",
                                "equals"
                              ],
                              "type": "string"
                            },
                            "matchType": {
                              "description": "The type of match used.\n",
                              "enum": [
                                "hostname",
                                "path",
                                "extension",
                                "query",
                                "cookie",
                                "deviceCharacteristics",
                                "clientip",
                                "continent",
                                "countrycode",
                                "regioncode",
                                "protocol",
                                "header",
                                "method",
                                "proxy"
                              ],
                              "type": "string"
                            },
                            "matchValue": {
                              "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                              "maxLength": 8192,
                              "minLength": 1,
                              "type": "string"
                            },
                            "negate": {
                              "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                              "type": "boolean"
                            },
                            "objectMatchValue": {
                              "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                              "oneOf": [
                                {
                                  "additionalProperties": false,
                                  "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                  "properties": {
                                    "type": {
                                      "description": "The object type, which is `simple`.\n",
                                      "enum": [
                                        "simple"
                                      ],
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                      "items": {
                                        "type": "string"
                                      },
                                      "nullable": true,
                                      "type": "array"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "value"
                                  ],
                                  "title": "Simple",
                                  "type": "object"
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Use this for more complex match criteria.\n",
                                  "properties": {
                                    "name": {
                                      "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "nameCaseSensitive": {
                                      "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                      "type": "boolean"
                                    },
                                    "nameHasWildcard": {
                                      "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                      "type": "boolean"
                                    },
                                    "options": {
                                      "additionalProperties": false,
                                      "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                      "properties": {
                                        "value": {
                                          "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                          "items": {
                                            "type": "string"
                                          },
                                          "nullable": true,
                                          "type": "array"
                                        },
                                        "valueCaseSensitive": {
                                          "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                          "type": "boolean"
                                        },
                                        "valueEscaped": {
                                          "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                          "type": "boolean"
                                        },
                                        "valueHasWildcard": {
                                          "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                          "type": "boolean"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": {
                                      "description": "The array type, which is `object`.\n",
                                      "enum": [
                                        "object"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "type"
                                  ],
                                  "title": "Object",
                                  "type": "object"
                                }
                              ],
                              "title": "Object match value",
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "nullable": true,
                        "type": "array"
                      },
                      "name": {
                        "description": "The name of the rule.\n",
                        "maxLength": 8192,
                        "nullable": true,
                        "type": "string"
                      },
                      "passThroughPercent": {
                        "description": "The percentage of requests that pass through to the origin, with `100` indicating the request always passes through to the origin. For Visitor Prioritization, a value of -1 sends everyone to the waiting room.\n",
                        "maximum": 100,
                        "minimum": -1,
                        "type": "number"
                      },
                      "start": {
                        "default": 0,
                        "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "type": {
                        "description": "The type of Cloudlet the rule is for. For example, the string for API Prioritization is `apMatchRule`.\n",
                        "enum": [
                          "apMatchRule"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "passThroughPercent"
                    ],
                    "title": "API Prioritization",
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/match-rule-ap.yaml"
                    }
                  },
                  {
                    "additionalProperties": false,
                    "description": "Contains match rule information for Audience Segmentation.\n",
                    "properties": {
                      "akaRuleId": {
                        "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                        "readOnly": true,
                        "type": "string"
                      },
                      "disabled": {
                        "default": false,
                        "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                        "type": "boolean"
                      },
                      "end": {
                        "default": 0,
                        "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "forwardSettings": {
                        "additionalProperties": false,
                        "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                        "properties": {
                          "originId": {
                            "description": "The conditional origin's unique identifier.\n",
                            "maxLength": 8192,
                            "nullable": true,
                            "type": "string"
                          },
                          "pathAndQS": {
                            "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                            "maxLength": 8192,
                            "minLength": 1,
                            "type": "string"
                          },
                          "useIncomingQueryString": {
                            "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n",
                            "type": "boolean"
                          }
                        },
                        "type": "object"
                      },
                      "id": {
                        "description": "__Read-only__ Akamai internal use only.\n",
                        "nullable": true,
                        "readOnly": true,
                        "type": "integer"
                      },
                      "location": {
                        "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                        "readOnly": true,
                        "type": "string"
                      },
                      "matchURL": {
                        "description": "The URL the Cloudlet uses to match the incoming request.\n",
                        "maxLength": 8192,
                        "nullable": true,
                        "type": "string"
                      },
                      "matches": {
                        "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                        "items": {
                          "additionalProperties": false,
                          "description": "The match rule criteria.\n",
                          "oneOf": [
                            {
                              "required": [
                                "matchType",
                                "matchValue"
                              ],
                              "title": "matchType and matchValue required"
                            },
                            {
                              "required": [
                                "matchType",
                                "objectMatchValue"
                              ],
                              "title": "matchType and objectMatchValue required"
                            }
                          ],
                          "properties": {
                            "caseSensitive": {
                              "description": "If `true`, the match is case sensitive.\n",
                              "type": "boolean"
                            },
                            "checkIPs": {
                              "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                              "enum": [
                                "CONNECTING_IP",
                                "XFF_HEADERS",
                                "CONNECTING_IP XFF_HEADERS"
                              ],
                              "type": "string"
                            },
                            "matchOperator": {
                              "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                              "enum": [
                                "contains",
                                "exists",
                                "equals"
                              ],
                              "type": "string"
                            },
                            "matchType": {
                              "description": "The type of match used.\n",
                              "enum": [
                                "header",
                                "hostname",
                                "path",
                                "extension",
                                "query",
                                "range",
                                "regex",
                                "cookie",
                                "deviceCharacteristics",
                                "clientip",
                                "continent",
                                "countrycode",
                                "regioncode",
                                "protocol",
                                "method",
                                "proxy"
                              ],
                              "type": "string"
                            },
                            "matchValue": {
                              "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                              "maxLength": 8192,
                              "minLength": 1,
                              "type": "string"
                            },
                            "negate": {
                              "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                              "type": "boolean"
                            },
                            "objectMatchValue": {
                              "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.\n",
                              "oneOf": [
                                {
                                  "additionalProperties": false,
                                  "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.\n",
                                  "properties": {
                                    "type": {
                                      "description": "The object type, which is `range`.\n",
                                      "enum": [
                                        "range"
                                      ],
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "An inclusive range comprised of two numbers to match on.\n",
                                      "items": {
                                        "type": "integer"
                                      },
                                      "nullable": true,
                                      "type": "array"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "value"
                                  ],
                                  "title": "Range",
                                  "type": "object"
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                  "properties": {
                                    "type": {
                                      "description": "The object type, which is `simple`.\n",
                                      "enum": [
                                        "simple"
                                      ],
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                      "items": {
                                        "type": "string"
                                      },
                                      "nullable": true,
                                      "type": "array"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "value"
                                  ],
                                  "title": "Simple",
                                  "type": "object"
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                  "properties": {
                                    "name": {
                                      "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "nameCaseSensitive": {
                                      "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                      "type": "boolean"
                                    },
                                    "nameHasWildcard": {
                                      "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                      "type": "boolean"
                                    },
                                    "options": {
                                      "additionalProperties": false,
                                      "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                      "properties": {
                                        "value": {
                                          "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                          "items": {
                                            "type": "string"
                                          },
                                          "nullable": true,
                                          "type": "array"
                                        },
                                        "valueCaseSensitive": {
                                          "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                          "type": "boolean"
                                        },
                                        "valueEscaped": {
                                          "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                          "type": "boolean"
                                        },
                                        "valueHasWildcard": {
                                          "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                          "type": "boolean"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": {
                                      "description": "The array type, which is `object`.\n",
                                      "enum": [
                                        "object"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "type"
                                  ],
                                  "title": "Object",
                                  "type": "object"
                                }
                              ],
                              "title": "Object match value",
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "nullable": true,
                        "type": "array"
                      },
                      "name": {
                        "description": "The name of the rule.\n",
                        "maxLength": 8192,
                        "nullable": true,
                        "type": "string"
                      },
                      "start": {
                        "default": 0,
                        "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "type": {
                        "description": "The type of Cloudlet the rule is for. For example, the string for Audience Segmentation is `asMatchRule`.\n",
                        "enum": [
                          "asMatchRule"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "type"
                    ],
                    "title": "Audience Segmentation",
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/match-rule-as.yaml"
                    }
                  },
                  {
                    "additionalProperties": false,
                    "description": "Contains match rule information for Phased Release.\n",
                    "properties": {
                      "akaRuleId": {
                        "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                        "readOnly": true,
                        "type": "string"
                      },
                      "disabled": {
                        "default": false,
                        "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                        "type": "boolean"
                      },
                      "end": {
                        "default": 0,
                        "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "forwardSettings": {
                        "additionalProperties": false,
                        "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, and `percent`.\n",
                        "properties": {
                          "originId": {
                            "description": "The conditional origin's unique identifier.\n",
                            "maxLength": 8192,
                            "nullable": true,
                            "type": "string"
                          },
                          "percent": {
                            "description": "The percentage of visitors directed to a different origin.\n",
                            "maximum": 100,
                            "minimum": 0,
                            "type": "number"
                          }
                        },
                        "type": "object"
                      },
                      "id": {
                        "description": "__Read-only__ Akamai internal use only.\n",
                        "nullable": true,
                        "readOnly": true,
                        "type": "integer"
                      },
                      "location": {
                        "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                        "readOnly": true,
                        "type": "string"
                      },
                      "matchURL": {
                        "description": "The URL the Cloudlet uses to match the incoming request.\n",
                        "maxLength": 8192,
                        "nullable": true,
                        "type": "string"
                      },
                      "matches": {
                        "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                        "items": {
                          "additionalProperties": false,
                          "description": "The match rule criteria.\n",
                          "oneOf": [
                            {
                              "required": [
                                "matchType",
                                "matchValue"
                              ],
                              "title": "matchType and matchValue required"
                            },
                            {
                              "required": [
                                "matchType",
                                "objectMatchValue"
                              ],
                              "title": "matchType and objectMatchValue required"
                            }
                          ],
                          "properties": {
                            "caseSensitive": {
                              "description": "If `true`, the match is case sensitive.\n",
                              "type": "boolean"
                            },
                            "checkIPs": {
                              "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                              "enum": [
                                "CONNECTING_IP",
                                "XFF_HEADERS",
                                "CONNECTING_IP XFF_HEADERS"
                              ],
                              "nullable": true,
                              "type": "string"
                            },
                            "matchOperator": {
                              "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                              "enum": [
                                "contains",
                                "exists",
                                "equals"
                              ],
                              "type": "string"
                            },
                            "matchType": {
                              "description": "The type of match used.\n",
                              "enum": [
                                "header",
                                "hostname",
                                "path",
                                "extension",
                                "query",
                                "cookie",
                                "deviceCharacteristics",
                                "clientip",
                                "continent",
                                "countrycode",
                                "regioncode",
                                "protocol",
                                "method",
                                "proxy"
                              ],
                              "type": "string"
                            },
                            "matchValue": {
                              "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                              "maxLength": 8192,
                              "minLength": 1,
                              "type": "string"
                            },
                            "negate": {
                              "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                              "type": "boolean"
                            },
                            "objectMatchValue": {
                              "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                              "oneOf": [
                                {
                                  "additionalProperties": false,
                                  "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                  "properties": {
                                    "type": {
                                      "description": "The object type, which is `simple`.\n",
                                      "enum": [
                                        "simple"
                                      ],
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                      "items": {
                                        "type": "string"
                                      },
                                      "nullable": true,
                                      "type": "array"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "value"
                                  ],
                                  "title": "Simple",
                                  "type": "object"
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Use this for more complex match criteria.\n",
                                  "properties": {
                                    "name": {
                                      "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "nameCaseSensitive": {
                                      "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                      "type": "boolean"
                                    },
                                    "nameHasWildcard": {
                                      "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                      "type": "boolean"
                                    },
                                    "options": {
                                      "additionalProperties": false,
                                      "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                      "properties": {
                                        "value": {
                                          "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                          "items": {
                                            "type": "string"
                                          },
                                          "nullable": true,
                                          "type": "array"
                                        },
                                        "valueCaseSensitive": {
                                          "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                          "type": "boolean"
                                        },
                                        "valueEscaped": {
                                          "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                          "type": "boolean"
                                        },
                                        "valueHasWildcard": {
                                          "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                          "type": "boolean"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": {
                                      "description": "The array type, which is `object`.\n",
                                      "enum": [
                                        "object"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "type"
                                  ],
                                  "title": "Object",
                                  "type": "object"
                                }
                              ],
                              "title": "Object match value",
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "nullable": true,
                        "type": "array"
                      },
                      "matchesAlways": {
                        "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n",
                        "type": "boolean"
                      },
                      "name": {
                        "description": "The name of the rule.\n",
                        "maxLength": 8192,
                        "nullable": true,
                        "type": "string"
                      },
                      "start": {
                        "default": 0,
                        "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "type": {
                        "description": "The type of Cloudlet the rule is for. For example, the string for Phased Release is `cdMatchRule`.\n",
                        "enum": [
                          "cdMatchRule"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "type"
                    ],
                    "title": "Phased Release",
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/match-rule-cd.yaml"
                    }
                  },
                  {
                    "additionalProperties": false,
                    "description": "Contains match rule information for Edge Redirector.\n",
                    "properties": {
                      "akaRuleId": {
                        "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                        "readOnly": true,
                        "type": "string"
                      },
                      "disabled": {
                        "default": false,
                        "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                        "type": "boolean"
                      },
                      "end": {
                        "default": 0,
                        "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "id": {
                        "description": "__Read-only__ Akamai internal use only.\n",
                        "nullable": true,
                        "readOnly": true,
                        "type": "integer"
                      },
                      "location": {
                        "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                        "readOnly": true,
                        "type": "string"
                      },
                      "matchURL": {
                        "description": "The URL the Cloudlet uses to match the incoming request.\n",
                        "maxLength": 8192,
                        "nullable": true,
                        "type": "string"
                      },
                      "matches": {
                        "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                        "items": {
                          "additionalProperties": false,
                          "description": "The match rule criteria.\n",
                          "oneOf": [
                            {
                              "required": [
                                "matchType",
                                "matchValue"
                              ],
                              "title": "matchType and matchValue required"
                            },
                            {
                              "required": [
                                "matchType",
                                "objectMatchValue"
                              ],
                              "title": "matchType and objectMatchValue required"
                            }
                          ],
                          "properties": {
                            "caseSensitive": {
                              "description": "If `true`, the match is case sensitive.\n",
                              "type": "boolean"
                            },
                            "checkIPs": {
                              "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                              "enum": [
                                "CONNECTING_IP",
                                "XFF_HEADERS",
                                "CONNECTING_IP XFF_HEADERS"
                              ],
                              "nullable": true,
                              "type": "string"
                            },
                            "matchOperator": {
                              "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                              "enum": [
                                "contains",
                                "exists",
                                "equals"
                              ],
                              "type": "string"
                            },
                            "matchType": {
                              "description": "The type of match used.\n",
                              "enum": [
                                "header",
                                "hostname",
                                "path",
                                "extension",
                                "query",
                                "regex",
                                "cookie",
                                "deviceCharacteristics",
                                "clientip",
                                "continent",
                                "countrycode",
                                "regioncode",
                                "protocol",
                                "method",
                                "proxy"
                              ],
                              "type": "string"
                            },
                            "matchValue": {
                              "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                              "maxLength": 8192,
                              "minLength": 1,
                              "type": "string"
                            },
                            "negate": {
                              "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                              "type": "boolean"
                            },
                            "objectMatchValue": {
                              "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                              "oneOf": [
                                {
                                  "additionalProperties": false,
                                  "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                  "properties": {
                                    "type": {
                                      "description": "The object type, which is `simple`.\n",
                                      "enum": [
                                        "simple"
                                      ],
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                      "items": {
                                        "type": "string"
                                      },
                                      "nullable": true,
                                      "type": "array"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "value"
                                  ],
                                  "title": "Simple",
                                  "type": "object"
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                  "properties": {
                                    "name": {
                                      "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "nameCaseSensitive": {
                                      "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                      "type": "boolean"
                                    },
                                    "nameHasWildcard": {
                                      "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                      "type": "boolean"
                                    },
                                    "options": {
                                      "additionalProperties": false,
                                      "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                      "properties": {
                                        "value": {
                                          "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                          "items": {
                                            "type": "string"
                                          },
                                          "nullable": true,
                                          "type": "array"
                                        },
                                        "valueCaseSensitive": {
                                          "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                          "type": "boolean"
                                        },
                                        "valueEscaped": {
                                          "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                          "type": "boolean"
                                        },
                                        "valueHasWildcard": {
                                          "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                          "type": "boolean"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": {
                                      "description": "The array type, which is `object`.\n",
                                      "enum": [
                                        "object"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "type"
                                  ],
                                  "title": "Object",
                                  "type": "object"
                                }
                              ],
                              "title": "Object match value",
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "nullable": true,
                        "type": "array"
                      },
                      "matchesAlways": {
                        "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n",
                        "type": "boolean"
                      },
                      "name": {
                        "description": "The name of the rule.\n",
                        "maxLength": 8192,
                        "nullable": true,
                        "type": "string"
                      },
                      "redirectURL": {
                        "description": "The URL Edge Redirector redirects the request to. If using `useRelativeUrl`, you can enter a path for the value. If `useRelativeUrl` is not used or set to `none`, then the `redirectUrl` should be a fully qualified URL.\n",
                        "maxLength": 8192,
                        "minLength": 1,
                        "type": "string"
                      },
                      "start": {
                        "default": 0,
                        "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "statusCode": {
                        "description": "The HTTP response redirect type status code: `301` for permanent redirect, `302` for temporary redirect, `303` for temporary using GET, `307` for temporary retain method, or `308` for permanent retain method.\n",
                        "enum": [
                          301,
                          302,
                          303,
                          307,
                          308
                        ],
                        "type": "integer"
                      },
                      "type": {
                        "description": "The type of Cloudlet the rule is for. For example, the string for Edge Redirector is `erMatchRule`.\n",
                        "enum": [
                          "erMatchRule"
                        ],
                        "type": "string"
                      },
                      "useIncomingQueryString": {
                        "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n",
                        "type": "boolean"
                      },
                      "useIncomingSchemeAndHost": {
                        "description": "If set to `true`, the Cloudlet copies both the scheme and the hostname from the incoming request to use in the redirect URL.\n",
                        "type": "boolean"
                      },
                      "useRelativeUrl": {
                        "description": "If set to `relative_url`, takes the path entered for the `redirectUrl` and sets it in the response’s `Location` header. The client browser receiving the request decides which protocol and hostname to use. If set to `copy_scheme_hostname`, it creates an absolute path by taking the protocol and hostname from the incoming request and combining them with path information entered for the `redirectUrl`. This absolute path is set in the response’s `Location` header. If you don't include `useRelativeUrl`, or if you set it to `none`, then specify the `redirectUrl` as a fully qualified URL.\n",
                        "enum": [
                          "relative_url",
                          "copy_scheme_hostname",
                          "none"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "redirectURL",
                      "statusCode"
                    ],
                    "title": "Edge Redirector",
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/match-rule-er.yaml"
                    }
                  },
                  {
                    "additionalProperties": false,
                    "description": "Contains match rule information for Forward Rewrite.\n",
                    "properties": {
                      "akaRuleId": {
                        "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                        "readOnly": true,
                        "type": "string"
                      },
                      "disabled": {
                        "default": false,
                        "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                        "type": "boolean"
                      },
                      "end": {
                        "default": 0,
                        "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "forwardSettings": {
                        "additionalProperties": false,
                        "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                        "properties": {
                          "originId": {
                            "description": "The conditional origin's unique identifier.\n",
                            "maxLength": 8192,
                            "nullable": true,
                            "type": "string"
                          },
                          "pathAndQS": {
                            "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                            "maxLength": 8192,
                            "minLength": 1,
                            "type": "string"
                          },
                          "useIncomingQueryString": {
                            "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n",
                            "type": "boolean"
                          }
                        },
                        "type": "object"
                      },
                      "id": {
                        "description": "__Read-only__ Akamai internal use only.\n",
                        "nullable": true,
                        "readOnly": true,
                        "type": "integer"
                      },
                      "location": {
                        "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                        "readOnly": true,
                        "type": "string"
                      },
                      "matchURL": {
                        "description": "The URL the Cloudlet uses to match the incoming request.\n",
                        "maxLength": 8192,
                        "nullable": true,
                        "type": "string"
                      },
                      "matches": {
                        "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                        "items": {
                          "additionalProperties": false,
                          "description": "The match rule criteria.\n",
                          "oneOf": [
                            {
                              "required": [
                                "matchType",
                                "matchValue"
                              ],
                              "title": "matchType and matchValue required"
                            },
                            {
                              "required": [
                                "matchType",
                                "objectMatchValue"
                              ],
                              "title": "matchType and objectMatchValue required"
                            }
                          ],
                          "properties": {
                            "caseSensitive": {
                              "description": "If `true`, the match is case sensitive.\n",
                              "type": "boolean"
                            },
                            "checkIPs": {
                              "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                              "enum": [
                                "CONNECTING_IP",
                                "XFF_HEADERS",
                                "CONNECTING_IP XFF_HEADERS"
                              ],
                              "type": "string"
                            },
                            "matchOperator": {
                              "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                              "enum": [
                                "contains",
                                "exists",
                                "equals"
                              ],
                              "type": "string"
                            },
                            "matchType": {
                              "description": "The type of match used.\n",
                              "enum": [
                                "header",
                                "hostname",
                                "path",
                                "extension",
                                "query",
                                "regex",
                                "cookie",
                                "deviceCharacteristics",
                                "clientip",
                                "continent",
                                "countrycode",
                                "regioncode",
                                "protocol",
                                "method",
                                "proxy"
                              ],
                              "type": "string"
                            },
                            "matchValue": {
                              "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                              "maxLength": 8192,
                              "minLength": 1,
                              "type": "string"
                            },
                            "negate": {
                              "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                              "type": "boolean"
                            },
                            "objectMatchValue": {
                              "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                              "oneOf": [
                                {
                                  "additionalProperties": false,
                                  "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                  "properties": {
                                    "type": {
                                      "description": "The object type, which is `simple`.\n",
                                      "enum": [
                                        "simple"
                                      ],
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                      "items": {
                                        "type": "string"
                                      },
                                      "nullable": true,
                                      "type": "array"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "value"
                                  ],
                                  "title": "Simple",
                                  "type": "object"
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                  "properties": {
                                    "name": {
                                      "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "nameCaseSensitive": {
                                      "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                      "type": "boolean"
                                    },
                                    "nameHasWildcard": {
                                      "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                      "type": "boolean"
                                    },
                                    "options": {
                                      "additionalProperties": false,
                                      "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                      "properties": {
                                        "value": {
                                          "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                          "items": {
                                            "type": "string"
                                          },
                                          "nullable": true,
                                          "type": "array"
                                        },
                                        "valueCaseSensitive": {
                                          "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                          "type": "boolean"
                                        },
                                        "valueEscaped": {
                                          "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                          "type": "boolean"
                                        },
                                        "valueHasWildcard": {
                                          "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                          "type": "boolean"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": {
                                      "description": "The array type, which is `object`.\n",
                                      "enum": [
                                        "object"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "type"
                                  ],
                                  "title": "Object",
                                  "type": "object"
                                }
                              ],
                              "title": "Object match value",
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "nullable": true,
                        "type": "array"
                      },
                      "name": {
                        "description": "The name of the rule.\n",
                        "maxLength": 8192,
                        "nullable": true,
                        "type": "string"
                      },
                      "start": {
                        "default": 0,
                        "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "type": {
                        "description": "The type of Cloudlet the rule is for. For example, the string for Forward Rewrite is `frMatchRule`.\n",
                        "enum": [
                          "frMatchRule"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "forwardSettings"
                    ],
                    "title": "Forward Rewrite",
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/match-rule-fr.yaml"
                    }
                  },
                  {
                    "additionalProperties": false,
                    "description": "Contains match rule information for Request Control.\n",
                    "properties": {
                      "akaRuleId": {
                        "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                        "readOnly": true,
                        "type": "string"
                      },
                      "allowDeny": {
                        "description": "If set to `allow`, the request is sent to origin when all conditions are true. If `deny`, the request is denied when all conditions are true. If `denybranded`, the request is denied and rerouted according to the configuration of the [Request Control behavior](https://techdocs.akamai.com/property-mgr/reference/latest-request-control).\n",
                        "enum": [
                          "allow",
                          "deny",
                          "denybranded"
                        ],
                        "type": "string"
                      },
                      "disabled": {
                        "default": false,
                        "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                        "type": "boolean"
                      },
                      "end": {
                        "default": 0,
                        "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "id": {
                        "description": "__Read-only__ Akamai internal use only.\n",
                        "nullable": true,
                        "readOnly": true,
                        "type": "integer"
                      },
                      "location": {
                        "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                        "readOnly": true,
                        "type": "string"
                      },
                      "matches": {
                        "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                        "items": {
                          "additionalProperties": false,
                          "description": "The match rule criteria.\n",
                          "oneOf": [
                            {
                              "required": [
                                "matchType",
                                "matchValue"
                              ],
                              "title": "matchType and matchValue required"
                            },
                            {
                              "required": [
                                "matchType",
                                "objectMatchValue"
                              ],
                              "title": "matchType and objectMatchValue required"
                            }
                          ],
                          "properties": {
                            "caseSensitive": {
                              "description": "If `true`, the match is case sensitive.\n",
                              "type": "boolean"
                            },
                            "checkIPs": {
                              "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                              "enum": [
                                "CONNECTING_IP",
                                "XFF_HEADERS",
                                "CONNECTING_IP XFF_HEADERS"
                              ],
                              "type": "string"
                            },
                            "matchOperator": {
                              "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                              "enum": [
                                "contains",
                                "exists",
                                "equals"
                              ],
                              "type": "string"
                            },
                            "matchType": {
                              "description": "The type of match used.\n",
                              "enum": [
                                "clientip",
                                "continent",
                                "cookie",
                                "countrycode",
                                "deviceCharacteristics",
                                "extension",
                                "header",
                                "hostname",
                                "method",
                                "path",
                                "protocol",
                                "proxy",
                                "query",
                                "regioncode"
                              ],
                              "type": "string"
                            },
                            "matchValue": {
                              "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                              "maxLength": 8192,
                              "minLength": 1,
                              "type": "string"
                            },
                            "negate": {
                              "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                              "type": "boolean"
                            },
                            "objectMatchValue": {
                              "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                              "oneOf": [
                                {
                                  "additionalProperties": false,
                                  "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                  "properties": {
                                    "type": {
                                      "description": "The object type, which is `simple`.\n",
                                      "enum": [
                                        "simple"
                                      ],
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                      "items": {
                                        "type": "string"
                                      },
                                      "nullable": true,
                                      "type": "array"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "value"
                                  ],
                                  "title": "Simple",
                                  "type": "object"
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                  "properties": {
                                    "name": {
                                      "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "nameCaseSensitive": {
                                      "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                      "type": "boolean"
                                    },
                                    "nameHasWildcard": {
                                      "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                      "type": "boolean"
                                    },
                                    "options": {
                                      "additionalProperties": false,
                                      "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                      "properties": {
                                        "value": {
                                          "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                          "items": {
                                            "type": "string"
                                          },
                                          "nullable": true,
                                          "type": "array"
                                        },
                                        "valueCaseSensitive": {
                                          "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                          "type": "boolean"
                                        },
                                        "valueEscaped": {
                                          "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                          "type": "boolean"
                                        },
                                        "valueHasWildcard": {
                                          "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                          "type": "boolean"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": {
                                      "description": "The array type, which is `object`.\n",
                                      "enum": [
                                        "object"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "type"
                                  ],
                                  "title": "Object",
                                  "type": "object"
                                }
                              ],
                              "title": "Object match value",
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "nullable": true,
                        "type": "array"
                      },
                      "matchesAlways": {
                        "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n",
                        "type": "boolean"
                      },
                      "name": {
                        "description": "The name of the rule.\n",
                        "maxLength": 8192,
                        "nullable": true,
                        "type": "string"
                      },
                      "start": {
                        "default": 0,
                        "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "type": {
                        "description": "The type of Cloudlet the rule is for. For example, the string for Request Control is `igMatchRule`.\n",
                        "enum": [
                          "igMatchRule"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "allowDeny"
                    ],
                    "title": "Request Control",
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/match-rule-ig.yaml"
                    }
                  },
                  {
                    "type": "object",
                    "description": "Contains match rule information for Visitor Prioritization.\n",
                    "title": "Visitor Prioritization",
                    "additionalProperties": false,
                    "required": [
                      "type",
                      "passThroughPercent"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "Akamai internal use only.\n",
                        "nullable": true,
                        "readOnly": true
                      },
                      "location": {
                        "type": "string",
                        "description": "The navigable endpoint used for the object referred to in the operation.\n",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the rule.\n",
                        "nullable": true,
                        "maxLength": 8192
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of Cloudlet the rule is for. For example, the string for Visitor Prioritization is `vpMatchRule`.\n",
                        "enum": [
                          "vpMatchRule"
                        ]
                      },
                      "akaRuleId": {
                        "type": "string",
                        "description": "The rule's unique identifier within the policy version.\n",
                        "readOnly": true
                      },
                      "start": {
                        "type": "integer",
                        "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                        "default": 0,
                        "minimum": 0
                      },
                      "end": {
                        "type": "integer",
                        "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                        "default": 0,
                        "minimum": 0
                      },
                      "matches": {
                        "type": "array",
                        "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                        "nullable": true,
                        "items": {
                          "type": "object",
                          "description": "The match rule criteria.\n",
                          "additionalProperties": false,
                          "oneOf": [
                            {
                              "required": [
                                "matchType",
                                "matchValue"
                              ],
                              "title": "matchType and matchValue required"
                            },
                            {
                              "required": [
                                "matchType",
                                "objectMatchValue"
                              ],
                              "title": "matchType and objectMatchValue required"
                            }
                          ],
                          "properties": {
                            "caseSensitive": {
                              "type": "boolean",
                              "description": "If `true`, the match is case sensitive.\n"
                            },
                            "matchValue": {
                              "type": "string",
                              "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                              "minLength": 1,
                              "maxLength": 8192
                            },
                            "negate": {
                              "type": "boolean",
                              "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                            },
                            "matchOperator": {
                              "type": "string",
                              "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                              "enum": [
                                "contains",
                                "exists",
                                "equals"
                              ]
                            },
                            "matchType": {
                              "type": "string",
                              "description": "The type of match used.\n",
                              "enum": [
                                "hostname",
                                "path",
                                "extension",
                                "query",
                                "cookie",
                                "deviceCharacteristics",
                                "clientip",
                                "continent",
                                "countrycode",
                                "regioncode",
                                "protocol",
                                "header",
                                "method",
                                "proxy"
                              ]
                            },
                            "checkIPs": {
                              "type": "string",
                              "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                              "enum": [
                                "CONNECTING_IP",
                                "XFF_HEADERS",
                                "CONNECTING_IP XFF_HEADERS"
                              ]
                            },
                            "objectMatchValue": {
                              "type": "object",
                              "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                              "title": "Object match value",
                              "oneOf": [
                                {
                                  "type": "object",
                                  "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                  "title": "Simple",
                                  "additionalProperties": false,
                                  "required": [
                                    "type",
                                    "value"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "description": "The object type, which is `simple`.\n",
                                      "enum": [
                                        "simple"
                                      ]
                                    },
                                    "value": {
                                      "type": "array",
                                      "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                      "nullable": true,
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                  "title": "Object",
                                  "additionalProperties": false,
                                  "required": [
                                    "name",
                                    "type"
                                  ],
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                      "minLength": 1,
                                      "maxLength": 8192
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "The array type, which is `object`.\n",
                                      "enum": [
                                        "object"
                                      ]
                                    },
                                    "options": {
                                      "type": "object",
                                      "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                      "additionalProperties": false,
                                      "properties": {
                                        "value": {
                                          "type": "array",
                                          "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                          "nullable": true,
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "valueHasWildcard": {
                                          "type": "boolean",
                                          "description": "Set to `true` if the entries for `value` includes wildcards.\n"
                                        },
                                        "valueCaseSensitive": {
                                          "type": "boolean",
                                          "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n"
                                        },
                                        "valueEscaped": {
                                          "type": "boolean",
                                          "description": "Set to `true` if the entries for `value` includes escaped characters.\n"
                                        }
                                      }
                                    },
                                    "nameCaseSensitive": {
                                      "type": "boolean",
                                      "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                    },
                                    "nameHasWildcard": {
                                      "type": "boolean",
                                      "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      },
                      "disabled": {
                        "type": "boolean",
                        "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                        "default": false
                      },
                      "passThroughPercent": {
                        "type": "number",
                        "description": "The range `0.000: 99.000` specifies the percentage of requests that pass through to the origin. The value of `100` means the request always passes through to the origin. For Visitor Prioritization, a value of `-1` means send everyone to the waiting room.\n",
                        "minimum": -1,
                        "maximum": 100
                      },
                      "matchURL": {
                        "type": "string",
                        "description": "The URL the Cloudlet uses to match the incoming request.\n",
                        "nullable": true,
                        "maxLength": 8192
                      },
                      "useIncomingQueryString": {
                        "type": "boolean",
                        "description": "If set to `true`, the Cloudlet includes the request's query string in the rewritten or forwarded URL.\n"
                      }
                    }
                  }
                ]
              },
              "type": "array",
              "x-akamai": {
                "file-path": "schemas/match-rules.yaml"
              }
            },
            "policyId": {
              "description": "ID of the policy the version is associated to.\n",
              "type": "integer"
            },
            "revisionId": {
              "description": "ID of the revision.\n",
              "type": "integer"
            },
            "rulesLocked": {
              "description": "Flag determining whether the rules are locked or not.\n",
              "type": "boolean"
            },
            "version": {
              "description": "Version of the policy.\n",
              "type": "integer"
            }
          },
          "required": [
            "activations",
            "createdBy",
            "createDate",
            "deleted",
            "description",
            "lastModifiedBy",
            "lastModifiedDate",
            "location",
            "matchRuleFormat",
            "matchRules",
            "policyId",
            "revisionId",
            "rulesLocked",
            "version"
          ],
          "type": "object",
          "x-akamai": {
            "file-path": "schemas/policy-version.yaml"
          }
        },
        "type": "array",
        "x-akamai": {
          "file-path": "schemas/get-policy-versions-response.yaml"
        }
      },
      "post-policy-versions-request": {
        "additionalProperties": false,
        "description": "TBD.\n",
        "properties": {
          "description": {
            "description": "Description of the policy version.\n",
            "type": "string"
          },
          "matchRuleFormat": {
            "description": "The version of the `matchRules` format.\n",
            "type": "string"
          },
          "matchRules": {
            "description": "A list of Cloudlet-specific match rules for this policy.\n",
            "items": {
              "description": "Contains information about match rules.\n",
              "oneOf": [
                {
                  "type": "object",
                  "description": "Contains match rule information for Application Load Balancer.\n",
                  "title": "Application Load Balancer",
                  "additionalProperties": false,
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Akamai internal use only.\n",
                      "nullable": true,
                      "readOnly": true
                    },
                    "location": {
                      "type": "string",
                      "description": "The navigable endpoint used for the object referred to in the operation.\n",
                      "readOnly": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the rule.\n",
                      "nullable": true,
                      "maxLength": 8192
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of Cloudlet the rule is for. For example, the string for Application Load Balancer is `albMatchRule`.\n",
                      "enum": [
                        "albMatchRule"
                      ]
                    },
                    "akaRuleId": {
                      "type": "string",
                      "description": "The rule's unique identifier within the policy version.\n",
                      "readOnly": true
                    },
                    "disabled": {
                      "type": "boolean",
                      "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                      "default": false
                    },
                    "start": {
                      "type": "integer",
                      "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                      "default": 0,
                      "minimum": 0
                    },
                    "end": {
                      "type": "integer",
                      "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                      "default": 0,
                      "minimum": 0
                    },
                    "matchURL": {
                      "type": "string",
                      "description": "The URL the Cloudlet uses to match the incoming request.\n",
                      "nullable": true,
                      "maxLength": 8192
                    },
                    "matches": {
                      "type": "array",
                      "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                      "nullable": true,
                      "items": {
                        "type": "object",
                        "description": "The match rule criteria.\n",
                        "additionalProperties": false,
                        "oneOf": [
                          {
                            "required": [
                              "matchType",
                              "matchValue"
                            ],
                            "title": "matchType and matchValue required"
                          },
                          {
                            "required": [
                              "matchType",
                              "objectMatchValue"
                            ],
                            "title": "matchType and objectMatchValue required"
                          }
                        ],
                        "properties": {
                          "caseSensitive": {
                            "type": "boolean",
                            "description": "If `true`, the match is case sensitive.\n"
                          },
                          "checkIPs": {
                            "type": "string",
                            "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                            "nullable": true,
                            "enum": [
                              "CONNECTING_IP",
                              "XFF_HEADERS",
                              "CONNECTING_IP XFF_HEADERS"
                            ]
                          },
                          "matchOperator": {
                            "type": "string",
                            "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                            "enum": [
                              "contains",
                              "exists",
                              "equals"
                            ]
                          },
                          "matchType": {
                            "type": "string",
                            "description": "The type of match used.\n",
                            "enum": [
                              "header",
                              "hostname",
                              "path",
                              "extension",
                              "query",
                              "regex",
                              "cookie",
                              "deviceCharacteristics",
                              "clientip",
                              "continent",
                              "countrycode",
                              "regioncode",
                              "protocol",
                              "method",
                              "proxy"
                            ]
                          },
                          "matchValue": {
                            "type": "string",
                            "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                            "minLength": 1,
                            "maxLength": 8192
                          },
                          "negate": {
                            "type": "boolean",
                            "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                          },
                          "objectMatchValue": {
                            "type": "object",
                            "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                            "title": "Object match value",
                            "oneOf": [
                              {
                                "type": "object",
                                "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                "title": "Simple",
                                "additionalProperties": false,
                                "required": [
                                  "type",
                                  "value"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "description": "The object type, which is `simple`.\n",
                                    "enum": [
                                      "simple"
                                    ]
                                  },
                                  "value": {
                                    "type": "array",
                                    "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                    "nullable": true,
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "description": "Use this for more complex match criteria.\n",
                                "title": "Object",
                                "additionalProperties": false,
                                "required": [
                                  "name",
                                  "type"
                                ],
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                    "minLength": 1,
                                    "maxLength": 8192
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "The array type, which is `object`.\n",
                                    "enum": [
                                      "object"
                                    ]
                                  },
                                  "options": {
                                    "type": "object",
                                    "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                    "additionalProperties": false,
                                    "properties": {
                                      "value": {
                                        "type": "array",
                                        "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "nullable": true,
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "valueCaseSensitive": {
                                        "type": "boolean",
                                        "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n"
                                      },
                                      "valueEscaped": {
                                        "type": "boolean",
                                        "description": "Set to `true` if the entries for `value` includes escaped characters.\n"
                                      },
                                      "valueHasWildcard": {
                                        "type": "boolean",
                                        "description": "Set to `true` if the entries for `value` includes wildcards.\n"
                                      }
                                    }
                                  },
                                  "nameCaseSensitive": {
                                    "type": "boolean",
                                    "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                  },
                                  "nameHasWildcard": {
                                    "type": "boolean",
                                    "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    },
                    "matchesAlways": {
                      "type": "boolean",
                      "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n"
                    },
                    "forwardSettings": {
                      "type": "object",
                      "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                      "additionalProperties": false,
                      "properties": {
                        "pathAndQS": {
                          "type": "string",
                          "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                          "minLength": 1,
                          "maxLength": 8192
                        },
                        "useIncomingQueryString": {
                          "type": "boolean",
                          "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n"
                        },
                        "originId": {
                          "type": "string",
                          "description": "The conditional origin's unique identifier.\n",
                          "nullable": true,
                          "maxLength": 8192
                        }
                      }
                    }
                  }
                },
                {
                  "additionalProperties": false,
                  "description": "Contains match rule information for API Prioritization.\n",
                  "properties": {
                    "akaRuleId": {
                      "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "disabled": {
                      "default": false,
                      "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                      "type": "boolean"
                    },
                    "end": {
                      "default": 0,
                      "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "id": {
                      "description": "__Read-only__ Akamai internal use only.\n",
                      "nullable": true,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "location": {
                      "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "matchURL": {
                      "description": "The URL the Cloudlet uses to match the incoming request.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "matches": {
                      "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                      "items": {
                        "additionalProperties": false,
                        "description": "The match rule criteria.\n",
                        "oneOf": [
                          {
                            "required": [
                              "matchType",
                              "matchValue"
                            ],
                            "title": "matchType and matchValue required"
                          },
                          {
                            "required": [
                              "matchType",
                              "objectMatchValue"
                            ],
                            "title": "matchType and objectMatchValue required"
                          }
                        ],
                        "properties": {
                          "caseSensitive": {
                            "description": "If `true`, the match is case sensitive.\n",
                            "type": "boolean"
                          },
                          "checkIPs": {
                            "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                            "enum": [
                              "CONNECTING_IP",
                              "XFF_HEADERS",
                              "CONNECTING_IP XFF_HEADERS"
                            ],
                            "type": "string"
                          },
                          "matchOperator": {
                            "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                            "enum": [
                              "contains",
                              "exists",
                              "equals"
                            ],
                            "type": "string"
                          },
                          "matchType": {
                            "description": "The type of match used.\n",
                            "enum": [
                              "hostname",
                              "path",
                              "extension",
                              "query",
                              "cookie",
                              "deviceCharacteristics",
                              "clientip",
                              "continent",
                              "countrycode",
                              "regioncode",
                              "protocol",
                              "header",
                              "method",
                              "proxy"
                            ],
                            "type": "string"
                          },
                          "matchValue": {
                            "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                            "maxLength": 8192,
                            "minLength": 1,
                            "type": "string"
                          },
                          "negate": {
                            "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                            "type": "boolean"
                          },
                          "objectMatchValue": {
                            "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                            "oneOf": [
                              {
                                "additionalProperties": false,
                                "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                "properties": {
                                  "type": {
                                    "description": "The object type, which is `simple`.\n",
                                    "enum": [
                                      "simple"
                                    ],
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                    "items": {
                                      "type": "string"
                                    },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                },
                                "required": [
                                  "type",
                                  "value"
                                ],
                                "title": "Simple",
                                "type": "object"
                              },
                              {
                                "additionalProperties": false,
                                "description": "Use this for more complex match criteria.\n",
                                "properties": {
                                  "name": {
                                    "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "nameCaseSensitive": {
                                    "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                    "type": "boolean"
                                  },
                                  "nameHasWildcard": {
                                    "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                    "type": "boolean"
                                  },
                                  "options": {
                                    "additionalProperties": false,
                                    "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                    "properties": {
                                      "value": {
                                        "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "items": {
                                          "type": "string"
                                        },
                                        "nullable": true,
                                        "type": "array"
                                      },
                                      "valueCaseSensitive": {
                                        "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                        "type": "boolean"
                                      },
                                      "valueEscaped": {
                                        "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                        "type": "boolean"
                                      },
                                      "valueHasWildcard": {
                                        "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                        "type": "boolean"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": {
                                    "description": "The array type, which is `object`.\n",
                                    "enum": [
                                      "object"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "type"
                                ],
                                "title": "Object",
                                "type": "object"
                              }
                            ],
                            "title": "Object match value",
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "nullable": true,
                      "type": "array"
                    },
                    "name": {
                      "description": "The name of the rule.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "passThroughPercent": {
                      "description": "The percentage of requests that pass through to the origin, with `100` indicating the request always passes through to the origin. For Visitor Prioritization, a value of -1 sends everyone to the waiting room.\n",
                      "maximum": 100,
                      "minimum": -1,
                      "type": "number"
                    },
                    "start": {
                      "default": 0,
                      "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "type": {
                      "description": "The type of Cloudlet the rule is for. For example, the string for API Prioritization is `apMatchRule`.\n",
                      "enum": [
                        "apMatchRule"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "type",
                    "passThroughPercent"
                  ],
                  "title": "API Prioritization",
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/match-rule-ap.yaml"
                  }
                },
                {
                  "additionalProperties": false,
                  "description": "Contains match rule information for Audience Segmentation.\n",
                  "properties": {
                    "akaRuleId": {
                      "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "disabled": {
                      "default": false,
                      "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                      "type": "boolean"
                    },
                    "end": {
                      "default": 0,
                      "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "forwardSettings": {
                      "additionalProperties": false,
                      "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                      "properties": {
                        "originId": {
                          "description": "The conditional origin's unique identifier.\n",
                          "maxLength": 8192,
                          "nullable": true,
                          "type": "string"
                        },
                        "pathAndQS": {
                          "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                          "maxLength": 8192,
                          "minLength": 1,
                          "type": "string"
                        },
                        "useIncomingQueryString": {
                          "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n",
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "id": {
                      "description": "__Read-only__ Akamai internal use only.\n",
                      "nullable": true,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "location": {
                      "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "matchURL": {
                      "description": "The URL the Cloudlet uses to match the incoming request.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "matches": {
                      "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                      "items": {
                        "additionalProperties": false,
                        "description": "The match rule criteria.\n",
                        "oneOf": [
                          {
                            "required": [
                              "matchType",
                              "matchValue"
                            ],
                            "title": "matchType and matchValue required"
                          },
                          {
                            "required": [
                              "matchType",
                              "objectMatchValue"
                            ],
                            "title": "matchType and objectMatchValue required"
                          }
                        ],
                        "properties": {
                          "caseSensitive": {
                            "description": "If `true`, the match is case sensitive.\n",
                            "type": "boolean"
                          },
                          "checkIPs": {
                            "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                            "enum": [
                              "CONNECTING_IP",
                              "XFF_HEADERS",
                              "CONNECTING_IP XFF_HEADERS"
                            ],
                            "type": "string"
                          },
                          "matchOperator": {
                            "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                            "enum": [
                              "contains",
                              "exists",
                              "equals"
                            ],
                            "type": "string"
                          },
                          "matchType": {
                            "description": "The type of match used.\n",
                            "enum": [
                              "header",
                              "hostname",
                              "path",
                              "extension",
                              "query",
                              "range",
                              "regex",
                              "cookie",
                              "deviceCharacteristics",
                              "clientip",
                              "continent",
                              "countrycode",
                              "regioncode",
                              "protocol",
                              "method",
                              "proxy"
                            ],
                            "type": "string"
                          },
                          "matchValue": {
                            "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                            "maxLength": 8192,
                            "minLength": 1,
                            "type": "string"
                          },
                          "negate": {
                            "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                            "type": "boolean"
                          },
                          "objectMatchValue": {
                            "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.\n",
                            "oneOf": [
                              {
                                "additionalProperties": false,
                                "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.\n",
                                "properties": {
                                  "type": {
                                    "description": "The object type, which is `range`.\n",
                                    "enum": [
                                      "range"
                                    ],
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "An inclusive range comprised of two numbers to match on.\n",
                                    "items": {
                                      "type": "integer"
                                    },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                },
                                "required": [
                                  "type",
                                  "value"
                                ],
                                "title": "Range",
                                "type": "object"
                              },
                              {
                                "additionalProperties": false,
                                "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                "properties": {
                                  "type": {
                                    "description": "The object type, which is `simple`.\n",
                                    "enum": [
                                      "simple"
                                    ],
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                    "items": {
                                      "type": "string"
                                    },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                },
                                "required": [
                                  "type",
                                  "value"
                                ],
                                "title": "Simple",
                                "type": "object"
                              },
                              {
                                "additionalProperties": false,
                                "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                "properties": {
                                  "name": {
                                    "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "nameCaseSensitive": {
                                    "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                    "type": "boolean"
                                  },
                                  "nameHasWildcard": {
                                    "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                    "type": "boolean"
                                  },
                                  "options": {
                                    "additionalProperties": false,
                                    "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                    "properties": {
                                      "value": {
                                        "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "items": {
                                          "type": "string"
                                        },
                                        "nullable": true,
                                        "type": "array"
                                      },
                                      "valueCaseSensitive": {
                                        "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                        "type": "boolean"
                                      },
                                      "valueEscaped": {
                                        "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                        "type": "boolean"
                                      },
                                      "valueHasWildcard": {
                                        "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                        "type": "boolean"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": {
                                    "description": "The array type, which is `object`.\n",
                                    "enum": [
                                      "object"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "type"
                                ],
                                "title": "Object",
                                "type": "object"
                              }
                            ],
                            "title": "Object match value",
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "nullable": true,
                      "type": "array"
                    },
                    "name": {
                      "description": "The name of the rule.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "start": {
                      "default": 0,
                      "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "type": {
                      "description": "The type of Cloudlet the rule is for. For example, the string for Audience Segmentation is `asMatchRule`.\n",
                      "enum": [
                        "asMatchRule"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "type"
                  ],
                  "title": "Audience Segmentation",
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/match-rule-as.yaml"
                  }
                },
                {
                  "additionalProperties": false,
                  "description": "Contains match rule information for Phased Release.\n",
                  "properties": {
                    "akaRuleId": {
                      "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "disabled": {
                      "default": false,
                      "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                      "type": "boolean"
                    },
                    "end": {
                      "default": 0,
                      "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "forwardSettings": {
                      "additionalProperties": false,
                      "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, and `percent`.\n",
                      "properties": {
                        "originId": {
                          "description": "The conditional origin's unique identifier.\n",
                          "maxLength": 8192,
                          "nullable": true,
                          "type": "string"
                        },
                        "percent": {
                          "description": "The percentage of visitors directed to a different origin.\n",
                          "maximum": 100,
                          "minimum": 0,
                          "type": "number"
                        }
                      },
                      "type": "object"
                    },
                    "id": {
                      "description": "__Read-only__ Akamai internal use only.\n",
                      "nullable": true,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "location": {
                      "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "matchURL": {
                      "description": "The URL the Cloudlet uses to match the incoming request.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "matches": {
                      "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                      "items": {
                        "additionalProperties": false,
                        "description": "The match rule criteria.\n",
                        "oneOf": [
                          {
                            "required": [
                              "matchType",
                              "matchValue"
                            ],
                            "title": "matchType and matchValue required"
                          },
                          {
                            "required": [
                              "matchType",
                              "objectMatchValue"
                            ],
                            "title": "matchType and objectMatchValue required"
                          }
                        ],
                        "properties": {
                          "caseSensitive": {
                            "description": "If `true`, the match is case sensitive.\n",
                            "type": "boolean"
                          },
                          "checkIPs": {
                            "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                            "enum": [
                              "CONNECTING_IP",
                              "XFF_HEADERS",
                              "CONNECTING_IP XFF_HEADERS"
                            ],
                            "nullable": true,
                            "type": "string"
                          },
                          "matchOperator": {
                            "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                            "enum": [
                              "contains",
                              "exists",
                              "equals"
                            ],
                            "type": "string"
                          },
                          "matchType": {
                            "description": "The type of match used.\n",
                            "enum": [
                              "header",
                              "hostname",
                              "path",
                              "extension",
                              "query",
                              "cookie",
                              "deviceCharacteristics",
                              "clientip",
                              "continent",
                              "countrycode",
                              "regioncode",
                              "protocol",
                              "method",
                              "proxy"
                            ],
                            "type": "string"
                          },
                          "matchValue": {
                            "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                            "maxLength": 8192,
                            "minLength": 1,
                            "type": "string"
                          },
                          "negate": {
                            "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                            "type": "boolean"
                          },
                          "objectMatchValue": {
                            "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                            "oneOf": [
                              {
                                "additionalProperties": false,
                                "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                "properties": {
                                  "type": {
                                    "description": "The object type, which is `simple`.\n",
                                    "enum": [
                                      "simple"
                                    ],
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                    "items": {
                                      "type": "string"
                                    },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                },
                                "required": [
                                  "type",
                                  "value"
                                ],
                                "title": "Simple",
                                "type": "object"
                              },
                              {
                                "additionalProperties": false,
                                "description": "Use this for more complex match criteria.\n",
                                "properties": {
                                  "name": {
                                    "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "nameCaseSensitive": {
                                    "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                    "type": "boolean"
                                  },
                                  "nameHasWildcard": {
                                    "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                    "type": "boolean"
                                  },
                                  "options": {
                                    "additionalProperties": false,
                                    "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                    "properties": {
                                      "value": {
                                        "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "items": {
                                          "type": "string"
                                        },
                                        "nullable": true,
                                        "type": "array"
                                      },
                                      "valueCaseSensitive": {
                                        "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                        "type": "boolean"
                                      },
                                      "valueEscaped": {
                                        "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                        "type": "boolean"
                                      },
                                      "valueHasWildcard": {
                                        "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                        "type": "boolean"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": {
                                    "description": "The array type, which is `object`.\n",
                                    "enum": [
                                      "object"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "type"
                                ],
                                "title": "Object",
                                "type": "object"
                              }
                            ],
                            "title": "Object match value",
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "nullable": true,
                      "type": "array"
                    },
                    "matchesAlways": {
                      "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n",
                      "type": "boolean"
                    },
                    "name": {
                      "description": "The name of the rule.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "start": {
                      "default": 0,
                      "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "type": {
                      "description": "The type of Cloudlet the rule is for. For example, the string for Phased Release is `cdMatchRule`.\n",
                      "enum": [
                        "cdMatchRule"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "type"
                  ],
                  "title": "Phased Release",
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/match-rule-cd.yaml"
                  }
                },
                {
                  "additionalProperties": false,
                  "description": "Contains match rule information for Edge Redirector.\n",
                  "properties": {
                    "akaRuleId": {
                      "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "disabled": {
                      "default": false,
                      "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                      "type": "boolean"
                    },
                    "end": {
                      "default": 0,
                      "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "id": {
                      "description": "__Read-only__ Akamai internal use only.\n",
                      "nullable": true,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "location": {
                      "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "matchURL": {
                      "description": "The URL the Cloudlet uses to match the incoming request.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "matches": {
                      "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                      "items": {
                        "additionalProperties": false,
                        "description": "The match rule criteria.\n",
                        "oneOf": [
                          {
                            "required": [
                              "matchType",
                              "matchValue"
                            ],
                            "title": "matchType and matchValue required"
                          },
                          {
                            "required": [
                              "matchType",
                              "objectMatchValue"
                            ],
                            "title": "matchType and objectMatchValue required"
                          }
                        ],
                        "properties": {
                          "caseSensitive": {
                            "description": "If `true`, the match is case sensitive.\n",
                            "type": "boolean"
                          },
                          "checkIPs": {
                            "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                            "enum": [
                              "CONNECTING_IP",
                              "XFF_HEADERS",
                              "CONNECTING_IP XFF_HEADERS"
                            ],
                            "nullable": true,
                            "type": "string"
                          },
                          "matchOperator": {
                            "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                            "enum": [
                              "contains",
                              "exists",
                              "equals"
                            ],
                            "type": "string"
                          },
                          "matchType": {
                            "description": "The type of match used.\n",
                            "enum": [
                              "header",
                              "hostname",
                              "path",
                              "extension",
                              "query",
                              "regex",
                              "cookie",
                              "deviceCharacteristics",
                              "clientip",
                              "continent",
                              "countrycode",
                              "regioncode",
                              "protocol",
                              "method",
                              "proxy"
                            ],
                            "type": "string"
                          },
                          "matchValue": {
                            "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                            "maxLength": 8192,
                            "minLength": 1,
                            "type": "string"
                          },
                          "negate": {
                            "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                            "type": "boolean"
                          },
                          "objectMatchValue": {
                            "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                            "oneOf": [
                              {
                                "additionalProperties": false,
                                "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                "properties": {
                                  "type": {
                                    "description": "The object type, which is `simple`.\n",
                                    "enum": [
                                      "simple"
                                    ],
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                    "items": {
                                      "type": "string"
                                    },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                },
                                "required": [
                                  "type",
                                  "value"
                                ],
                                "title": "Simple",
                                "type": "object"
                              },
                              {
                                "additionalProperties": false,
                                "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                "properties": {
                                  "name": {
                                    "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "nameCaseSensitive": {
                                    "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                    "type": "boolean"
                                  },
                                  "nameHasWildcard": {
                                    "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                    "type": "boolean"
                                  },
                                  "options": {
                                    "additionalProperties": false,
                                    "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                    "properties": {
                                      "value": {
                                        "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "items": {
                                          "type": "string"
                                        },
                                        "nullable": true,
                                        "type": "array"
                                      },
                                      "valueCaseSensitive": {
                                        "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                        "type": "boolean"
                                      },
                                      "valueEscaped": {
                                        "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                        "type": "boolean"
                                      },
                                      "valueHasWildcard": {
                                        "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                        "type": "boolean"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": {
                                    "description": "The array type, which is `object`.\n",
                                    "enum": [
                                      "object"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "type"
                                ],
                                "title": "Object",
                                "type": "object"
                              }
                            ],
                            "title": "Object match value",
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "nullable": true,
                      "type": "array"
                    },
                    "matchesAlways": {
                      "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n",
                      "type": "boolean"
                    },
                    "name": {
                      "description": "The name of the rule.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "redirectURL": {
                      "description": "The URL Edge Redirector redirects the request to. If using `useRelativeUrl`, you can enter a path for the value. If `useRelativeUrl` is not used or set to `none`, then the `redirectUrl` should be a fully qualified URL.\n",
                      "maxLength": 8192,
                      "minLength": 1,
                      "type": "string"
                    },
                    "start": {
                      "default": 0,
                      "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "statusCode": {
                      "description": "The HTTP response redirect type status code: `301` for permanent redirect, `302` for temporary redirect, `303` for temporary using GET, `307` for temporary retain method, or `308` for permanent retain method.\n",
                      "enum": [
                        301,
                        302,
                        303,
                        307,
                        308
                      ],
                      "type": "integer"
                    },
                    "type": {
                      "description": "The type of Cloudlet the rule is for. For example, the string for Edge Redirector is `erMatchRule`.\n",
                      "enum": [
                        "erMatchRule"
                      ],
                      "type": "string"
                    },
                    "useIncomingQueryString": {
                      "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n",
                      "type": "boolean"
                    },
                    "useIncomingSchemeAndHost": {
                      "description": "If set to `true`, the Cloudlet copies both the scheme and the hostname from the incoming request to use in the redirect URL.\n",
                      "type": "boolean"
                    },
                    "useRelativeUrl": {
                      "description": "If set to `relative_url`, takes the path entered for the `redirectUrl` and sets it in the response’s `Location` header. The client browser receiving the request decides which protocol and hostname to use. If set to `copy_scheme_hostname`, it creates an absolute path by taking the protocol and hostname from the incoming request and combining them with path information entered for the `redirectUrl`. This absolute path is set in the response’s `Location` header. If you don't include `useRelativeUrl`, or if you set it to `none`, then specify the `redirectUrl` as a fully qualified URL.\n",
                      "enum": [
                        "relative_url",
                        "copy_scheme_hostname",
                        "none"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "type",
                    "redirectURL",
                    "statusCode"
                  ],
                  "title": "Edge Redirector",
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/match-rule-er.yaml"
                  }
                },
                {
                  "additionalProperties": false,
                  "description": "Contains match rule information for Forward Rewrite.\n",
                  "properties": {
                    "akaRuleId": {
                      "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "disabled": {
                      "default": false,
                      "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                      "type": "boolean"
                    },
                    "end": {
                      "default": 0,
                      "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "forwardSettings": {
                      "additionalProperties": false,
                      "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                      "properties": {
                        "originId": {
                          "description": "The conditional origin's unique identifier.\n",
                          "maxLength": 8192,
                          "nullable": true,
                          "type": "string"
                        },
                        "pathAndQS": {
                          "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                          "maxLength": 8192,
                          "minLength": 1,
                          "type": "string"
                        },
                        "useIncomingQueryString": {
                          "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n",
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "id": {
                      "description": "__Read-only__ Akamai internal use only.\n",
                      "nullable": true,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "location": {
                      "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "matchURL": {
                      "description": "The URL the Cloudlet uses to match the incoming request.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "matches": {
                      "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                      "items": {
                        "additionalProperties": false,
                        "description": "The match rule criteria.\n",
                        "oneOf": [
                          {
                            "required": [
                              "matchType",
                              "matchValue"
                            ],
                            "title": "matchType and matchValue required"
                          },
                          {
                            "required": [
                              "matchType",
                              "objectMatchValue"
                            ],
                            "title": "matchType and objectMatchValue required"
                          }
                        ],
                        "properties": {
                          "caseSensitive": {
                            "description": "If `true`, the match is case sensitive.\n",
                            "type": "boolean"
                          },
                          "checkIPs": {
                            "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                            "enum": [
                              "CONNECTING_IP",
                              "XFF_HEADERS",
                              "CONNECTING_IP XFF_HEADERS"
                            ],
                            "type": "string"
                          },
                          "matchOperator": {
                            "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                            "enum": [
                              "contains",
                              "exists",
                              "equals"
                            ],
                            "type": "string"
                          },
                          "matchType": {
                            "description": "The type of match used.\n",
                            "enum": [
                              "header",
                              "hostname",
                              "path",
                              "extension",
                              "query",
                              "regex",
                              "cookie",
                              "deviceCharacteristics",
                              "clientip",
                              "continent",
                              "countrycode",
                              "regioncode",
                              "protocol",
                              "method",
                              "proxy"
                            ],
                            "type": "string"
                          },
                          "matchValue": {
                            "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                            "maxLength": 8192,
                            "minLength": 1,
                            "type": "string"
                          },
                          "negate": {
                            "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                            "type": "boolean"
                          },
                          "objectMatchValue": {
                            "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                            "oneOf": [
                              {
                                "additionalProperties": false,
                                "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                "properties": {
                                  "type": {
                                    "description": "The object type, which is `simple`.\n",
                                    "enum": [
                                      "simple"
                                    ],
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                    "items": {
                                      "type": "string"
                                    },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                },
                                "required": [
                                  "type",
                                  "value"
                                ],
                                "title": "Simple",
                                "type": "object"
                              },
                              {
                                "additionalProperties": false,
                                "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                "properties": {
                                  "name": {
                                    "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "nameCaseSensitive": {
                                    "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                    "type": "boolean"
                                  },
                                  "nameHasWildcard": {
                                    "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                    "type": "boolean"
                                  },
                                  "options": {
                                    "additionalProperties": false,
                                    "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                    "properties": {
                                      "value": {
                                        "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "items": {
                                          "type": "string"
                                        },
                                        "nullable": true,
                                        "type": "array"
                                      },
                                      "valueCaseSensitive": {
                                        "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                        "type": "boolean"
                                      },
                                      "valueEscaped": {
                                        "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                        "type": "boolean"
                                      },
                                      "valueHasWildcard": {
                                        "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                        "type": "boolean"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": {
                                    "description": "The array type, which is `object`.\n",
                                    "enum": [
                                      "object"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "type"
                                ],
                                "title": "Object",
                                "type": "object"
                              }
                            ],
                            "title": "Object match value",
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "nullable": true,
                      "type": "array"
                    },
                    "name": {
                      "description": "The name of the rule.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "start": {
                      "default": 0,
                      "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "type": {
                      "description": "The type of Cloudlet the rule is for. For example, the string for Forward Rewrite is `frMatchRule`.\n",
                      "enum": [
                        "frMatchRule"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "type",
                    "forwardSettings"
                  ],
                  "title": "Forward Rewrite",
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/match-rule-fr.yaml"
                  }
                },
                {
                  "additionalProperties": false,
                  "description": "Contains match rule information for Request Control.\n",
                  "properties": {
                    "akaRuleId": {
                      "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "allowDeny": {
                      "description": "If set to `allow`, the request is sent to origin when all conditions are true. If `deny`, the request is denied when all conditions are true. If `denybranded`, the request is denied and rerouted according to the configuration of the [Request Control behavior](https://techdocs.akamai.com/property-mgr/reference/latest-request-control).\n",
                      "enum": [
                        "allow",
                        "deny",
                        "denybranded"
                      ],
                      "type": "string"
                    },
                    "disabled": {
                      "default": false,
                      "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                      "type": "boolean"
                    },
                    "end": {
                      "default": 0,
                      "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "id": {
                      "description": "__Read-only__ Akamai internal use only.\n",
                      "nullable": true,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "location": {
                      "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "matches": {
                      "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                      "items": {
                        "additionalProperties": false,
                        "description": "The match rule criteria.\n",
                        "oneOf": [
                          {
                            "required": [
                              "matchType",
                              "matchValue"
                            ],
                            "title": "matchType and matchValue required"
                          },
                          {
                            "required": [
                              "matchType",
                              "objectMatchValue"
                            ],
                            "title": "matchType and objectMatchValue required"
                          }
                        ],
                        "properties": {
                          "caseSensitive": {
                            "description": "If `true`, the match is case sensitive.\n",
                            "type": "boolean"
                          },
                          "checkIPs": {
                            "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                            "enum": [
                              "CONNECTING_IP",
                              "XFF_HEADERS",
                              "CONNECTING_IP XFF_HEADERS"
                            ],
                            "type": "string"
                          },
                          "matchOperator": {
                            "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                            "enum": [
                              "contains",
                              "exists",
                              "equals"
                            ],
                            "type": "string"
                          },
                          "matchType": {
                            "description": "The type of match used.\n",
                            "enum": [
                              "clientip",
                              "continent",
                              "cookie",
                              "countrycode",
                              "deviceCharacteristics",
                              "extension",
                              "header",
                              "hostname",
                              "method",
                              "path",
                              "protocol",
                              "proxy",
                              "query",
                              "regioncode"
                            ],
                            "type": "string"
                          },
                          "matchValue": {
                            "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                            "maxLength": 8192,
                            "minLength": 1,
                            "type": "string"
                          },
                          "negate": {
                            "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                            "type": "boolean"
                          },
                          "objectMatchValue": {
                            "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                            "oneOf": [
                              {
                                "additionalProperties": false,
                                "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                "properties": {
                                  "type": {
                                    "description": "The object type, which is `simple`.\n",
                                    "enum": [
                                      "simple"
                                    ],
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                    "items": {
                                      "type": "string"
                                    },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                },
                                "required": [
                                  "type",
                                  "value"
                                ],
                                "title": "Simple",
                                "type": "object"
                              },
                              {
                                "additionalProperties": false,
                                "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                "properties": {
                                  "name": {
                                    "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "nameCaseSensitive": {
                                    "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                    "type": "boolean"
                                  },
                                  "nameHasWildcard": {
                                    "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                    "type": "boolean"
                                  },
                                  "options": {
                                    "additionalProperties": false,
                                    "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                    "properties": {
                                      "value": {
                                        "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "items": {
                                          "type": "string"
                                        },
                                        "nullable": true,
                                        "type": "array"
                                      },
                                      "valueCaseSensitive": {
                                        "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                        "type": "boolean"
                                      },
                                      "valueEscaped": {
                                        "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                        "type": "boolean"
                                      },
                                      "valueHasWildcard": {
                                        "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                        "type": "boolean"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": {
                                    "description": "The array type, which is `object`.\n",
                                    "enum": [
                                      "object"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "type"
                                ],
                                "title": "Object",
                                "type": "object"
                              }
                            ],
                            "title": "Object match value",
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "nullable": true,
                      "type": "array"
                    },
                    "matchesAlways": {
                      "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n",
                      "type": "boolean"
                    },
                    "name": {
                      "description": "The name of the rule.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "start": {
                      "default": 0,
                      "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "type": {
                      "description": "The type of Cloudlet the rule is for. For example, the string for Request Control is `igMatchRule`.\n",
                      "enum": [
                        "igMatchRule"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "type",
                    "allowDeny"
                  ],
                  "title": "Request Control",
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/match-rule-ig.yaml"
                  }
                },
                {
                  "type": "object",
                  "description": "Contains match rule information for Visitor Prioritization.\n",
                  "title": "Visitor Prioritization",
                  "additionalProperties": false,
                  "required": [
                    "type",
                    "passThroughPercent"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Akamai internal use only.\n",
                      "nullable": true,
                      "readOnly": true
                    },
                    "location": {
                      "type": "string",
                      "description": "The navigable endpoint used for the object referred to in the operation.\n",
                      "readOnly": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the rule.\n",
                      "nullable": true,
                      "maxLength": 8192
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of Cloudlet the rule is for. For example, the string for Visitor Prioritization is `vpMatchRule`.\n",
                      "enum": [
                        "vpMatchRule"
                      ]
                    },
                    "akaRuleId": {
                      "type": "string",
                      "description": "The rule's unique identifier within the policy version.\n",
                      "readOnly": true
                    },
                    "start": {
                      "type": "integer",
                      "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                      "default": 0,
                      "minimum": 0
                    },
                    "end": {
                      "type": "integer",
                      "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                      "default": 0,
                      "minimum": 0
                    },
                    "matches": {
                      "type": "array",
                      "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                      "nullable": true,
                      "items": {
                        "type": "object",
                        "description": "The match rule criteria.\n",
                        "additionalProperties": false,
                        "oneOf": [
                          {
                            "required": [
                              "matchType",
                              "matchValue"
                            ],
                            "title": "matchType and matchValue required"
                          },
                          {
                            "required": [
                              "matchType",
                              "objectMatchValue"
                            ],
                            "title": "matchType and objectMatchValue required"
                          }
                        ],
                        "properties": {
                          "caseSensitive": {
                            "type": "boolean",
                            "description": "If `true`, the match is case sensitive.\n"
                          },
                          "matchValue": {
                            "type": "string",
                            "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                            "minLength": 1,
                            "maxLength": 8192
                          },
                          "negate": {
                            "type": "boolean",
                            "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                          },
                          "matchOperator": {
                            "type": "string",
                            "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                            "enum": [
                              "contains",
                              "exists",
                              "equals"
                            ]
                          },
                          "matchType": {
                            "type": "string",
                            "description": "The type of match used.\n",
                            "enum": [
                              "hostname",
                              "path",
                              "extension",
                              "query",
                              "cookie",
                              "deviceCharacteristics",
                              "clientip",
                              "continent",
                              "countrycode",
                              "regioncode",
                              "protocol",
                              "header",
                              "method",
                              "proxy"
                            ]
                          },
                          "checkIPs": {
                            "type": "string",
                            "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                            "enum": [
                              "CONNECTING_IP",
                              "XFF_HEADERS",
                              "CONNECTING_IP XFF_HEADERS"
                            ]
                          },
                          "objectMatchValue": {
                            "type": "object",
                            "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                            "title": "Object match value",
                            "oneOf": [
                              {
                                "type": "object",
                                "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                "title": "Simple",
                                "additionalProperties": false,
                                "required": [
                                  "type",
                                  "value"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "description": "The object type, which is `simple`.\n",
                                    "enum": [
                                      "simple"
                                    ]
                                  },
                                  "value": {
                                    "type": "array",
                                    "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                    "nullable": true,
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                "title": "Object",
                                "additionalProperties": false,
                                "required": [
                                  "name",
                                  "type"
                                ],
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                    "minLength": 1,
                                    "maxLength": 8192
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "The array type, which is `object`.\n",
                                    "enum": [
                                      "object"
                                    ]
                                  },
                                  "options": {
                                    "type": "object",
                                    "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                    "additionalProperties": false,
                                    "properties": {
                                      "value": {
                                        "type": "array",
                                        "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "nullable": true,
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "valueHasWildcard": {
                                        "type": "boolean",
                                        "description": "Set to `true` if the entries for `value` includes wildcards.\n"
                                      },
                                      "valueCaseSensitive": {
                                        "type": "boolean",
                                        "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n"
                                      },
                                      "valueEscaped": {
                                        "type": "boolean",
                                        "description": "Set to `true` if the entries for `value` includes escaped characters.\n"
                                      }
                                    }
                                  },
                                  "nameCaseSensitive": {
                                    "type": "boolean",
                                    "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                  },
                                  "nameHasWildcard": {
                                    "type": "boolean",
                                    "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    },
                    "disabled": {
                      "type": "boolean",
                      "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                      "default": false
                    },
                    "passThroughPercent": {
                      "type": "number",
                      "description": "The range `0.000: 99.000` specifies the percentage of requests that pass through to the origin. The value of `100` means the request always passes through to the origin. For Visitor Prioritization, a value of `-1` means send everyone to the waiting room.\n",
                      "minimum": -1,
                      "maximum": 100
                    },
                    "matchURL": {
                      "type": "string",
                      "description": "The URL the Cloudlet uses to match the incoming request.\n",
                      "nullable": true,
                      "maxLength": 8192
                    },
                    "useIncomingQueryString": {
                      "type": "boolean",
                      "description": "If set to `true`, the Cloudlet includes the request's query string in the rewritten or forwarded URL.\n"
                    }
                  }
                }
              ]
            },
            "type": "array",
            "x-akamai": {
              "file-path": "schemas/match-rules.yaml"
            }
          }
        },
        "required": [
          "matchRules"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/post-policy-versions-request.yaml"
        }
      },
      "post-policy-versions-response": {
        "type": "object",
        "description": "Policy version details.\n",
        "additionalProperties": false,
        "required": [
          "activations",
          "createdBy",
          "createDate",
          "deleted",
          "description",
          "lastModifiedBy",
          "lastModifiedDate",
          "location",
          "matchRuleFormat",
          "matchRules",
          "policyId",
          "revisionId",
          "rulesLocked",
          "version"
        ],
        "properties": {
          "description": {
            "type": "string",
            "description": "Description of the policy version.\n"
          },
          "version": {
            "type": "integer",
            "description": "Version of the policy.\n"
          },
          "activations": {
            "type": "array",
            "description": "List of activations related to the policy version.\n",
            "items": {
              "additionalProperties": false,
              "description": "Returns details of a policy activation.\n",
              "properties": {
                "apiVersion": {
                  "description": "The specific version of this API.\n",
                  "type": "string"
                },
                "network": {
                  "description": "The network, either `STAGING`, `PRODUCTION`, or `prod` as shorthand, on which a load balancing configuration for Application Load Balancer has been activated. Values are case-insensitive in requests.\n",
                  "enum": [
                    "prod",
                    "staging"
                  ],
                  "type": "string"
                },
                "policyInfo": {
                  "type": "object",
                  "description": "Returns details of a policy associated with policy activation.\n",
                  "additionalProperties": false,
                  "required": [
                    "policyId",
                    "name",
                    "version",
                    "status",
                    "statusDetail",
                    "activatedBy",
                    "activationDate"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of the policy.\n"
                    },
                    "version": {
                      "type": "integer",
                      "description": "Version of the policy.\n"
                    },
                    "policyId": {
                      "type": "integer",
                      "description": "ID of the policy.\n"
                    },
                    "status": {
                      "type": "string",
                      "description": "Value representing activation status.\n",
                      "enum": [
                        "INACTIVE",
                        "PENDING",
                        "ACTIVE",
                        "FAILED",
                        "DEACTIVATED"
                      ]
                    },
                    "statusDetail": {
                      "type": "string",
                      "description": "Details of the activation status.\n"
                    },
                    "activatedBy": {
                      "type": "string",
                      "description": "User name who issued the activation.\n",
                      "nullable": true
                    },
                    "activationDate": {
                      "type": "integer",
                      "description": "Date of the activation in milliseconds.\n"
                    }
                  }
                },
                "propertyInfo": {
                  "type": "object",
                  "description": "Returns details of a property associated with policy activation.\n",
                  "additionalProperties": false,
                  "required": [
                    "name",
                    "version",
                    "groupId",
                    "status",
                    "activatedBy",
                    "activationDate",
                    "id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "ID of the property.\n"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the property.\n"
                    },
                    "version": {
                      "type": "integer",
                      "description": "Version of the property.\n"
                    },
                    "groupId": {
                      "type": "integer",
                      "description": "Identifies the group where the property is placed.\n"
                    },
                    "status": {
                      "type": "string",
                      "description": "Value representing activation status.\n",
                      "enum": [
                        "INACTIVE",
                        "PENDING",
                        "ACTIVE",
                        "FAILED",
                        "DEACTIVATED"
                      ]
                    },
                    "activatedBy": {
                      "type": "string",
                      "description": "User name who issued the activation.\n",
                      "nullable": true
                    },
                    "activationDate": {
                      "type": "integer",
                      "description": "Date of the activation in milliseconds.\n"
                    }
                  }
                },
                "serviceVersion": {
                  "description": "__Deprecated__ The build of the software running on the server. The value can be `null`.\n",
                  "nullable": true,
                  "type": "string",
                  "x-akamai": {
                    "status": "DEPRECATED"
                  }
                }
              },
              "required": [
                "network",
                "policyInfo",
                "propertyInfo"
              ],
              "type": "object",
              "x-akamai": {
                "file-path": "schemas/policy-activation.yaml"
              }
            }
          },
          "createDate": {
            "type": "integer",
            "description": "Date of the policy version creation in milliseconds.\n"
          },
          "createdBy": {
            "type": "string",
            "description": "User name who created the policy version.\n"
          },
          "deleted": {
            "type": "boolean",
            "description": "Flag determining whether the policy version is deleted or not.\n"
          },
          "lastModifiedBy": {
            "type": "string",
            "description": "User name who recently modified the policy version.\n"
          },
          "lastModifiedDate": {
            "type": "integer",
            "description": "Date of the recent policy version modification in milliseconds.\n"
          },
          "location": {
            "type": "string",
            "description": "The navigable endpoint used for the object referred to in the operation.\n"
          },
          "matchRuleFormat": {
            "type": "string",
            "description": "The version of the `matchRules` format.\n"
          },
          "matchRules": {
            "description": "A list of Cloudlet-specific match rules for this policy.\n",
            "items": {
              "description": "Contains information about match rules.\n",
              "oneOf": [
                {
                  "type": "object",
                  "description": "Contains match rule information for Application Load Balancer.\n",
                  "title": "Application Load Balancer",
                  "additionalProperties": false,
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Akamai internal use only.\n",
                      "nullable": true,
                      "readOnly": true
                    },
                    "location": {
                      "type": "string",
                      "description": "The navigable endpoint used for the object referred to in the operation.\n",
                      "readOnly": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the rule.\n",
                      "nullable": true,
                      "maxLength": 8192
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of Cloudlet the rule is for. For example, the string for Application Load Balancer is `albMatchRule`.\n",
                      "enum": [
                        "albMatchRule"
                      ]
                    },
                    "akaRuleId": {
                      "type": "string",
                      "description": "The rule's unique identifier within the policy version.\n",
                      "readOnly": true
                    },
                    "disabled": {
                      "type": "boolean",
                      "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                      "default": false
                    },
                    "start": {
                      "type": "integer",
                      "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                      "default": 0,
                      "minimum": 0
                    },
                    "end": {
                      "type": "integer",
                      "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                      "default": 0,
                      "minimum": 0
                    },
                    "matchURL": {
                      "type": "string",
                      "description": "The URL the Cloudlet uses to match the incoming request.\n",
                      "nullable": true,
                      "maxLength": 8192
                    },
                    "matches": {
                      "type": "array",
                      "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                      "nullable": true,
                      "items": {
                        "type": "object",
                        "description": "The match rule criteria.\n",
                        "additionalProperties": false,
                        "oneOf": [
                          {
                            "required": [
                              "matchType",
                              "matchValue"
                            ],
                            "title": "matchType and matchValue required"
                          },
                          {
                            "required": [
                              "matchType",
                              "objectMatchValue"
                            ],
                            "title": "matchType and objectMatchValue required"
                          }
                        ],
                        "properties": {
                          "caseSensitive": {
                            "type": "boolean",
                            "description": "If `true`, the match is case sensitive.\n"
                          },
                          "checkIPs": {
                            "type": "string",
                            "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                            "nullable": true,
                            "enum": [
                              "CONNECTING_IP",
                              "XFF_HEADERS",
                              "CONNECTING_IP XFF_HEADERS"
                            ]
                          },
                          "matchOperator": {
                            "type": "string",
                            "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                            "enum": [
                              "contains",
                              "exists",
                              "equals"
                            ]
                          },
                          "matchType": {
                            "type": "string",
                            "description": "The type of match used.\n",
                            "enum": [
                              "header",
                              "hostname",
                              "path",
                              "extension",
                              "query",
                              "regex",
                              "cookie",
                              "deviceCharacteristics",
                              "clientip",
                              "continent",
                              "countrycode",
                              "regioncode",
                              "protocol",
                              "method",
                              "proxy"
                            ]
                          },
                          "matchValue": {
                            "type": "string",
                            "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                            "minLength": 1,
                            "maxLength": 8192
                          },
                          "negate": {
                            "type": "boolean",
                            "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                          },
                          "objectMatchValue": {
                            "type": "object",
                            "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                            "title": "Object match value",
                            "oneOf": [
                              {
                                "type": "object",
                                "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                "title": "Simple",
                                "additionalProperties": false,
                                "required": [
                                  "type",
                                  "value"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "description": "The object type, which is `simple`.\n",
                                    "enum": [
                                      "simple"
                                    ]
                                  },
                                  "value": {
                                    "type": "array",
                                    "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                    "nullable": true,
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "description": "Use this for more complex match criteria.\n",
                                "title": "Object",
                                "additionalProperties": false,
                                "required": [
                                  "name",
                                  "type"
                                ],
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                    "minLength": 1,
                                    "maxLength": 8192
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "The array type, which is `object`.\n",
                                    "enum": [
                                      "object"
                                    ]
                                  },
                                  "options": {
                                    "type": "object",
                                    "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                    "additionalProperties": false,
                                    "properties": {
                                      "value": {
                                        "type": "array",
                                        "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "nullable": true,
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "valueCaseSensitive": {
                                        "type": "boolean",
                                        "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n"
                                      },
                                      "valueEscaped": {
                                        "type": "boolean",
                                        "description": "Set to `true` if the entries for `value` includes escaped characters.\n"
                                      },
                                      "valueHasWildcard": {
                                        "type": "boolean",
                                        "description": "Set to `true` if the entries for `value` includes wildcards.\n"
                                      }
                                    }
                                  },
                                  "nameCaseSensitive": {
                                    "type": "boolean",
                                    "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                  },
                                  "nameHasWildcard": {
                                    "type": "boolean",
                                    "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    },
                    "matchesAlways": {
                      "type": "boolean",
                      "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n"
                    },
                    "forwardSettings": {
                      "type": "object",
                      "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                      "additionalProperties": false,
                      "properties": {
                        "pathAndQS": {
                          "type": "string",
                          "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                          "minLength": 1,
                          "maxLength": 8192
                        },
                        "useIncomingQueryString": {
                          "type": "boolean",
                          "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n"
                        },
                        "originId": {
                          "type": "string",
                          "description": "The conditional origin's unique identifier.\n",
                          "nullable": true,
                          "maxLength": 8192
                        }
                      }
                    }
                  }
                },
                {
                  "additionalProperties": false,
                  "description": "Contains match rule information for API Prioritization.\n",
                  "properties": {
                    "akaRuleId": {
                      "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "disabled": {
                      "default": false,
                      "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                      "type": "boolean"
                    },
                    "end": {
                      "default": 0,
                      "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "id": {
                      "description": "__Read-only__ Akamai internal use only.\n",
                      "nullable": true,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "location": {
                      "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "matchURL": {
                      "description": "The URL the Cloudlet uses to match the incoming request.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "matches": {
                      "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                      "items": {
                        "additionalProperties": false,
                        "description": "The match rule criteria.\n",
                        "oneOf": [
                          {
                            "required": [
                              "matchType",
                              "matchValue"
                            ],
                            "title": "matchType and matchValue required"
                          },
                          {
                            "required": [
                              "matchType",
                              "objectMatchValue"
                            ],
                            "title": "matchType and objectMatchValue required"
                          }
                        ],
                        "properties": {
                          "caseSensitive": {
                            "description": "If `true`, the match is case sensitive.\n",
                            "type": "boolean"
                          },
                          "checkIPs": {
                            "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                            "enum": [
                              "CONNECTING_IP",
                              "XFF_HEADERS",
                              "CONNECTING_IP XFF_HEADERS"
                            ],
                            "type": "string"
                          },
                          "matchOperator": {
                            "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                            "enum": [
                              "contains",
                              "exists",
                              "equals"
                            ],
                            "type": "string"
                          },
                          "matchType": {
                            "description": "The type of match used.\n",
                            "enum": [
                              "hostname",
                              "path",
                              "extension",
                              "query",
                              "cookie",
                              "deviceCharacteristics",
                              "clientip",
                              "continent",
                              "countrycode",
                              "regioncode",
                              "protocol",
                              "header",
                              "method",
                              "proxy"
                            ],
                            "type": "string"
                          },
                          "matchValue": {
                            "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                            "maxLength": 8192,
                            "minLength": 1,
                            "type": "string"
                          },
                          "negate": {
                            "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                            "type": "boolean"
                          },
                          "objectMatchValue": {
                            "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                            "oneOf": [
                              {
                                "additionalProperties": false,
                                "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                "properties": {
                                  "type": {
                                    "description": "The object type, which is `simple`.\n",
                                    "enum": [
                                      "simple"
                                    ],
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                    "items": {
                                      "type": "string"
                                    },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                },
                                "required": [
                                  "type",
                                  "value"
                                ],
                                "title": "Simple",
                                "type": "object"
                              },
                              {
                                "additionalProperties": false,
                                "description": "Use this for more complex match criteria.\n",
                                "properties": {
                                  "name": {
                                    "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "nameCaseSensitive": {
                                    "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                    "type": "boolean"
                                  },
                                  "nameHasWildcard": {
                                    "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                    "type": "boolean"
                                  },
                                  "options": {
                                    "additionalProperties": false,
                                    "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                    "properties": {
                                      "value": {
                                        "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "items": {
                                          "type": "string"
                                        },
                                        "nullable": true,
                                        "type": "array"
                                      },
                                      "valueCaseSensitive": {
                                        "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                        "type": "boolean"
                                      },
                                      "valueEscaped": {
                                        "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                        "type": "boolean"
                                      },
                                      "valueHasWildcard": {
                                        "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                        "type": "boolean"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": {
                                    "description": "The array type, which is `object`.\n",
                                    "enum": [
                                      "object"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "type"
                                ],
                                "title": "Object",
                                "type": "object"
                              }
                            ],
                            "title": "Object match value",
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "nullable": true,
                      "type": "array"
                    },
                    "name": {
                      "description": "The name of the rule.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "passThroughPercent": {
                      "description": "The percentage of requests that pass through to the origin, with `100` indicating the request always passes through to the origin. For Visitor Prioritization, a value of -1 sends everyone to the waiting room.\n",
                      "maximum": 100,
                      "minimum": -1,
                      "type": "number"
                    },
                    "start": {
                      "default": 0,
                      "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "type": {
                      "description": "The type of Cloudlet the rule is for. For example, the string for API Prioritization is `apMatchRule`.\n",
                      "enum": [
                        "apMatchRule"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "type",
                    "passThroughPercent"
                  ],
                  "title": "API Prioritization",
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/match-rule-ap.yaml"
                  }
                },
                {
                  "additionalProperties": false,
                  "description": "Contains match rule information for Audience Segmentation.\n",
                  "properties": {
                    "akaRuleId": {
                      "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "disabled": {
                      "default": false,
                      "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                      "type": "boolean"
                    },
                    "end": {
                      "default": 0,
                      "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "forwardSettings": {
                      "additionalProperties": false,
                      "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                      "properties": {
                        "originId": {
                          "description": "The conditional origin's unique identifier.\n",
                          "maxLength": 8192,
                          "nullable": true,
                          "type": "string"
                        },
                        "pathAndQS": {
                          "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                          "maxLength": 8192,
                          "minLength": 1,
                          "type": "string"
                        },
                        "useIncomingQueryString": {
                          "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n",
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "id": {
                      "description": "__Read-only__ Akamai internal use only.\n",
                      "nullable": true,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "location": {
                      "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "matchURL": {
                      "description": "The URL the Cloudlet uses to match the incoming request.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "matches": {
                      "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                      "items": {
                        "additionalProperties": false,
                        "description": "The match rule criteria.\n",
                        "oneOf": [
                          {
                            "required": [
                              "matchType",
                              "matchValue"
                            ],
                            "title": "matchType and matchValue required"
                          },
                          {
                            "required": [
                              "matchType",
                              "objectMatchValue"
                            ],
                            "title": "matchType and objectMatchValue required"
                          }
                        ],
                        "properties": {
                          "caseSensitive": {
                            "description": "If `true`, the match is case sensitive.\n",
                            "type": "boolean"
                          },
                          "checkIPs": {
                            "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                            "enum": [
                              "CONNECTING_IP",
                              "XFF_HEADERS",
                              "CONNECTING_IP XFF_HEADERS"
                            ],
                            "type": "string"
                          },
                          "matchOperator": {
                            "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                            "enum": [
                              "contains",
                              "exists",
                              "equals"
                            ],
                            "type": "string"
                          },
                          "matchType": {
                            "description": "The type of match used.\n",
                            "enum": [
                              "header",
                              "hostname",
                              "path",
                              "extension",
                              "query",
                              "range",
                              "regex",
                              "cookie",
                              "deviceCharacteristics",
                              "clientip",
                              "continent",
                              "countrycode",
                              "regioncode",
                              "protocol",
                              "method",
                              "proxy"
                            ],
                            "type": "string"
                          },
                          "matchValue": {
                            "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                            "maxLength": 8192,
                            "minLength": 1,
                            "type": "string"
                          },
                          "negate": {
                            "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                            "type": "boolean"
                          },
                          "objectMatchValue": {
                            "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.\n",
                            "oneOf": [
                              {
                                "additionalProperties": false,
                                "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.\n",
                                "properties": {
                                  "type": {
                                    "description": "The object type, which is `range`.\n",
                                    "enum": [
                                      "range"
                                    ],
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "An inclusive range comprised of two numbers to match on.\n",
                                    "items": {
                                      "type": "integer"
                                    },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                },
                                "required": [
                                  "type",
                                  "value"
                                ],
                                "title": "Range",
                                "type": "object"
                              },
                              {
                                "additionalProperties": false,
                                "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                "properties": {
                                  "type": {
                                    "description": "The object type, which is `simple`.\n",
                                    "enum": [
                                      "simple"
                                    ],
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                    "items": {
                                      "type": "string"
                                    },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                },
                                "required": [
                                  "type",
                                  "value"
                                ],
                                "title": "Simple",
                                "type": "object"
                              },
                              {
                                "additionalProperties": false,
                                "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                "properties": {
                                  "name": {
                                    "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "nameCaseSensitive": {
                                    "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                    "type": "boolean"
                                  },
                                  "nameHasWildcard": {
                                    "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                    "type": "boolean"
                                  },
                                  "options": {
                                    "additionalProperties": false,
                                    "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                    "properties": {
                                      "value": {
                                        "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "items": {
                                          "type": "string"
                                        },
                                        "nullable": true,
                                        "type": "array"
                                      },
                                      "valueCaseSensitive": {
                                        "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                        "type": "boolean"
                                      },
                                      "valueEscaped": {
                                        "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                        "type": "boolean"
                                      },
                                      "valueHasWildcard": {
                                        "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                        "type": "boolean"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": {
                                    "description": "The array type, which is `object`.\n",
                                    "enum": [
                                      "object"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "type"
                                ],
                                "title": "Object",
                                "type": "object"
                              }
                            ],
                            "title": "Object match value",
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "nullable": true,
                      "type": "array"
                    },
                    "name": {
                      "description": "The name of the rule.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "start": {
                      "default": 0,
                      "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "type": {
                      "description": "The type of Cloudlet the rule is for. For example, the string for Audience Segmentation is `asMatchRule`.\n",
                      "enum": [
                        "asMatchRule"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "type"
                  ],
                  "title": "Audience Segmentation",
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/match-rule-as.yaml"
                  }
                },
                {
                  "additionalProperties": false,
                  "description": "Contains match rule information for Phased Release.\n",
                  "properties": {
                    "akaRuleId": {
                      "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "disabled": {
                      "default": false,
                      "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                      "type": "boolean"
                    },
                    "end": {
                      "default": 0,
                      "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "forwardSettings": {
                      "additionalProperties": false,
                      "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, and `percent`.\n",
                      "properties": {
                        "originId": {
                          "description": "The conditional origin's unique identifier.\n",
                          "maxLength": 8192,
                          "nullable": true,
                          "type": "string"
                        },
                        "percent": {
                          "description": "The percentage of visitors directed to a different origin.\n",
                          "maximum": 100,
                          "minimum": 0,
                          "type": "number"
                        }
                      },
                      "type": "object"
                    },
                    "id": {
                      "description": "__Read-only__ Akamai internal use only.\n",
                      "nullable": true,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "location": {
                      "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "matchURL": {
                      "description": "The URL the Cloudlet uses to match the incoming request.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "matches": {
                      "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                      "items": {
                        "additionalProperties": false,
                        "description": "The match rule criteria.\n",
                        "oneOf": [
                          {
                            "required": [
                              "matchType",
                              "matchValue"
                            ],
                            "title": "matchType and matchValue required"
                          },
                          {
                            "required": [
                              "matchType",
                              "objectMatchValue"
                            ],
                            "title": "matchType and objectMatchValue required"
                          }
                        ],
                        "properties": {
                          "caseSensitive": {
                            "description": "If `true`, the match is case sensitive.\n",
                            "type": "boolean"
                          },
                          "checkIPs": {
                            "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                            "enum": [
                              "CONNECTING_IP",
                              "XFF_HEADERS",
                              "CONNECTING_IP XFF_HEADERS"
                            ],
                            "nullable": true,
                            "type": "string"
                          },
                          "matchOperator": {
                            "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                            "enum": [
                              "contains",
                              "exists",
                              "equals"
                            ],
                            "type": "string"
                          },
                          "matchType": {
                            "description": "The type of match used.\n",
                            "enum": [
                              "header",
                              "hostname",
                              "path",
                              "extension",
                              "query",
                              "cookie",
                              "deviceCharacteristics",
                              "clientip",
                              "continent",
                              "countrycode",
                              "regioncode",
                              "protocol",
                              "method",
                              "proxy"
                            ],
                            "type": "string"
                          },
                          "matchValue": {
                            "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                            "maxLength": 8192,
                            "minLength": 1,
                            "type": "string"
                          },
                          "negate": {
                            "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                            "type": "boolean"
                          },
                          "objectMatchValue": {
                            "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                            "oneOf": [
                              {
                                "additionalProperties": false,
                                "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                "properties": {
                                  "type": {
                                    "description": "The object type, which is `simple`.\n",
                                    "enum": [
                                      "simple"
                                    ],
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                    "items": {
                                      "type": "string"
                                    },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                },
                                "required": [
                                  "type",
                                  "value"
                                ],
                                "title": "Simple",
                                "type": "object"
                              },
                              {
                                "additionalProperties": false,
                                "description": "Use this for more complex match criteria.\n",
                                "properties": {
                                  "name": {
                                    "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "nameCaseSensitive": {
                                    "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                    "type": "boolean"
                                  },
                                  "nameHasWildcard": {
                                    "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                    "type": "boolean"
                                  },
                                  "options": {
                                    "additionalProperties": false,
                                    "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                    "properties": {
                                      "value": {
                                        "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "items": {
                                          "type": "string"
                                        },
                                        "nullable": true,
                                        "type": "array"
                                      },
                                      "valueCaseSensitive": {
                                        "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                        "type": "boolean"
                                      },
                                      "valueEscaped": {
                                        "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                        "type": "boolean"
                                      },
                                      "valueHasWildcard": {
                                        "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                        "type": "boolean"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": {
                                    "description": "The array type, which is `object`.\n",
                                    "enum": [
                                      "object"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "type"
                                ],
                                "title": "Object",
                                "type": "object"
                              }
                            ],
                            "title": "Object match value",
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "nullable": true,
                      "type": "array"
                    },
                    "matchesAlways": {
                      "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n",
                      "type": "boolean"
                    },
                    "name": {
                      "description": "The name of the rule.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "start": {
                      "default": 0,
                      "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "type": {
                      "description": "The type of Cloudlet the rule is for. For example, the string for Phased Release is `cdMatchRule`.\n",
                      "enum": [
                        "cdMatchRule"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "type"
                  ],
                  "title": "Phased Release",
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/match-rule-cd.yaml"
                  }
                },
                {
                  "additionalProperties": false,
                  "description": "Contains match rule information for Edge Redirector.\n",
                  "properties": {
                    "akaRuleId": {
                      "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "disabled": {
                      "default": false,
                      "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                      "type": "boolean"
                    },
                    "end": {
                      "default": 0,
                      "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "id": {
                      "description": "__Read-only__ Akamai internal use only.\n",
                      "nullable": true,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "location": {
                      "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "matchURL": {
                      "description": "The URL the Cloudlet uses to match the incoming request.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "matches": {
                      "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                      "items": {
                        "additionalProperties": false,
                        "description": "The match rule criteria.\n",
                        "oneOf": [
                          {
                            "required": [
                              "matchType",
                              "matchValue"
                            ],
                            "title": "matchType and matchValue required"
                          },
                          {
                            "required": [
                              "matchType",
                              "objectMatchValue"
                            ],
                            "title": "matchType and objectMatchValue required"
                          }
                        ],
                        "properties": {
                          "caseSensitive": {
                            "description": "If `true`, the match is case sensitive.\n",
                            "type": "boolean"
                          },
                          "checkIPs": {
                            "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                            "enum": [
                              "CONNECTING_IP",
                              "XFF_HEADERS",
                              "CONNECTING_IP XFF_HEADERS"
                            ],
                            "nullable": true,
                            "type": "string"
                          },
                          "matchOperator": {
                            "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                            "enum": [
                              "contains",
                              "exists",
                              "equals"
                            ],
                            "type": "string"
                          },
                          "matchType": {
                            "description": "The type of match used.\n",
                            "enum": [
                              "header",
                              "hostname",
                              "path",
                              "extension",
                              "query",
                              "regex",
                              "cookie",
                              "deviceCharacteristics",
                              "clientip",
                              "continent",
                              "countrycode",
                              "regioncode",
                              "protocol",
                              "method",
                              "proxy"
                            ],
                            "type": "string"
                          },
                          "matchValue": {
                            "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                            "maxLength": 8192,
                            "minLength": 1,
                            "type": "string"
                          },
                          "negate": {
                            "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                            "type": "boolean"
                          },
                          "objectMatchValue": {
                            "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                            "oneOf": [
                              {
                                "additionalProperties": false,
                                "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                "properties": {
                                  "type": {
                                    "description": "The object type, which is `simple`.\n",
                                    "enum": [
                                      "simple"
                                    ],
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                    "items": {
                                      "type": "string"
                                    },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                },
                                "required": [
                                  "type",
                                  "value"
                                ],
                                "title": "Simple",
                                "type": "object"
                              },
                              {
                                "additionalProperties": false,
                                "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                "properties": {
                                  "name": {
                                    "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "nameCaseSensitive": {
                                    "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                    "type": "boolean"
                                  },
                                  "nameHasWildcard": {
                                    "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                    "type": "boolean"
                                  },
                                  "options": {
                                    "additionalProperties": false,
                                    "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                    "properties": {
                                      "value": {
                                        "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "items": {
                                          "type": "string"
                                        },
                                        "nullable": true,
                                        "type": "array"
                                      },
                                      "valueCaseSensitive": {
                                        "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                        "type": "boolean"
                                      },
                                      "valueEscaped": {
                                        "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                        "type": "boolean"
                                      },
                                      "valueHasWildcard": {
                                        "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                        "type": "boolean"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": {
                                    "description": "The array type, which is `object`.\n",
                                    "enum": [
                                      "object"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "type"
                                ],
                                "title": "Object",
                                "type": "object"
                              }
                            ],
                            "title": "Object match value",
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "nullable": true,
                      "type": "array"
                    },
                    "matchesAlways": {
                      "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n",
                      "type": "boolean"
                    },
                    "name": {
                      "description": "The name of the rule.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "redirectURL": {
                      "description": "The URL Edge Redirector redirects the request to. If using `useRelativeUrl`, you can enter a path for the value. If `useRelativeUrl` is not used or set to `none`, then the `redirectUrl` should be a fully qualified URL.\n",
                      "maxLength": 8192,
                      "minLength": 1,
                      "type": "string"
                    },
                    "start": {
                      "default": 0,
                      "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "statusCode": {
                      "description": "The HTTP response redirect type status code: `301` for permanent redirect, `302` for temporary redirect, `303` for temporary using GET, `307` for temporary retain method, or `308` for permanent retain method.\n",
                      "enum": [
                        301,
                        302,
                        303,
                        307,
                        308
                      ],
                      "type": "integer"
                    },
                    "type": {
                      "description": "The type of Cloudlet the rule is for. For example, the string for Edge Redirector is `erMatchRule`.\n",
                      "enum": [
                        "erMatchRule"
                      ],
                      "type": "string"
                    },
                    "useIncomingQueryString": {
                      "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n",
                      "type": "boolean"
                    },
                    "useIncomingSchemeAndHost": {
                      "description": "If set to `true`, the Cloudlet copies both the scheme and the hostname from the incoming request to use in the redirect URL.\n",
                      "type": "boolean"
                    },
                    "useRelativeUrl": {
                      "description": "If set to `relative_url`, takes the path entered for the `redirectUrl` and sets it in the response’s `Location` header. The client browser receiving the request decides which protocol and hostname to use. If set to `copy_scheme_hostname`, it creates an absolute path by taking the protocol and hostname from the incoming request and combining them with path information entered for the `redirectUrl`. This absolute path is set in the response’s `Location` header. If you don't include `useRelativeUrl`, or if you set it to `none`, then specify the `redirectUrl` as a fully qualified URL.\n",
                      "enum": [
                        "relative_url",
                        "copy_scheme_hostname",
                        "none"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "type",
                    "redirectURL",
                    "statusCode"
                  ],
                  "title": "Edge Redirector",
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/match-rule-er.yaml"
                  }
                },
                {
                  "additionalProperties": false,
                  "description": "Contains match rule information for Forward Rewrite.\n",
                  "properties": {
                    "akaRuleId": {
                      "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "disabled": {
                      "default": false,
                      "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                      "type": "boolean"
                    },
                    "end": {
                      "default": 0,
                      "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "forwardSettings": {
                      "additionalProperties": false,
                      "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                      "properties": {
                        "originId": {
                          "description": "The conditional origin's unique identifier.\n",
                          "maxLength": 8192,
                          "nullable": true,
                          "type": "string"
                        },
                        "pathAndQS": {
                          "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                          "maxLength": 8192,
                          "minLength": 1,
                          "type": "string"
                        },
                        "useIncomingQueryString": {
                          "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n",
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "id": {
                      "description": "__Read-only__ Akamai internal use only.\n",
                      "nullable": true,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "location": {
                      "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "matchURL": {
                      "description": "The URL the Cloudlet uses to match the incoming request.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "matches": {
                      "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                      "items": {
                        "additionalProperties": false,
                        "description": "The match rule criteria.\n",
                        "oneOf": [
                          {
                            "required": [
                              "matchType",
                              "matchValue"
                            ],
                            "title": "matchType and matchValue required"
                          },
                          {
                            "required": [
                              "matchType",
                              "objectMatchValue"
                            ],
                            "title": "matchType and objectMatchValue required"
                          }
                        ],
                        "properties": {
                          "caseSensitive": {
                            "description": "If `true`, the match is case sensitive.\n",
                            "type": "boolean"
                          },
                          "checkIPs": {
                            "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                            "enum": [
                              "CONNECTING_IP",
                              "XFF_HEADERS",
                              "CONNECTING_IP XFF_HEADERS"
                            ],
                            "type": "string"
                          },
                          "matchOperator": {
                            "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                            "enum": [
                              "contains",
                              "exists",
                              "equals"
                            ],
                            "type": "string"
                          },
                          "matchType": {
                            "description": "The type of match used.\n",
                            "enum": [
                              "header",
                              "hostname",
                              "path",
                              "extension",
                              "query",
                              "regex",
                              "cookie",
                              "deviceCharacteristics",
                              "clientip",
                              "continent",
                              "countrycode",
                              "regioncode",
                              "protocol",
                              "method",
                              "proxy"
                            ],
                            "type": "string"
                          },
                          "matchValue": {
                            "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                            "maxLength": 8192,
                            "minLength": 1,
                            "type": "string"
                          },
                          "negate": {
                            "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                            "type": "boolean"
                          },
                          "objectMatchValue": {
                            "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                            "oneOf": [
                              {
                                "additionalProperties": false,
                                "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                "properties": {
                                  "type": {
                                    "description": "The object type, which is `simple`.\n",
                                    "enum": [
                                      "simple"
                                    ],
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                    "items": {
                                      "type": "string"
                                    },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                },
                                "required": [
                                  "type",
                                  "value"
                                ],
                                "title": "Simple",
                                "type": "object"
                              },
                              {
                                "additionalProperties": false,
                                "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                "properties": {
                                  "name": {
                                    "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "nameCaseSensitive": {
                                    "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                    "type": "boolean"
                                  },
                                  "nameHasWildcard": {
                                    "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                    "type": "boolean"
                                  },
                                  "options": {
                                    "additionalProperties": false,
                                    "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                    "properties": {
                                      "value": {
                                        "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "items": {
                                          "type": "string"
                                        },
                                        "nullable": true,
                                        "type": "array"
                                      },
                                      "valueCaseSensitive": {
                                        "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                        "type": "boolean"
                                      },
                                      "valueEscaped": {
                                        "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                        "type": "boolean"
                                      },
                                      "valueHasWildcard": {
                                        "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                        "type": "boolean"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": {
                                    "description": "The array type, which is `object`.\n",
                                    "enum": [
                                      "object"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "type"
                                ],
                                "title": "Object",
                                "type": "object"
                              }
                            ],
                            "title": "Object match value",
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "nullable": true,
                      "type": "array"
                    },
                    "name": {
                      "description": "The name of the rule.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "start": {
                      "default": 0,
                      "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "type": {
                      "description": "The type of Cloudlet the rule is for. For example, the string for Forward Rewrite is `frMatchRule`.\n",
                      "enum": [
                        "frMatchRule"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "type",
                    "forwardSettings"
                  ],
                  "title": "Forward Rewrite",
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/match-rule-fr.yaml"
                  }
                },
                {
                  "additionalProperties": false,
                  "description": "Contains match rule information for Request Control.\n",
                  "properties": {
                    "akaRuleId": {
                      "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "allowDeny": {
                      "description": "If set to `allow`, the request is sent to origin when all conditions are true. If `deny`, the request is denied when all conditions are true. If `denybranded`, the request is denied and rerouted according to the configuration of the [Request Control behavior](https://techdocs.akamai.com/property-mgr/reference/latest-request-control).\n",
                      "enum": [
                        "allow",
                        "deny",
                        "denybranded"
                      ],
                      "type": "string"
                    },
                    "disabled": {
                      "default": false,
                      "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                      "type": "boolean"
                    },
                    "end": {
                      "default": 0,
                      "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "id": {
                      "description": "__Read-only__ Akamai internal use only.\n",
                      "nullable": true,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "location": {
                      "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "matches": {
                      "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                      "items": {
                        "additionalProperties": false,
                        "description": "The match rule criteria.\n",
                        "oneOf": [
                          {
                            "required": [
                              "matchType",
                              "matchValue"
                            ],
                            "title": "matchType and matchValue required"
                          },
                          {
                            "required": [
                              "matchType",
                              "objectMatchValue"
                            ],
                            "title": "matchType and objectMatchValue required"
                          }
                        ],
                        "properties": {
                          "caseSensitive": {
                            "description": "If `true`, the match is case sensitive.\n",
                            "type": "boolean"
                          },
                          "checkIPs": {
                            "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                            "enum": [
                              "CONNECTING_IP",
                              "XFF_HEADERS",
                              "CONNECTING_IP XFF_HEADERS"
                            ],
                            "type": "string"
                          },
                          "matchOperator": {
                            "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                            "enum": [
                              "contains",
                              "exists",
                              "equals"
                            ],
                            "type": "string"
                          },
                          "matchType": {
                            "description": "The type of match used.\n",
                            "enum": [
                              "clientip",
                              "continent",
                              "cookie",
                              "countrycode",
                              "deviceCharacteristics",
                              "extension",
                              "header",
                              "hostname",
                              "method",
                              "path",
                              "protocol",
                              "proxy",
                              "query",
                              "regioncode"
                            ],
                            "type": "string"
                          },
                          "matchValue": {
                            "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                            "maxLength": 8192,
                            "minLength": 1,
                            "type": "string"
                          },
                          "negate": {
                            "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                            "type": "boolean"
                          },
                          "objectMatchValue": {
                            "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                            "oneOf": [
                              {
                                "additionalProperties": false,
                                "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                "properties": {
                                  "type": {
                                    "description": "The object type, which is `simple`.\n",
                                    "enum": [
                                      "simple"
                                    ],
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                    "items": {
                                      "type": "string"
                                    },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                },
                                "required": [
                                  "type",
                                  "value"
                                ],
                                "title": "Simple",
                                "type": "object"
                              },
                              {
                                "additionalProperties": false,
                                "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                "properties": {
                                  "name": {
                                    "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "nameCaseSensitive": {
                                    "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                    "type": "boolean"
                                  },
                                  "nameHasWildcard": {
                                    "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                    "type": "boolean"
                                  },
                                  "options": {
                                    "additionalProperties": false,
                                    "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                    "properties": {
                                      "value": {
                                        "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "items": {
                                          "type": "string"
                                        },
                                        "nullable": true,
                                        "type": "array"
                                      },
                                      "valueCaseSensitive": {
                                        "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                        "type": "boolean"
                                      },
                                      "valueEscaped": {
                                        "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                        "type": "boolean"
                                      },
                                      "valueHasWildcard": {
                                        "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                        "type": "boolean"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": {
                                    "description": "The array type, which is `object`.\n",
                                    "enum": [
                                      "object"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "type"
                                ],
                                "title": "Object",
                                "type": "object"
                              }
                            ],
                            "title": "Object match value",
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "nullable": true,
                      "type": "array"
                    },
                    "matchesAlways": {
                      "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n",
                      "type": "boolean"
                    },
                    "name": {
                      "description": "The name of the rule.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "start": {
                      "default": 0,
                      "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "type": {
                      "description": "The type of Cloudlet the rule is for. For example, the string for Request Control is `igMatchRule`.\n",
                      "enum": [
                        "igMatchRule"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "type",
                    "allowDeny"
                  ],
                  "title": "Request Control",
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/match-rule-ig.yaml"
                  }
                },
                {
                  "type": "object",
                  "description": "Contains match rule information for Visitor Prioritization.\n",
                  "title": "Visitor Prioritization",
                  "additionalProperties": false,
                  "required": [
                    "type",
                    "passThroughPercent"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Akamai internal use only.\n",
                      "nullable": true,
                      "readOnly": true
                    },
                    "location": {
                      "type": "string",
                      "description": "The navigable endpoint used for the object referred to in the operation.\n",
                      "readOnly": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the rule.\n",
                      "nullable": true,
                      "maxLength": 8192
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of Cloudlet the rule is for. For example, the string for Visitor Prioritization is `vpMatchRule`.\n",
                      "enum": [
                        "vpMatchRule"
                      ]
                    },
                    "akaRuleId": {
                      "type": "string",
                      "description": "The rule's unique identifier within the policy version.\n",
                      "readOnly": true
                    },
                    "start": {
                      "type": "integer",
                      "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                      "default": 0,
                      "minimum": 0
                    },
                    "end": {
                      "type": "integer",
                      "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                      "default": 0,
                      "minimum": 0
                    },
                    "matches": {
                      "type": "array",
                      "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                      "nullable": true,
                      "items": {
                        "type": "object",
                        "description": "The match rule criteria.\n",
                        "additionalProperties": false,
                        "oneOf": [
                          {
                            "required": [
                              "matchType",
                              "matchValue"
                            ],
                            "title": "matchType and matchValue required"
                          },
                          {
                            "required": [
                              "matchType",
                              "objectMatchValue"
                            ],
                            "title": "matchType and objectMatchValue required"
                          }
                        ],
                        "properties": {
                          "caseSensitive": {
                            "type": "boolean",
                            "description": "If `true`, the match is case sensitive.\n"
                          },
                          "matchValue": {
                            "type": "string",
                            "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                            "minLength": 1,
                            "maxLength": 8192
                          },
                          "negate": {
                            "type": "boolean",
                            "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                          },
                          "matchOperator": {
                            "type": "string",
                            "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                            "enum": [
                              "contains",
                              "exists",
                              "equals"
                            ]
                          },
                          "matchType": {
                            "type": "string",
                            "description": "The type of match used.\n",
                            "enum": [
                              "hostname",
                              "path",
                              "extension",
                              "query",
                              "cookie",
                              "deviceCharacteristics",
                              "clientip",
                              "continent",
                              "countrycode",
                              "regioncode",
                              "protocol",
                              "header",
                              "method",
                              "proxy"
                            ]
                          },
                          "checkIPs": {
                            "type": "string",
                            "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                            "enum": [
                              "CONNECTING_IP",
                              "XFF_HEADERS",
                              "CONNECTING_IP XFF_HEADERS"
                            ]
                          },
                          "objectMatchValue": {
                            "type": "object",
                            "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                            "title": "Object match value",
                            "oneOf": [
                              {
                                "type": "object",
                                "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                "title": "Simple",
                                "additionalProperties": false,
                                "required": [
                                  "type",
                                  "value"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "description": "The object type, which is `simple`.\n",
                                    "enum": [
                                      "simple"
                                    ]
                                  },
                                  "value": {
                                    "type": "array",
                                    "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                    "nullable": true,
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                "title": "Object",
                                "additionalProperties": false,
                                "required": [
                                  "name",
                                  "type"
                                ],
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                    "minLength": 1,
                                    "maxLength": 8192
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "The array type, which is `object`.\n",
                                    "enum": [
                                      "object"
                                    ]
                                  },
                                  "options": {
                                    "type": "object",
                                    "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                    "additionalProperties": false,
                                    "properties": {
                                      "value": {
                                        "type": "array",
                                        "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "nullable": true,
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "valueHasWildcard": {
                                        "type": "boolean",
                                        "description": "Set to `true` if the entries for `value` includes wildcards.\n"
                                      },
                                      "valueCaseSensitive": {
                                        "type": "boolean",
                                        "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n"
                                      },
                                      "valueEscaped": {
                                        "type": "boolean",
                                        "description": "Set to `true` if the entries for `value` includes escaped characters.\n"
                                      }
                                    }
                                  },
                                  "nameCaseSensitive": {
                                    "type": "boolean",
                                    "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                  },
                                  "nameHasWildcard": {
                                    "type": "boolean",
                                    "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    },
                    "disabled": {
                      "type": "boolean",
                      "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                      "default": false
                    },
                    "passThroughPercent": {
                      "type": "number",
                      "description": "The range `0.000: 99.000` specifies the percentage of requests that pass through to the origin. The value of `100` means the request always passes through to the origin. For Visitor Prioritization, a value of `-1` means send everyone to the waiting room.\n",
                      "minimum": -1,
                      "maximum": 100
                    },
                    "matchURL": {
                      "type": "string",
                      "description": "The URL the Cloudlet uses to match the incoming request.\n",
                      "nullable": true,
                      "maxLength": 8192
                    },
                    "useIncomingQueryString": {
                      "type": "boolean",
                      "description": "If set to `true`, the Cloudlet includes the request's query string in the rewritten or forwarded URL.\n"
                    }
                  }
                }
              ]
            },
            "type": "array",
            "x-akamai": {
              "file-path": "schemas/match-rules.yaml"
            }
          },
          "policyId": {
            "type": "integer",
            "description": "ID of the policy the version is associated to.\n"
          },
          "revisionId": {
            "type": "integer",
            "description": "ID of the revision.\n"
          },
          "rulesLocked": {
            "type": "boolean",
            "description": "Flag determining whether the rules are locked or not.\n"
          }
        }
      },
      "get-policy-version-response": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "activations",
          "createdBy",
          "createDate",
          "deleted",
          "description",
          "lastModifiedBy",
          "lastModifiedDate",
          "location",
          "matchRuleFormat",
          "matchRules",
          "policyId",
          "revisionId",
          "rulesLocked",
          "version"
        ],
        "properties": {
          "description": {
            "type": "string",
            "description": "Description of the policy version.\n"
          },
          "version": {
            "type": "integer",
            "description": "Version of the policy.\n"
          },
          "activations": {
            "type": "array",
            "description": "List of activations related to the policy version.\n",
            "items": {
              "additionalProperties": false,
              "description": "Returns details of a policy activation.\n",
              "properties": {
                "apiVersion": {
                  "description": "The specific version of this API.\n",
                  "type": "string"
                },
                "network": {
                  "description": "The network, either `STAGING`, `PRODUCTION`, or `prod` as shorthand, on which a load balancing configuration for Application Load Balancer has been activated. Values are case-insensitive in requests.\n",
                  "enum": [
                    "prod",
                    "staging"
                  ],
                  "type": "string"
                },
                "policyInfo": {
                  "type": "object",
                  "description": "Returns details of a policy associated with policy activation.\n",
                  "additionalProperties": false,
                  "required": [
                    "policyId",
                    "name",
                    "version",
                    "status",
                    "statusDetail",
                    "activatedBy",
                    "activationDate"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of the policy.\n"
                    },
                    "version": {
                      "type": "integer",
                      "description": "Version of the policy.\n"
                    },
                    "policyId": {
                      "type": "integer",
                      "description": "ID of the policy.\n"
                    },
                    "status": {
                      "type": "string",
                      "description": "Value representing activation status.\n",
                      "enum": [
                        "INACTIVE",
                        "PENDING",
                        "ACTIVE",
                        "FAILED",
                        "DEACTIVATED"
                      ]
                    },
                    "statusDetail": {
                      "type": "string",
                      "description": "Details of the activation status.\n"
                    },
                    "activatedBy": {
                      "type": "string",
                      "description": "User name who issued the activation.\n",
                      "nullable": true
                    },
                    "activationDate": {
                      "type": "integer",
                      "description": "Date of the activation in milliseconds.\n"
                    }
                  }
                },
                "propertyInfo": {
                  "type": "object",
                  "description": "Returns details of a property associated with policy activation.\n",
                  "additionalProperties": false,
                  "required": [
                    "name",
                    "version",
                    "groupId",
                    "status",
                    "activatedBy",
                    "activationDate",
                    "id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "ID of the property.\n"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the property.\n"
                    },
                    "version": {
                      "type": "integer",
                      "description": "Version of the property.\n"
                    },
                    "groupId": {
                      "type": "integer",
                      "description": "Identifies the group where the property is placed.\n"
                    },
                    "status": {
                      "type": "string",
                      "description": "Value representing activation status.\n",
                      "enum": [
                        "INACTIVE",
                        "PENDING",
                        "ACTIVE",
                        "FAILED",
                        "DEACTIVATED"
                      ]
                    },
                    "activatedBy": {
                      "type": "string",
                      "description": "User name who issued the activation.\n",
                      "nullable": true
                    },
                    "activationDate": {
                      "type": "integer",
                      "description": "Date of the activation in milliseconds.\n"
                    }
                  }
                },
                "serviceVersion": {
                  "description": "__Deprecated__ The build of the software running on the server. The value can be `null`.\n",
                  "nullable": true,
                  "type": "string",
                  "x-akamai": {
                    "status": "DEPRECATED"
                  }
                }
              },
              "required": [
                "network",
                "policyInfo",
                "propertyInfo"
              ],
              "type": "object",
              "x-akamai": {
                "file-path": "schemas/policy-activation.yaml"
              }
            }
          },
          "createDate": {
            "type": "integer",
            "description": "Date of the policy version creation in milliseconds.\n"
          },
          "createdBy": {
            "type": "string",
            "description": "User name who created the policy version.\n"
          },
          "deleted": {
            "type": "boolean",
            "description": "Flag determining whether the policy version is deleted or not.\n"
          },
          "lastModifiedBy": {
            "type": "string",
            "description": "User name who recently modified the policy version.\n"
          },
          "lastModifiedDate": {
            "type": "integer",
            "description": "Date of the recent policy version modification in milliseconds.\n"
          },
          "location": {
            "type": "string",
            "description": "The navigable endpoint used for the object referred to in the operation.\n"
          },
          "matchRuleFormat": {
            "type": "string",
            "description": "The version of the `matchRules` format.\n"
          },
          "matchRules": {
            "description": "A list of Cloudlet-specific match rules for this policy.\n",
            "items": {
              "description": "Contains information about match rules.\n",
              "oneOf": [
                {
                  "type": "object",
                  "description": "Contains match rule information for Application Load Balancer.\n",
                  "title": "Application Load Balancer",
                  "additionalProperties": false,
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Akamai internal use only.\n",
                      "nullable": true,
                      "readOnly": true
                    },
                    "location": {
                      "type": "string",
                      "description": "The navigable endpoint used for the object referred to in the operation.\n",
                      "readOnly": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the rule.\n",
                      "nullable": true,
                      "maxLength": 8192
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of Cloudlet the rule is for. For example, the string for Application Load Balancer is `albMatchRule`.\n",
                      "enum": [
                        "albMatchRule"
                      ]
                    },
                    "akaRuleId": {
                      "type": "string",
                      "description": "The rule's unique identifier within the policy version.\n",
                      "readOnly": true
                    },
                    "disabled": {
                      "type": "boolean",
                      "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                      "default": false
                    },
                    "start": {
                      "type": "integer",
                      "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                      "default": 0,
                      "minimum": 0
                    },
                    "end": {
                      "type": "integer",
                      "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                      "default": 0,
                      "minimum": 0
                    },
                    "matchURL": {
                      "type": "string",
                      "description": "The URL the Cloudlet uses to match the incoming request.\n",
                      "nullable": true,
                      "maxLength": 8192
                    },
                    "matches": {
                      "type": "array",
                      "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                      "nullable": true,
                      "items": {
                        "type": "object",
                        "description": "The match rule criteria.\n",
                        "additionalProperties": false,
                        "oneOf": [
                          {
                            "required": [
                              "matchType",
                              "matchValue"
                            ],
                            "title": "matchType and matchValue required"
                          },
                          {
                            "required": [
                              "matchType",
                              "objectMatchValue"
                            ],
                            "title": "matchType and objectMatchValue required"
                          }
                        ],
                        "properties": {
                          "caseSensitive": {
                            "type": "boolean",
                            "description": "If `true`, the match is case sensitive.\n"
                          },
                          "checkIPs": {
                            "type": "string",
                            "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                            "nullable": true,
                            "enum": [
                              "CONNECTING_IP",
                              "XFF_HEADERS",
                              "CONNECTING_IP XFF_HEADERS"
                            ]
                          },
                          "matchOperator": {
                            "type": "string",
                            "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                            "enum": [
                              "contains",
                              "exists",
                              "equals"
                            ]
                          },
                          "matchType": {
                            "type": "string",
                            "description": "The type of match used.\n",
                            "enum": [
                              "header",
                              "hostname",
                              "path",
                              "extension",
                              "query",
                              "regex",
                              "cookie",
                              "deviceCharacteristics",
                              "clientip",
                              "continent",
                              "countrycode",
                              "regioncode",
                              "protocol",
                              "method",
                              "proxy"
                            ]
                          },
                          "matchValue": {
                            "type": "string",
                            "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                            "minLength": 1,
                            "maxLength": 8192
                          },
                          "negate": {
                            "type": "boolean",
                            "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                          },
                          "objectMatchValue": {
                            "type": "object",
                            "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                            "title": "Object match value",
                            "oneOf": [
                              {
                                "type": "object",
                                "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                "title": "Simple",
                                "additionalProperties": false,
                                "required": [
                                  "type",
                                  "value"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "description": "The object type, which is `simple`.\n",
                                    "enum": [
                                      "simple"
                                    ]
                                  },
                                  "value": {
                                    "type": "array",
                                    "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                    "nullable": true,
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "description": "Use this for more complex match criteria.\n",
                                "title": "Object",
                                "additionalProperties": false,
                                "required": [
                                  "name",
                                  "type"
                                ],
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                    "minLength": 1,
                                    "maxLength": 8192
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "The array type, which is `object`.\n",
                                    "enum": [
                                      "object"
                                    ]
                                  },
                                  "options": {
                                    "type": "object",
                                    "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                    "additionalProperties": false,
                                    "properties": {
                                      "value": {
                                        "type": "array",
                                        "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "nullable": true,
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "valueCaseSensitive": {
                                        "type": "boolean",
                                        "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n"
                                      },
                                      "valueEscaped": {
                                        "type": "boolean",
                                        "description": "Set to `true` if the entries for `value` includes escaped characters.\n"
                                      },
                                      "valueHasWildcard": {
                                        "type": "boolean",
                                        "description": "Set to `true` if the entries for `value` includes wildcards.\n"
                                      }
                                    }
                                  },
                                  "nameCaseSensitive": {
                                    "type": "boolean",
                                    "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                  },
                                  "nameHasWildcard": {
                                    "type": "boolean",
                                    "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    },
                    "matchesAlways": {
                      "type": "boolean",
                      "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n"
                    },
                    "forwardSettings": {
                      "type": "object",
                      "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                      "additionalProperties": false,
                      "properties": {
                        "pathAndQS": {
                          "type": "string",
                          "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                          "minLength": 1,
                          "maxLength": 8192
                        },
                        "useIncomingQueryString": {
                          "type": "boolean",
                          "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n"
                        },
                        "originId": {
                          "type": "string",
                          "description": "The conditional origin's unique identifier.\n",
                          "nullable": true,
                          "maxLength": 8192
                        }
                      }
                    }
                  }
                },
                {
                  "additionalProperties": false,
                  "description": "Contains match rule information for API Prioritization.\n",
                  "properties": {
                    "akaRuleId": {
                      "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "disabled": {
                      "default": false,
                      "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                      "type": "boolean"
                    },
                    "end": {
                      "default": 0,
                      "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "id": {
                      "description": "__Read-only__ Akamai internal use only.\n",
                      "nullable": true,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "location": {
                      "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "matchURL": {
                      "description": "The URL the Cloudlet uses to match the incoming request.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "matches": {
                      "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                      "items": {
                        "additionalProperties": false,
                        "description": "The match rule criteria.\n",
                        "oneOf": [
                          {
                            "required": [
                              "matchType",
                              "matchValue"
                            ],
                            "title": "matchType and matchValue required"
                          },
                          {
                            "required": [
                              "matchType",
                              "objectMatchValue"
                            ],
                            "title": "matchType and objectMatchValue required"
                          }
                        ],
                        "properties": {
                          "caseSensitive": {
                            "description": "If `true`, the match is case sensitive.\n",
                            "type": "boolean"
                          },
                          "checkIPs": {
                            "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                            "enum": [
                              "CONNECTING_IP",
                              "XFF_HEADERS",
                              "CONNECTING_IP XFF_HEADERS"
                            ],
                            "type": "string"
                          },
                          "matchOperator": {
                            "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                            "enum": [
                              "contains",
                              "exists",
                              "equals"
                            ],
                            "type": "string"
                          },
                          "matchType": {
                            "description": "The type of match used.\n",
                            "enum": [
                              "hostname",
                              "path",
                              "extension",
                              "query",
                              "cookie",
                              "deviceCharacteristics",
                              "clientip",
                              "continent",
                              "countrycode",
                              "regioncode",
                              "protocol",
                              "header",
                              "method",
                              "proxy"
                            ],
                            "type": "string"
                          },
                          "matchValue": {
                            "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                            "maxLength": 8192,
                            "minLength": 1,
                            "type": "string"
                          },
                          "negate": {
                            "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                            "type": "boolean"
                          },
                          "objectMatchValue": {
                            "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                            "oneOf": [
                              {
                                "additionalProperties": false,
                                "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                "properties": {
                                  "type": {
                                    "description": "The object type, which is `simple`.\n",
                                    "enum": [
                                      "simple"
                                    ],
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                    "items": {
                                      "type": "string"
                                    },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                },
                                "required": [
                                  "type",
                                  "value"
                                ],
                                "title": "Simple",
                                "type": "object"
                              },
                              {
                                "additionalProperties": false,
                                "description": "Use this for more complex match criteria.\n",
                                "properties": {
                                  "name": {
                                    "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "nameCaseSensitive": {
                                    "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                    "type": "boolean"
                                  },
                                  "nameHasWildcard": {
                                    "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                    "type": "boolean"
                                  },
                                  "options": {
                                    "additionalProperties": false,
                                    "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                    "properties": {
                                      "value": {
                                        "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "items": {
                                          "type": "string"
                                        },
                                        "nullable": true,
                                        "type": "array"
                                      },
                                      "valueCaseSensitive": {
                                        "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                        "type": "boolean"
                                      },
                                      "valueEscaped": {
                                        "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                        "type": "boolean"
                                      },
                                      "valueHasWildcard": {
                                        "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                        "type": "boolean"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": {
                                    "description": "The array type, which is `object`.\n",
                                    "enum": [
                                      "object"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "type"
                                ],
                                "title": "Object",
                                "type": "object"
                              }
                            ],
                            "title": "Object match value",
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "nullable": true,
                      "type": "array"
                    },
                    "name": {
                      "description": "The name of the rule.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "passThroughPercent": {
                      "description": "The percentage of requests that pass through to the origin, with `100` indicating the request always passes through to the origin. For Visitor Prioritization, a value of -1 sends everyone to the waiting room.\n",
                      "maximum": 100,
                      "minimum": -1,
                      "type": "number"
                    },
                    "start": {
                      "default": 0,
                      "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "type": {
                      "description": "The type of Cloudlet the rule is for. For example, the string for API Prioritization is `apMatchRule`.\n",
                      "enum": [
                        "apMatchRule"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "type",
                    "passThroughPercent"
                  ],
                  "title": "API Prioritization",
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/match-rule-ap.yaml"
                  }
                },
                {
                  "additionalProperties": false,
                  "description": "Contains match rule information for Audience Segmentation.\n",
                  "properties": {
                    "akaRuleId": {
                      "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "disabled": {
                      "default": false,
                      "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                      "type": "boolean"
                    },
                    "end": {
                      "default": 0,
                      "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "forwardSettings": {
                      "additionalProperties": false,
                      "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                      "properties": {
                        "originId": {
                          "description": "The conditional origin's unique identifier.\n",
                          "maxLength": 8192,
                          "nullable": true,
                          "type": "string"
                        },
                        "pathAndQS": {
                          "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                          "maxLength": 8192,
                          "minLength": 1,
                          "type": "string"
                        },
                        "useIncomingQueryString": {
                          "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n",
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "id": {
                      "description": "__Read-only__ Akamai internal use only.\n",
                      "nullable": true,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "location": {
                      "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "matchURL": {
                      "description": "The URL the Cloudlet uses to match the incoming request.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "matches": {
                      "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                      "items": {
                        "additionalProperties": false,
                        "description": "The match rule criteria.\n",
                        "oneOf": [
                          {
                            "required": [
                              "matchType",
                              "matchValue"
                            ],
                            "title": "matchType and matchValue required"
                          },
                          {
                            "required": [
                              "matchType",
                              "objectMatchValue"
                            ],
                            "title": "matchType and objectMatchValue required"
                          }
                        ],
                        "properties": {
                          "caseSensitive": {
                            "description": "If `true`, the match is case sensitive.\n",
                            "type": "boolean"
                          },
                          "checkIPs": {
                            "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                            "enum": [
                              "CONNECTING_IP",
                              "XFF_HEADERS",
                              "CONNECTING_IP XFF_HEADERS"
                            ],
                            "type": "string"
                          },
                          "matchOperator": {
                            "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                            "enum": [
                              "contains",
                              "exists",
                              "equals"
                            ],
                            "type": "string"
                          },
                          "matchType": {
                            "description": "The type of match used.\n",
                            "enum": [
                              "header",
                              "hostname",
                              "path",
                              "extension",
                              "query",
                              "range",
                              "regex",
                              "cookie",
                              "deviceCharacteristics",
                              "clientip",
                              "continent",
                              "countrycode",
                              "regioncode",
                              "protocol",
                              "method",
                              "proxy"
                            ],
                            "type": "string"
                          },
                          "matchValue": {
                            "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                            "maxLength": 8192,
                            "minLength": 1,
                            "type": "string"
                          },
                          "negate": {
                            "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                            "type": "boolean"
                          },
                          "objectMatchValue": {
                            "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.\n",
                            "oneOf": [
                              {
                                "additionalProperties": false,
                                "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.\n",
                                "properties": {
                                  "type": {
                                    "description": "The object type, which is `range`.\n",
                                    "enum": [
                                      "range"
                                    ],
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "An inclusive range comprised of two numbers to match on.\n",
                                    "items": {
                                      "type": "integer"
                                    },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                },
                                "required": [
                                  "type",
                                  "value"
                                ],
                                "title": "Range",
                                "type": "object"
                              },
                              {
                                "additionalProperties": false,
                                "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                "properties": {
                                  "type": {
                                    "description": "The object type, which is `simple`.\n",
                                    "enum": [
                                      "simple"
                                    ],
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                    "items": {
                                      "type": "string"
                                    },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                },
                                "required": [
                                  "type",
                                  "value"
                                ],
                                "title": "Simple",
                                "type": "object"
                              },
                              {
                                "additionalProperties": false,
                                "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                "properties": {
                                  "name": {
                                    "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "nameCaseSensitive": {
                                    "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                    "type": "boolean"
                                  },
                                  "nameHasWildcard": {
                                    "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                    "type": "boolean"
                                  },
                                  "options": {
                                    "additionalProperties": false,
                                    "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                    "properties": {
                                      "value": {
                                        "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "items": {
                                          "type": "string"
                                        },
                                        "nullable": true,
                                        "type": "array"
                                      },
                                      "valueCaseSensitive": {
                                        "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                        "type": "boolean"
                                      },
                                      "valueEscaped": {
                                        "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                        "type": "boolean"
                                      },
                                      "valueHasWildcard": {
                                        "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                        "type": "boolean"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": {
                                    "description": "The array type, which is `object`.\n",
                                    "enum": [
                                      "object"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "type"
                                ],
                                "title": "Object",
                                "type": "object"
                              }
                            ],
                            "title": "Object match value",
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "nullable": true,
                      "type": "array"
                    },
                    "name": {
                      "description": "The name of the rule.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "start": {
                      "default": 0,
                      "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "type": {
                      "description": "The type of Cloudlet the rule is for. For example, the string for Audience Segmentation is `asMatchRule`.\n",
                      "enum": [
                        "asMatchRule"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "type"
                  ],
                  "title": "Audience Segmentation",
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/match-rule-as.yaml"
                  }
                },
                {
                  "additionalProperties": false,
                  "description": "Contains match rule information for Phased Release.\n",
                  "properties": {
                    "akaRuleId": {
                      "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "disabled": {
                      "default": false,
                      "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                      "type": "boolean"
                    },
                    "end": {
                      "default": 0,
                      "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "forwardSettings": {
                      "additionalProperties": false,
                      "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, and `percent`.\n",
                      "properties": {
                        "originId": {
                          "description": "The conditional origin's unique identifier.\n",
                          "maxLength": 8192,
                          "nullable": true,
                          "type": "string"
                        },
                        "percent": {
                          "description": "The percentage of visitors directed to a different origin.\n",
                          "maximum": 100,
                          "minimum": 0,
                          "type": "number"
                        }
                      },
                      "type": "object"
                    },
                    "id": {
                      "description": "__Read-only__ Akamai internal use only.\n",
                      "nullable": true,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "location": {
                      "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "matchURL": {
                      "description": "The URL the Cloudlet uses to match the incoming request.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "matches": {
                      "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                      "items": {
                        "additionalProperties": false,
                        "description": "The match rule criteria.\n",
                        "oneOf": [
                          {
                            "required": [
                              "matchType",
                              "matchValue"
                            ],
                            "title": "matchType and matchValue required"
                          },
                          {
                            "required": [
                              "matchType",
                              "objectMatchValue"
                            ],
                            "title": "matchType and objectMatchValue required"
                          }
                        ],
                        "properties": {
                          "caseSensitive": {
                            "description": "If `true`, the match is case sensitive.\n",
                            "type": "boolean"
                          },
                          "checkIPs": {
                            "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                            "enum": [
                              "CONNECTING_IP",
                              "XFF_HEADERS",
                              "CONNECTING_IP XFF_HEADERS"
                            ],
                            "nullable": true,
                            "type": "string"
                          },
                          "matchOperator": {
                            "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                            "enum": [
                              "contains",
                              "exists",
                              "equals"
                            ],
                            "type": "string"
                          },
                          "matchType": {
                            "description": "The type of match used.\n",
                            "enum": [
                              "header",
                              "hostname",
                              "path",
                              "extension",
                              "query",
                              "cookie",
                              "deviceCharacteristics",
                              "clientip",
                              "continent",
                              "countrycode",
                              "regioncode",
                              "protocol",
                              "method",
                              "proxy"
                            ],
                            "type": "string"
                          },
                          "matchValue": {
                            "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                            "maxLength": 8192,
                            "minLength": 1,
                            "type": "string"
                          },
                          "negate": {
                            "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                            "type": "boolean"
                          },
                          "objectMatchValue": {
                            "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                            "oneOf": [
                              {
                                "additionalProperties": false,
                                "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                "properties": {
                                  "type": {
                                    "description": "The object type, which is `simple`.\n",
                                    "enum": [
                                      "simple"
                                    ],
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                    "items": {
                                      "type": "string"
                                    },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                },
                                "required": [
                                  "type",
                                  "value"
                                ],
                                "title": "Simple",
                                "type": "object"
                              },
                              {
                                "additionalProperties": false,
                                "description": "Use this for more complex match criteria.\n",
                                "properties": {
                                  "name": {
                                    "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "nameCaseSensitive": {
                                    "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                    "type": "boolean"
                                  },
                                  "nameHasWildcard": {
                                    "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                    "type": "boolean"
                                  },
                                  "options": {
                                    "additionalProperties": false,
                                    "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                    "properties": {
                                      "value": {
                                        "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "items": {
                                          "type": "string"
                                        },
                                        "nullable": true,
                                        "type": "array"
                                      },
                                      "valueCaseSensitive": {
                                        "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                        "type": "boolean"
                                      },
                                      "valueEscaped": {
                                        "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                        "type": "boolean"
                                      },
                                      "valueHasWildcard": {
                                        "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                        "type": "boolean"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": {
                                    "description": "The array type, which is `object`.\n",
                                    "enum": [
                                      "object"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "type"
                                ],
                                "title": "Object",
                                "type": "object"
                              }
                            ],
                            "title": "Object match value",
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "nullable": true,
                      "type": "array"
                    },
                    "matchesAlways": {
                      "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n",
                      "type": "boolean"
                    },
                    "name": {
                      "description": "The name of the rule.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "start": {
                      "default": 0,
                      "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "type": {
                      "description": "The type of Cloudlet the rule is for. For example, the string for Phased Release is `cdMatchRule`.\n",
                      "enum": [
                        "cdMatchRule"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "type"
                  ],
                  "title": "Phased Release",
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/match-rule-cd.yaml"
                  }
                },
                {
                  "additionalProperties": false,
                  "description": "Contains match rule information for Edge Redirector.\n",
                  "properties": {
                    "akaRuleId": {
                      "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "disabled": {
                      "default": false,
                      "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                      "type": "boolean"
                    },
                    "end": {
                      "default": 0,
                      "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "id": {
                      "description": "__Read-only__ Akamai internal use only.\n",
                      "nullable": true,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "location": {
                      "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "matchURL": {
                      "description": "The URL the Cloudlet uses to match the incoming request.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "matches": {
                      "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                      "items": {
                        "additionalProperties": false,
                        "description": "The match rule criteria.\n",
                        "oneOf": [
                          {
                            "required": [
                              "matchType",
                              "matchValue"
                            ],
                            "title": "matchType and matchValue required"
                          },
                          {
                            "required": [
                              "matchType",
                              "objectMatchValue"
                            ],
                            "title": "matchType and objectMatchValue required"
                          }
                        ],
                        "properties": {
                          "caseSensitive": {
                            "description": "If `true`, the match is case sensitive.\n",
                            "type": "boolean"
                          },
                          "checkIPs": {
                            "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                            "enum": [
                              "CONNECTING_IP",
                              "XFF_HEADERS",
                              "CONNECTING_IP XFF_HEADERS"
                            ],
                            "nullable": true,
                            "type": "string"
                          },
                          "matchOperator": {
                            "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                            "enum": [
                              "contains",
                              "exists",
                              "equals"
                            ],
                            "type": "string"
                          },
                          "matchType": {
                            "description": "The type of match used.\n",
                            "enum": [
                              "header",
                              "hostname",
                              "path",
                              "extension",
                              "query",
                              "regex",
                              "cookie",
                              "deviceCharacteristics",
                              "clientip",
                              "continent",
                              "countrycode",
                              "regioncode",
                              "protocol",
                              "method",
                              "proxy"
                            ],
                            "type": "string"
                          },
                          "matchValue": {
                            "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                            "maxLength": 8192,
                            "minLength": 1,
                            "type": "string"
                          },
                          "negate": {
                            "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                            "type": "boolean"
                          },
                          "objectMatchValue": {
                            "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                            "oneOf": [
                              {
                                "additionalProperties": false,
                                "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                "properties": {
                                  "type": {
                                    "description": "The object type, which is `simple`.\n",
                                    "enum": [
                                      "simple"
                                    ],
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                    "items": {
                                      "type": "string"
                                    },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                },
                                "required": [
                                  "type",
                                  "value"
                                ],
                                "title": "Simple",
                                "type": "object"
                              },
                              {
                                "additionalProperties": false,
                                "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                "properties": {
                                  "name": {
                                    "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "nameCaseSensitive": {
                                    "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                    "type": "boolean"
                                  },
                                  "nameHasWildcard": {
                                    "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                    "type": "boolean"
                                  },
                                  "options": {
                                    "additionalProperties": false,
                                    "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                    "properties": {
                                      "value": {
                                        "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "items": {
                                          "type": "string"
                                        },
                                        "nullable": true,
                                        "type": "array"
                                      },
                                      "valueCaseSensitive": {
                                        "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                        "type": "boolean"
                                      },
                                      "valueEscaped": {
                                        "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                        "type": "boolean"
                                      },
                                      "valueHasWildcard": {
                                        "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                        "type": "boolean"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": {
                                    "description": "The array type, which is `object`.\n",
                                    "enum": [
                                      "object"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "type"
                                ],
                                "title": "Object",
                                "type": "object"
                              }
                            ],
                            "title": "Object match value",
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "nullable": true,
                      "type": "array"
                    },
                    "matchesAlways": {
                      "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n",
                      "type": "boolean"
                    },
                    "name": {
                      "description": "The name of the rule.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "redirectURL": {
                      "description": "The URL Edge Redirector redirects the request to. If using `useRelativeUrl`, you can enter a path for the value. If `useRelativeUrl` is not used or set to `none`, then the `redirectUrl` should be a fully qualified URL.\n",
                      "maxLength": 8192,
                      "minLength": 1,
                      "type": "string"
                    },
                    "start": {
                      "default": 0,
                      "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "statusCode": {
                      "description": "The HTTP response redirect type status code: `301` for permanent redirect, `302` for temporary redirect, `303` for temporary using GET, `307` for temporary retain method, or `308` for permanent retain method.\n",
                      "enum": [
                        301,
                        302,
                        303,
                        307,
                        308
                      ],
                      "type": "integer"
                    },
                    "type": {
                      "description": "The type of Cloudlet the rule is for. For example, the string for Edge Redirector is `erMatchRule`.\n",
                      "enum": [
                        "erMatchRule"
                      ],
                      "type": "string"
                    },
                    "useIncomingQueryString": {
                      "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n",
                      "type": "boolean"
                    },
                    "useIncomingSchemeAndHost": {
                      "description": "If set to `true`, the Cloudlet copies both the scheme and the hostname from the incoming request to use in the redirect URL.\n",
                      "type": "boolean"
                    },
                    "useRelativeUrl": {
                      "description": "If set to `relative_url`, takes the path entered for the `redirectUrl` and sets it in the response’s `Location` header. The client browser receiving the request decides which protocol and hostname to use. If set to `copy_scheme_hostname`, it creates an absolute path by taking the protocol and hostname from the incoming request and combining them with path information entered for the `redirectUrl`. This absolute path is set in the response’s `Location` header. If you don't include `useRelativeUrl`, or if you set it to `none`, then specify the `redirectUrl` as a fully qualified URL.\n",
                      "enum": [
                        "relative_url",
                        "copy_scheme_hostname",
                        "none"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "type",
                    "redirectURL",
                    "statusCode"
                  ],
                  "title": "Edge Redirector",
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/match-rule-er.yaml"
                  }
                },
                {
                  "additionalProperties": false,
                  "description": "Contains match rule information for Forward Rewrite.\n",
                  "properties": {
                    "akaRuleId": {
                      "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "disabled": {
                      "default": false,
                      "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                      "type": "boolean"
                    },
                    "end": {
                      "default": 0,
                      "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "forwardSettings": {
                      "additionalProperties": false,
                      "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                      "properties": {
                        "originId": {
                          "description": "The conditional origin's unique identifier.\n",
                          "maxLength": 8192,
                          "nullable": true,
                          "type": "string"
                        },
                        "pathAndQS": {
                          "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                          "maxLength": 8192,
                          "minLength": 1,
                          "type": "string"
                        },
                        "useIncomingQueryString": {
                          "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n",
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "id": {
                      "description": "__Read-only__ Akamai internal use only.\n",
                      "nullable": true,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "location": {
                      "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "matchURL": {
                      "description": "The URL the Cloudlet uses to match the incoming request.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "matches": {
                      "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                      "items": {
                        "additionalProperties": false,
                        "description": "The match rule criteria.\n",
                        "oneOf": [
                          {
                            "required": [
                              "matchType",
                              "matchValue"
                            ],
                            "title": "matchType and matchValue required"
                          },
                          {
                            "required": [
                              "matchType",
                              "objectMatchValue"
                            ],
                            "title": "matchType and objectMatchValue required"
                          }
                        ],
                        "properties": {
                          "caseSensitive": {
                            "description": "If `true`, the match is case sensitive.\n",
                            "type": "boolean"
                          },
                          "checkIPs": {
                            "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                            "enum": [
                              "CONNECTING_IP",
                              "XFF_HEADERS",
                              "CONNECTING_IP XFF_HEADERS"
                            ],
                            "type": "string"
                          },
                          "matchOperator": {
                            "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                            "enum": [
                              "contains",
                              "exists",
                              "equals"
                            ],
                            "type": "string"
                          },
                          "matchType": {
                            "description": "The type of match used.\n",
                            "enum": [
                              "header",
                              "hostname",
                              "path",
                              "extension",
                              "query",
                              "regex",
                              "cookie",
                              "deviceCharacteristics",
                              "clientip",
                              "continent",
                              "countrycode",
                              "regioncode",
                              "protocol",
                              "method",
                              "proxy"
                            ],
                            "type": "string"
                          },
                          "matchValue": {
                            "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                            "maxLength": 8192,
                            "minLength": 1,
                            "type": "string"
                          },
                          "negate": {
                            "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                            "type": "boolean"
                          },
                          "objectMatchValue": {
                            "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                            "oneOf": [
                              {
                                "additionalProperties": false,
                                "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                "properties": {
                                  "type": {
                                    "description": "The object type, which is `simple`.\n",
                                    "enum": [
                                      "simple"
                                    ],
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                    "items": {
                                      "type": "string"
                                    },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                },
                                "required": [
                                  "type",
                                  "value"
                                ],
                                "title": "Simple",
                                "type": "object"
                              },
                              {
                                "additionalProperties": false,
                                "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                "properties": {
                                  "name": {
                                    "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "nameCaseSensitive": {
                                    "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                    "type": "boolean"
                                  },
                                  "nameHasWildcard": {
                                    "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                    "type": "boolean"
                                  },
                                  "options": {
                                    "additionalProperties": false,
                                    "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                    "properties": {
                                      "value": {
                                        "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "items": {
                                          "type": "string"
                                        },
                                        "nullable": true,
                                        "type": "array"
                                      },
                                      "valueCaseSensitive": {
                                        "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                        "type": "boolean"
                                      },
                                      "valueEscaped": {
                                        "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                        "type": "boolean"
                                      },
                                      "valueHasWildcard": {
                                        "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                        "type": "boolean"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": {
                                    "description": "The array type, which is `object`.\n",
                                    "enum": [
                                      "object"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "type"
                                ],
                                "title": "Object",
                                "type": "object"
                              }
                            ],
                            "title": "Object match value",
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "nullable": true,
                      "type": "array"
                    },
                    "name": {
                      "description": "The name of the rule.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "start": {
                      "default": 0,
                      "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "type": {
                      "description": "The type of Cloudlet the rule is for. For example, the string for Forward Rewrite is `frMatchRule`.\n",
                      "enum": [
                        "frMatchRule"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "type",
                    "forwardSettings"
                  ],
                  "title": "Forward Rewrite",
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/match-rule-fr.yaml"
                  }
                },
                {
                  "additionalProperties": false,
                  "description": "Contains match rule information for Request Control.\n",
                  "properties": {
                    "akaRuleId": {
                      "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "allowDeny": {
                      "description": "If set to `allow`, the request is sent to origin when all conditions are true. If `deny`, the request is denied when all conditions are true. If `denybranded`, the request is denied and rerouted according to the configuration of the [Request Control behavior](https://techdocs.akamai.com/property-mgr/reference/latest-request-control).\n",
                      "enum": [
                        "allow",
                        "deny",
                        "denybranded"
                      ],
                      "type": "string"
                    },
                    "disabled": {
                      "default": false,
                      "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                      "type": "boolean"
                    },
                    "end": {
                      "default": 0,
                      "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "id": {
                      "description": "__Read-only__ Akamai internal use only.\n",
                      "nullable": true,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "location": {
                      "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "matches": {
                      "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                      "items": {
                        "additionalProperties": false,
                        "description": "The match rule criteria.\n",
                        "oneOf": [
                          {
                            "required": [
                              "matchType",
                              "matchValue"
                            ],
                            "title": "matchType and matchValue required"
                          },
                          {
                            "required": [
                              "matchType",
                              "objectMatchValue"
                            ],
                            "title": "matchType and objectMatchValue required"
                          }
                        ],
                        "properties": {
                          "caseSensitive": {
                            "description": "If `true`, the match is case sensitive.\n",
                            "type": "boolean"
                          },
                          "checkIPs": {
                            "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                            "enum": [
                              "CONNECTING_IP",
                              "XFF_HEADERS",
                              "CONNECTING_IP XFF_HEADERS"
                            ],
                            "type": "string"
                          },
                          "matchOperator": {
                            "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                            "enum": [
                              "contains",
                              "exists",
                              "equals"
                            ],
                            "type": "string"
                          },
                          "matchType": {
                            "description": "The type of match used.\n",
                            "enum": [
                              "clientip",
                              "continent",
                              "cookie",
                              "countrycode",
                              "deviceCharacteristics",
                              "extension",
                              "header",
                              "hostname",
                              "method",
                              "path",
                              "protocol",
                              "proxy",
                              "query",
                              "regioncode"
                            ],
                            "type": "string"
                          },
                          "matchValue": {
                            "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                            "maxLength": 8192,
                            "minLength": 1,
                            "type": "string"
                          },
                          "negate": {
                            "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                            "type": "boolean"
                          },
                          "objectMatchValue": {
                            "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                            "oneOf": [
                              {
                                "additionalProperties": false,
                                "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                "properties": {
                                  "type": {
                                    "description": "The object type, which is `simple`.\n",
                                    "enum": [
                                      "simple"
                                    ],
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                    "items": {
                                      "type": "string"
                                    },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                },
                                "required": [
                                  "type",
                                  "value"
                                ],
                                "title": "Simple",
                                "type": "object"
                              },
                              {
                                "additionalProperties": false,
                                "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                "properties": {
                                  "name": {
                                    "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "nameCaseSensitive": {
                                    "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                    "type": "boolean"
                                  },
                                  "nameHasWildcard": {
                                    "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                    "type": "boolean"
                                  },
                                  "options": {
                                    "additionalProperties": false,
                                    "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                    "properties": {
                                      "value": {
                                        "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "items": {
                                          "type": "string"
                                        },
                                        "nullable": true,
                                        "type": "array"
                                      },
                                      "valueCaseSensitive": {
                                        "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                        "type": "boolean"
                                      },
                                      "valueEscaped": {
                                        "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                        "type": "boolean"
                                      },
                                      "valueHasWildcard": {
                                        "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                        "type": "boolean"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": {
                                    "description": "The array type, which is `object`.\n",
                                    "enum": [
                                      "object"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "type"
                                ],
                                "title": "Object",
                                "type": "object"
                              }
                            ],
                            "title": "Object match value",
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "nullable": true,
                      "type": "array"
                    },
                    "matchesAlways": {
                      "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n",
                      "type": "boolean"
                    },
                    "name": {
                      "description": "The name of the rule.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "start": {
                      "default": 0,
                      "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "type": {
                      "description": "The type of Cloudlet the rule is for. For example, the string for Request Control is `igMatchRule`.\n",
                      "enum": [
                        "igMatchRule"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "type",
                    "allowDeny"
                  ],
                  "title": "Request Control",
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/match-rule-ig.yaml"
                  }
                },
                {
                  "type": "object",
                  "description": "Contains match rule information for Visitor Prioritization.\n",
                  "title": "Visitor Prioritization",
                  "additionalProperties": false,
                  "required": [
                    "type",
                    "passThroughPercent"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Akamai internal use only.\n",
                      "nullable": true,
                      "readOnly": true
                    },
                    "location": {
                      "type": "string",
                      "description": "The navigable endpoint used for the object referred to in the operation.\n",
                      "readOnly": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the rule.\n",
                      "nullable": true,
                      "maxLength": 8192
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of Cloudlet the rule is for. For example, the string for Visitor Prioritization is `vpMatchRule`.\n",
                      "enum": [
                        "vpMatchRule"
                      ]
                    },
                    "akaRuleId": {
                      "type": "string",
                      "description": "The rule's unique identifier within the policy version.\n",
                      "readOnly": true
                    },
                    "start": {
                      "type": "integer",
                      "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                      "default": 0,
                      "minimum": 0
                    },
                    "end": {
                      "type": "integer",
                      "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                      "default": 0,
                      "minimum": 0
                    },
                    "matches": {
                      "type": "array",
                      "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                      "nullable": true,
                      "items": {
                        "type": "object",
                        "description": "The match rule criteria.\n",
                        "additionalProperties": false,
                        "oneOf": [
                          {
                            "required": [
                              "matchType",
                              "matchValue"
                            ],
                            "title": "matchType and matchValue required"
                          },
                          {
                            "required": [
                              "matchType",
                              "objectMatchValue"
                            ],
                            "title": "matchType and objectMatchValue required"
                          }
                        ],
                        "properties": {
                          "caseSensitive": {
                            "type": "boolean",
                            "description": "If `true`, the match is case sensitive.\n"
                          },
                          "matchValue": {
                            "type": "string",
                            "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                            "minLength": 1,
                            "maxLength": 8192
                          },
                          "negate": {
                            "type": "boolean",
                            "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                          },
                          "matchOperator": {
                            "type": "string",
                            "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                            "enum": [
                              "contains",
                              "exists",
                              "equals"
                            ]
                          },
                          "matchType": {
                            "type": "string",
                            "description": "The type of match used.\n",
                            "enum": [
                              "hostname",
                              "path",
                              "extension",
                              "query",
                              "cookie",
                              "deviceCharacteristics",
                              "clientip",
                              "continent",
                              "countrycode",
                              "regioncode",
                              "protocol",
                              "header",
                              "method",
                              "proxy"
                            ]
                          },
                          "checkIPs": {
                            "type": "string",
                            "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                            "enum": [
                              "CONNECTING_IP",
                              "XFF_HEADERS",
                              "CONNECTING_IP XFF_HEADERS"
                            ]
                          },
                          "objectMatchValue": {
                            "type": "object",
                            "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                            "title": "Object match value",
                            "oneOf": [
                              {
                                "type": "object",
                                "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                "title": "Simple",
                                "additionalProperties": false,
                                "required": [
                                  "type",
                                  "value"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "description": "The object type, which is `simple`.\n",
                                    "enum": [
                                      "simple"
                                    ]
                                  },
                                  "value": {
                                    "type": "array",
                                    "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                    "nullable": true,
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                "title": "Object",
                                "additionalProperties": false,
                                "required": [
                                  "name",
                                  "type"
                                ],
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                    "minLength": 1,
                                    "maxLength": 8192
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "The array type, which is `object`.\n",
                                    "enum": [
                                      "object"
                                    ]
                                  },
                                  "options": {
                                    "type": "object",
                                    "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                    "additionalProperties": false,
                                    "properties": {
                                      "value": {
                                        "type": "array",
                                        "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "nullable": true,
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "valueHasWildcard": {
                                        "type": "boolean",
                                        "description": "Set to `true` if the entries for `value` includes wildcards.\n"
                                      },
                                      "valueCaseSensitive": {
                                        "type": "boolean",
                                        "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n"
                                      },
                                      "valueEscaped": {
                                        "type": "boolean",
                                        "description": "Set to `true` if the entries for `value` includes escaped characters.\n"
                                      }
                                    }
                                  },
                                  "nameCaseSensitive": {
                                    "type": "boolean",
                                    "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                  },
                                  "nameHasWildcard": {
                                    "type": "boolean",
                                    "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    },
                    "disabled": {
                      "type": "boolean",
                      "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                      "default": false
                    },
                    "passThroughPercent": {
                      "type": "number",
                      "description": "The range `0.000: 99.000` specifies the percentage of requests that pass through to the origin. The value of `100` means the request always passes through to the origin. For Visitor Prioritization, a value of `-1` means send everyone to the waiting room.\n",
                      "minimum": -1,
                      "maximum": 100
                    },
                    "matchURL": {
                      "type": "string",
                      "description": "The URL the Cloudlet uses to match the incoming request.\n",
                      "nullable": true,
                      "maxLength": 8192
                    },
                    "useIncomingQueryString": {
                      "type": "boolean",
                      "description": "If set to `true`, the Cloudlet includes the request's query string in the rewritten or forwarded URL.\n"
                    }
                  }
                }
              ]
            },
            "type": "array",
            "x-akamai": {
              "file-path": "schemas/match-rules.yaml"
            }
          },
          "policyId": {
            "type": "integer",
            "description": "ID of the policy the version is associated to.\n"
          },
          "revisionId": {
            "type": "integer",
            "description": "ID of the revision.\n"
          },
          "rulesLocked": {
            "type": "boolean",
            "description": "Flag determining whether the rules are locked or not.\n"
          }
        }
      },
      "put-policy-version-request": {
        "additionalProperties": false,
        "properties": {
          "description": {
            "description": "Description of the policy version.\n",
            "type": "string"
          },
          "matchRules": {
            "description": "Cloudlet-specific match rules for this policy.\n",
            "items": {
              "description": "Contains information about match rules.\n",
              "oneOf": [
                {
                  "type": "object",
                  "description": "Contains match rule information for Application Load Balancer.\n",
                  "title": "Application Load Balancer",
                  "additionalProperties": false,
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Akamai internal use only.\n",
                      "nullable": true,
                      "readOnly": true
                    },
                    "location": {
                      "type": "string",
                      "description": "The navigable endpoint used for the object referred to in the operation.\n",
                      "readOnly": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the rule.\n",
                      "nullable": true,
                      "maxLength": 8192
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of Cloudlet the rule is for. For example, the string for Application Load Balancer is `albMatchRule`.\n",
                      "enum": [
                        "albMatchRule"
                      ]
                    },
                    "akaRuleId": {
                      "type": "string",
                      "description": "The rule's unique identifier within the policy version.\n",
                      "readOnly": true
                    },
                    "disabled": {
                      "type": "boolean",
                      "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                      "default": false
                    },
                    "start": {
                      "type": "integer",
                      "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                      "default": 0,
                      "minimum": 0
                    },
                    "end": {
                      "type": "integer",
                      "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                      "default": 0,
                      "minimum": 0
                    },
                    "matchURL": {
                      "type": "string",
                      "description": "The URL the Cloudlet uses to match the incoming request.\n",
                      "nullable": true,
                      "maxLength": 8192
                    },
                    "matches": {
                      "type": "array",
                      "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                      "nullable": true,
                      "items": {
                        "type": "object",
                        "description": "The match rule criteria.\n",
                        "additionalProperties": false,
                        "oneOf": [
                          {
                            "required": [
                              "matchType",
                              "matchValue"
                            ],
                            "title": "matchType and matchValue required"
                          },
                          {
                            "required": [
                              "matchType",
                              "objectMatchValue"
                            ],
                            "title": "matchType and objectMatchValue required"
                          }
                        ],
                        "properties": {
                          "caseSensitive": {
                            "type": "boolean",
                            "description": "If `true`, the match is case sensitive.\n"
                          },
                          "checkIPs": {
                            "type": "string",
                            "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                            "nullable": true,
                            "enum": [
                              "CONNECTING_IP",
                              "XFF_HEADERS",
                              "CONNECTING_IP XFF_HEADERS"
                            ]
                          },
                          "matchOperator": {
                            "type": "string",
                            "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                            "enum": [
                              "contains",
                              "exists",
                              "equals"
                            ]
                          },
                          "matchType": {
                            "type": "string",
                            "description": "The type of match used.\n",
                            "enum": [
                              "header",
                              "hostname",
                              "path",
                              "extension",
                              "query",
                              "regex",
                              "cookie",
                              "deviceCharacteristics",
                              "clientip",
                              "continent",
                              "countrycode",
                              "regioncode",
                              "protocol",
                              "method",
                              "proxy"
                            ]
                          },
                          "matchValue": {
                            "type": "string",
                            "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                            "minLength": 1,
                            "maxLength": 8192
                          },
                          "negate": {
                            "type": "boolean",
                            "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                          },
                          "objectMatchValue": {
                            "type": "object",
                            "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                            "title": "Object match value",
                            "oneOf": [
                              {
                                "type": "object",
                                "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                "title": "Simple",
                                "additionalProperties": false,
                                "required": [
                                  "type",
                                  "value"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "description": "The object type, which is `simple`.\n",
                                    "enum": [
                                      "simple"
                                    ]
                                  },
                                  "value": {
                                    "type": "array",
                                    "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                    "nullable": true,
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "description": "Use this for more complex match criteria.\n",
                                "title": "Object",
                                "additionalProperties": false,
                                "required": [
                                  "name",
                                  "type"
                                ],
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                    "minLength": 1,
                                    "maxLength": 8192
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "The array type, which is `object`.\n",
                                    "enum": [
                                      "object"
                                    ]
                                  },
                                  "options": {
                                    "type": "object",
                                    "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                    "additionalProperties": false,
                                    "properties": {
                                      "value": {
                                        "type": "array",
                                        "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "nullable": true,
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "valueCaseSensitive": {
                                        "type": "boolean",
                                        "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n"
                                      },
                                      "valueEscaped": {
                                        "type": "boolean",
                                        "description": "Set to `true` if the entries for `value` includes escaped characters.\n"
                                      },
                                      "valueHasWildcard": {
                                        "type": "boolean",
                                        "description": "Set to `true` if the entries for `value` includes wildcards.\n"
                                      }
                                    }
                                  },
                                  "nameCaseSensitive": {
                                    "type": "boolean",
                                    "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                  },
                                  "nameHasWildcard": {
                                    "type": "boolean",
                                    "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    },
                    "matchesAlways": {
                      "type": "boolean",
                      "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n"
                    },
                    "forwardSettings": {
                      "type": "object",
                      "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                      "additionalProperties": false,
                      "properties": {
                        "pathAndQS": {
                          "type": "string",
                          "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                          "minLength": 1,
                          "maxLength": 8192
                        },
                        "useIncomingQueryString": {
                          "type": "boolean",
                          "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n"
                        },
                        "originId": {
                          "type": "string",
                          "description": "The conditional origin's unique identifier.\n",
                          "nullable": true,
                          "maxLength": 8192
                        }
                      }
                    }
                  }
                },
                {
                  "additionalProperties": false,
                  "description": "Contains match rule information for API Prioritization.\n",
                  "properties": {
                    "akaRuleId": {
                      "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "disabled": {
                      "default": false,
                      "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                      "type": "boolean"
                    },
                    "end": {
                      "default": 0,
                      "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "id": {
                      "description": "__Read-only__ Akamai internal use only.\n",
                      "nullable": true,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "location": {
                      "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "matchURL": {
                      "description": "The URL the Cloudlet uses to match the incoming request.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "matches": {
                      "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                      "items": {
                        "additionalProperties": false,
                        "description": "The match rule criteria.\n",
                        "oneOf": [
                          {
                            "required": [
                              "matchType",
                              "matchValue"
                            ],
                            "title": "matchType and matchValue required"
                          },
                          {
                            "required": [
                              "matchType",
                              "objectMatchValue"
                            ],
                            "title": "matchType and objectMatchValue required"
                          }
                        ],
                        "properties": {
                          "caseSensitive": {
                            "description": "If `true`, the match is case sensitive.\n",
                            "type": "boolean"
                          },
                          "checkIPs": {
                            "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                            "enum": [
                              "CONNECTING_IP",
                              "XFF_HEADERS",
                              "CONNECTING_IP XFF_HEADERS"
                            ],
                            "type": "string"
                          },
                          "matchOperator": {
                            "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                            "enum": [
                              "contains",
                              "exists",
                              "equals"
                            ],
                            "type": "string"
                          },
                          "matchType": {
                            "description": "The type of match used.\n",
                            "enum": [
                              "hostname",
                              "path",
                              "extension",
                              "query",
                              "cookie",
                              "deviceCharacteristics",
                              "clientip",
                              "continent",
                              "countrycode",
                              "regioncode",
                              "protocol",
                              "header",
                              "method",
                              "proxy"
                            ],
                            "type": "string"
                          },
                          "matchValue": {
                            "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                            "maxLength": 8192,
                            "minLength": 1,
                            "type": "string"
                          },
                          "negate": {
                            "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                            "type": "boolean"
                          },
                          "objectMatchValue": {
                            "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                            "oneOf": [
                              {
                                "additionalProperties": false,
                                "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                "properties": {
                                  "type": {
                                    "description": "The object type, which is `simple`.\n",
                                    "enum": [
                                      "simple"
                                    ],
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                    "items": {
                                      "type": "string"
                                    },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                },
                                "required": [
                                  "type",
                                  "value"
                                ],
                                "title": "Simple",
                                "type": "object"
                              },
                              {
                                "additionalProperties": false,
                                "description": "Use this for more complex match criteria.\n",
                                "properties": {
                                  "name": {
                                    "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "nameCaseSensitive": {
                                    "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                    "type": "boolean"
                                  },
                                  "nameHasWildcard": {
                                    "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                    "type": "boolean"
                                  },
                                  "options": {
                                    "additionalProperties": false,
                                    "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                    "properties": {
                                      "value": {
                                        "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "items": {
                                          "type": "string"
                                        },
                                        "nullable": true,
                                        "type": "array"
                                      },
                                      "valueCaseSensitive": {
                                        "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                        "type": "boolean"
                                      },
                                      "valueEscaped": {
                                        "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                        "type": "boolean"
                                      },
                                      "valueHasWildcard": {
                                        "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                        "type": "boolean"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": {
                                    "description": "The array type, which is `object`.\n",
                                    "enum": [
                                      "object"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "type"
                                ],
                                "title": "Object",
                                "type": "object"
                              }
                            ],
                            "title": "Object match value",
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "nullable": true,
                      "type": "array"
                    },
                    "name": {
                      "description": "The name of the rule.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "passThroughPercent": {
                      "description": "The percentage of requests that pass through to the origin, with `100` indicating the request always passes through to the origin. For Visitor Prioritization, a value of -1 sends everyone to the waiting room.\n",
                      "maximum": 100,
                      "minimum": -1,
                      "type": "number"
                    },
                    "start": {
                      "default": 0,
                      "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "type": {
                      "description": "The type of Cloudlet the rule is for. For example, the string for API Prioritization is `apMatchRule`.\n",
                      "enum": [
                        "apMatchRule"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "type",
                    "passThroughPercent"
                  ],
                  "title": "API Prioritization",
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/match-rule-ap.yaml"
                  }
                },
                {
                  "additionalProperties": false,
                  "description": "Contains match rule information for Audience Segmentation.\n",
                  "properties": {
                    "akaRuleId": {
                      "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "disabled": {
                      "default": false,
                      "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                      "type": "boolean"
                    },
                    "end": {
                      "default": 0,
                      "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "forwardSettings": {
                      "additionalProperties": false,
                      "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                      "properties": {
                        "originId": {
                          "description": "The conditional origin's unique identifier.\n",
                          "maxLength": 8192,
                          "nullable": true,
                          "type": "string"
                        },
                        "pathAndQS": {
                          "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                          "maxLength": 8192,
                          "minLength": 1,
                          "type": "string"
                        },
                        "useIncomingQueryString": {
                          "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n",
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "id": {
                      "description": "__Read-only__ Akamai internal use only.\n",
                      "nullable": true,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "location": {
                      "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "matchURL": {
                      "description": "The URL the Cloudlet uses to match the incoming request.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "matches": {
                      "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                      "items": {
                        "additionalProperties": false,
                        "description": "The match rule criteria.\n",
                        "oneOf": [
                          {
                            "required": [
                              "matchType",
                              "matchValue"
                            ],
                            "title": "matchType and matchValue required"
                          },
                          {
                            "required": [
                              "matchType",
                              "objectMatchValue"
                            ],
                            "title": "matchType and objectMatchValue required"
                          }
                        ],
                        "properties": {
                          "caseSensitive": {
                            "description": "If `true`, the match is case sensitive.\n",
                            "type": "boolean"
                          },
                          "checkIPs": {
                            "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                            "enum": [
                              "CONNECTING_IP",
                              "XFF_HEADERS",
                              "CONNECTING_IP XFF_HEADERS"
                            ],
                            "type": "string"
                          },
                          "matchOperator": {
                            "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                            "enum": [
                              "contains",
                              "exists",
                              "equals"
                            ],
                            "type": "string"
                          },
                          "matchType": {
                            "description": "The type of match used.\n",
                            "enum": [
                              "header",
                              "hostname",
                              "path",
                              "extension",
                              "query",
                              "range",
                              "regex",
                              "cookie",
                              "deviceCharacteristics",
                              "clientip",
                              "continent",
                              "countrycode",
                              "regioncode",
                              "protocol",
                              "method",
                              "proxy"
                            ],
                            "type": "string"
                          },
                          "matchValue": {
                            "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                            "maxLength": 8192,
                            "minLength": 1,
                            "type": "string"
                          },
                          "negate": {
                            "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                            "type": "boolean"
                          },
                          "objectMatchValue": {
                            "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.\n",
                            "oneOf": [
                              {
                                "additionalProperties": false,
                                "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.\n",
                                "properties": {
                                  "type": {
                                    "description": "The object type, which is `range`.\n",
                                    "enum": [
                                      "range"
                                    ],
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "An inclusive range comprised of two numbers to match on.\n",
                                    "items": {
                                      "type": "integer"
                                    },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                },
                                "required": [
                                  "type",
                                  "value"
                                ],
                                "title": "Range",
                                "type": "object"
                              },
                              {
                                "additionalProperties": false,
                                "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                "properties": {
                                  "type": {
                                    "description": "The object type, which is `simple`.\n",
                                    "enum": [
                                      "simple"
                                    ],
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                    "items": {
                                      "type": "string"
                                    },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                },
                                "required": [
                                  "type",
                                  "value"
                                ],
                                "title": "Simple",
                                "type": "object"
                              },
                              {
                                "additionalProperties": false,
                                "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                "properties": {
                                  "name": {
                                    "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "nameCaseSensitive": {
                                    "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                    "type": "boolean"
                                  },
                                  "nameHasWildcard": {
                                    "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                    "type": "boolean"
                                  },
                                  "options": {
                                    "additionalProperties": false,
                                    "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                    "properties": {
                                      "value": {
                                        "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "items": {
                                          "type": "string"
                                        },
                                        "nullable": true,
                                        "type": "array"
                                      },
                                      "valueCaseSensitive": {
                                        "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                        "type": "boolean"
                                      },
                                      "valueEscaped": {
                                        "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                        "type": "boolean"
                                      },
                                      "valueHasWildcard": {
                                        "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                        "type": "boolean"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": {
                                    "description": "The array type, which is `object`.\n",
                                    "enum": [
                                      "object"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "type"
                                ],
                                "title": "Object",
                                "type": "object"
                              }
                            ],
                            "title": "Object match value",
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "nullable": true,
                      "type": "array"
                    },
                    "name": {
                      "description": "The name of the rule.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "start": {
                      "default": 0,
                      "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "type": {
                      "description": "The type of Cloudlet the rule is for. For example, the string for Audience Segmentation is `asMatchRule`.\n",
                      "enum": [
                        "asMatchRule"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "type"
                  ],
                  "title": "Audience Segmentation",
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/match-rule-as.yaml"
                  }
                },
                {
                  "additionalProperties": false,
                  "description": "Contains match rule information for Phased Release.\n",
                  "properties": {
                    "akaRuleId": {
                      "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "disabled": {
                      "default": false,
                      "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                      "type": "boolean"
                    },
                    "end": {
                      "default": 0,
                      "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "forwardSettings": {
                      "additionalProperties": false,
                      "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, and `percent`.\n",
                      "properties": {
                        "originId": {
                          "description": "The conditional origin's unique identifier.\n",
                          "maxLength": 8192,
                          "nullable": true,
                          "type": "string"
                        },
                        "percent": {
                          "description": "The percentage of visitors directed to a different origin.\n",
                          "maximum": 100,
                          "minimum": 0,
                          "type": "number"
                        }
                      },
                      "type": "object"
                    },
                    "id": {
                      "description": "__Read-only__ Akamai internal use only.\n",
                      "nullable": true,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "location": {
                      "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "matchURL": {
                      "description": "The URL the Cloudlet uses to match the incoming request.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "matches": {
                      "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                      "items": {
                        "additionalProperties": false,
                        "description": "The match rule criteria.\n",
                        "oneOf": [
                          {
                            "required": [
                              "matchType",
                              "matchValue"
                            ],
                            "title": "matchType and matchValue required"
                          },
                          {
                            "required": [
                              "matchType",
                              "objectMatchValue"
                            ],
                            "title": "matchType and objectMatchValue required"
                          }
                        ],
                        "properties": {
                          "caseSensitive": {
                            "description": "If `true`, the match is case sensitive.\n",
                            "type": "boolean"
                          },
                          "checkIPs": {
                            "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                            "enum": [
                              "CONNECTING_IP",
                              "XFF_HEADERS",
                              "CONNECTING_IP XFF_HEADERS"
                            ],
                            "nullable": true,
                            "type": "string"
                          },
                          "matchOperator": {
                            "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                            "enum": [
                              "contains",
                              "exists",
                              "equals"
                            ],
                            "type": "string"
                          },
                          "matchType": {
                            "description": "The type of match used.\n",
                            "enum": [
                              "header",
                              "hostname",
                              "path",
                              "extension",
                              "query",
                              "cookie",
                              "deviceCharacteristics",
                              "clientip",
                              "continent",
                              "countrycode",
                              "regioncode",
                              "protocol",
                              "method",
                              "proxy"
                            ],
                            "type": "string"
                          },
                          "matchValue": {
                            "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                            "maxLength": 8192,
                            "minLength": 1,
                            "type": "string"
                          },
                          "negate": {
                            "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                            "type": "boolean"
                          },
                          "objectMatchValue": {
                            "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                            "oneOf": [
                              {
                                "additionalProperties": false,
                                "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                "properties": {
                                  "type": {
                                    "description": "The object type, which is `simple`.\n",
                                    "enum": [
                                      "simple"
                                    ],
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                    "items": {
                                      "type": "string"
                                    },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                },
                                "required": [
                                  "type",
                                  "value"
                                ],
                                "title": "Simple",
                                "type": "object"
                              },
                              {
                                "additionalProperties": false,
                                "description": "Use this for more complex match criteria.\n",
                                "properties": {
                                  "name": {
                                    "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "nameCaseSensitive": {
                                    "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                    "type": "boolean"
                                  },
                                  "nameHasWildcard": {
                                    "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                    "type": "boolean"
                                  },
                                  "options": {
                                    "additionalProperties": false,
                                    "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                    "properties": {
                                      "value": {
                                        "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "items": {
                                          "type": "string"
                                        },
                                        "nullable": true,
                                        "type": "array"
                                      },
                                      "valueCaseSensitive": {
                                        "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                        "type": "boolean"
                                      },
                                      "valueEscaped": {
                                        "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                        "type": "boolean"
                                      },
                                      "valueHasWildcard": {
                                        "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                        "type": "boolean"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": {
                                    "description": "The array type, which is `object`.\n",
                                    "enum": [
                                      "object"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "type"
                                ],
                                "title": "Object",
                                "type": "object"
                              }
                            ],
                            "title": "Object match value",
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "nullable": true,
                      "type": "array"
                    },
                    "matchesAlways": {
                      "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n",
                      "type": "boolean"
                    },
                    "name": {
                      "description": "The name of the rule.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "start": {
                      "default": 0,
                      "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "type": {
                      "description": "The type of Cloudlet the rule is for. For example, the string for Phased Release is `cdMatchRule`.\n",
                      "enum": [
                        "cdMatchRule"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "type"
                  ],
                  "title": "Phased Release",
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/match-rule-cd.yaml"
                  }
                },
                {
                  "additionalProperties": false,
                  "description": "Contains match rule information for Edge Redirector.\n",
                  "properties": {
                    "akaRuleId": {
                      "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "disabled": {
                      "default": false,
                      "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                      "type": "boolean"
                    },
                    "end": {
                      "default": 0,
                      "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "id": {
                      "description": "__Read-only__ Akamai internal use only.\n",
                      "nullable": true,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "location": {
                      "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "matchURL": {
                      "description": "The URL the Cloudlet uses to match the incoming request.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "matches": {
                      "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                      "items": {
                        "additionalProperties": false,
                        "description": "The match rule criteria.\n",
                        "oneOf": [
                          {
                            "required": [
                              "matchType",
                              "matchValue"
                            ],
                            "title": "matchType and matchValue required"
                          },
                          {
                            "required": [
                              "matchType",
                              "objectMatchValue"
                            ],
                            "title": "matchType and objectMatchValue required"
                          }
                        ],
                        "properties": {
                          "caseSensitive": {
                            "description": "If `true`, the match is case sensitive.\n",
                            "type": "boolean"
                          },
                          "checkIPs": {
                            "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                            "enum": [
                              "CONNECTING_IP",
                              "XFF_HEADERS",
                              "CONNECTING_IP XFF_HEADERS"
                            ],
                            "nullable": true,
                            "type": "string"
                          },
                          "matchOperator": {
                            "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                            "enum": [
                              "contains",
                              "exists",
                              "equals"
                            ],
                            "type": "string"
                          },
                          "matchType": {
                            "description": "The type of match used.\n",
                            "enum": [
                              "header",
                              "hostname",
                              "path",
                              "extension",
                              "query",
                              "regex",
                              "cookie",
                              "deviceCharacteristics",
                              "clientip",
                              "continent",
                              "countrycode",
                              "regioncode",
                              "protocol",
                              "method",
                              "proxy"
                            ],
                            "type": "string"
                          },
                          "matchValue": {
                            "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                            "maxLength": 8192,
                            "minLength": 1,
                            "type": "string"
                          },
                          "negate": {
                            "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                            "type": "boolean"
                          },
                          "objectMatchValue": {
                            "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                            "oneOf": [
                              {
                                "additionalProperties": false,
                                "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                "properties": {
                                  "type": {
                                    "description": "The object type, which is `simple`.\n",
                                    "enum": [
                                      "simple"
                                    ],
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                    "items": {
                                      "type": "string"
                                    },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                },
                                "required": [
                                  "type",
                                  "value"
                                ],
                                "title": "Simple",
                                "type": "object"
                              },
                              {
                                "additionalProperties": false,
                                "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                "properties": {
                                  "name": {
                                    "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "nameCaseSensitive": {
                                    "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                    "type": "boolean"
                                  },
                                  "nameHasWildcard": {
                                    "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                    "type": "boolean"
                                  },
                                  "options": {
                                    "additionalProperties": false,
                                    "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                    "properties": {
                                      "value": {
                                        "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "items": {
                                          "type": "string"
                                        },
                                        "nullable": true,
                                        "type": "array"
                                      },
                                      "valueCaseSensitive": {
                                        "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                        "type": "boolean"
                                      },
                                      "valueEscaped": {
                                        "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                        "type": "boolean"
                                      },
                                      "valueHasWildcard": {
                                        "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                        "type": "boolean"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": {
                                    "description": "The array type, which is `object`.\n",
                                    "enum": [
                                      "object"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "type"
                                ],
                                "title": "Object",
                                "type": "object"
                              }
                            ],
                            "title": "Object match value",
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "nullable": true,
                      "type": "array"
                    },
                    "matchesAlways": {
                      "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n",
                      "type": "boolean"
                    },
                    "name": {
                      "description": "The name of the rule.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "redirectURL": {
                      "description": "The URL Edge Redirector redirects the request to. If using `useRelativeUrl`, you can enter a path for the value. If `useRelativeUrl` is not used or set to `none`, then the `redirectUrl` should be a fully qualified URL.\n",
                      "maxLength": 8192,
                      "minLength": 1,
                      "type": "string"
                    },
                    "start": {
                      "default": 0,
                      "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "statusCode": {
                      "description": "The HTTP response redirect type status code: `301` for permanent redirect, `302` for temporary redirect, `303` for temporary using GET, `307` for temporary retain method, or `308` for permanent retain method.\n",
                      "enum": [
                        301,
                        302,
                        303,
                        307,
                        308
                      ],
                      "type": "integer"
                    },
                    "type": {
                      "description": "The type of Cloudlet the rule is for. For example, the string for Edge Redirector is `erMatchRule`.\n",
                      "enum": [
                        "erMatchRule"
                      ],
                      "type": "string"
                    },
                    "useIncomingQueryString": {
                      "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n",
                      "type": "boolean"
                    },
                    "useIncomingSchemeAndHost": {
                      "description": "If set to `true`, the Cloudlet copies both the scheme and the hostname from the incoming request to use in the redirect URL.\n",
                      "type": "boolean"
                    },
                    "useRelativeUrl": {
                      "description": "If set to `relative_url`, takes the path entered for the `redirectUrl` and sets it in the response’s `Location` header. The client browser receiving the request decides which protocol and hostname to use. If set to `copy_scheme_hostname`, it creates an absolute path by taking the protocol and hostname from the incoming request and combining them with path information entered for the `redirectUrl`. This absolute path is set in the response’s `Location` header. If you don't include `useRelativeUrl`, or if you set it to `none`, then specify the `redirectUrl` as a fully qualified URL.\n",
                      "enum": [
                        "relative_url",
                        "copy_scheme_hostname",
                        "none"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "type",
                    "redirectURL",
                    "statusCode"
                  ],
                  "title": "Edge Redirector",
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/match-rule-er.yaml"
                  }
                },
                {
                  "additionalProperties": false,
                  "description": "Contains match rule information for Forward Rewrite.\n",
                  "properties": {
                    "akaRuleId": {
                      "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "disabled": {
                      "default": false,
                      "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                      "type": "boolean"
                    },
                    "end": {
                      "default": 0,
                      "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "forwardSettings": {
                      "additionalProperties": false,
                      "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                      "properties": {
                        "originId": {
                          "description": "The conditional origin's unique identifier.\n",
                          "maxLength": 8192,
                          "nullable": true,
                          "type": "string"
                        },
                        "pathAndQS": {
                          "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                          "maxLength": 8192,
                          "minLength": 1,
                          "type": "string"
                        },
                        "useIncomingQueryString": {
                          "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n",
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "id": {
                      "description": "__Read-only__ Akamai internal use only.\n",
                      "nullable": true,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "location": {
                      "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "matchURL": {
                      "description": "The URL the Cloudlet uses to match the incoming request.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "matches": {
                      "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                      "items": {
                        "additionalProperties": false,
                        "description": "The match rule criteria.\n",
                        "oneOf": [
                          {
                            "required": [
                              "matchType",
                              "matchValue"
                            ],
                            "title": "matchType and matchValue required"
                          },
                          {
                            "required": [
                              "matchType",
                              "objectMatchValue"
                            ],
                            "title": "matchType and objectMatchValue required"
                          }
                        ],
                        "properties": {
                          "caseSensitive": {
                            "description": "If `true`, the match is case sensitive.\n",
                            "type": "boolean"
                          },
                          "checkIPs": {
                            "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                            "enum": [
                              "CONNECTING_IP",
                              "XFF_HEADERS",
                              "CONNECTING_IP XFF_HEADERS"
                            ],
                            "type": "string"
                          },
                          "matchOperator": {
                            "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                            "enum": [
                              "contains",
                              "exists",
                              "equals"
                            ],
                            "type": "string"
                          },
                          "matchType": {
                            "description": "The type of match used.\n",
                            "enum": [
                              "header",
                              "hostname",
                              "path",
                              "extension",
                              "query",
                              "regex",
                              "cookie",
                              "deviceCharacteristics",
                              "clientip",
                              "continent",
                              "countrycode",
                              "regioncode",
                              "protocol",
                              "method",
                              "proxy"
                            ],
                            "type": "string"
                          },
                          "matchValue": {
                            "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                            "maxLength": 8192,
                            "minLength": 1,
                            "type": "string"
                          },
                          "negate": {
                            "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                            "type": "boolean"
                          },
                          "objectMatchValue": {
                            "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                            "oneOf": [
                              {
                                "additionalProperties": false,
                                "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                "properties": {
                                  "type": {
                                    "description": "The object type, which is `simple`.\n",
                                    "enum": [
                                      "simple"
                                    ],
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                    "items": {
                                      "type": "string"
                                    },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                },
                                "required": [
                                  "type",
                                  "value"
                                ],
                                "title": "Simple",
                                "type": "object"
                              },
                              {
                                "additionalProperties": false,
                                "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                "properties": {
                                  "name": {
                                    "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "nameCaseSensitive": {
                                    "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                    "type": "boolean"
                                  },
                                  "nameHasWildcard": {
                                    "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                    "type": "boolean"
                                  },
                                  "options": {
                                    "additionalProperties": false,
                                    "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                    "properties": {
                                      "value": {
                                        "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "items": {
                                          "type": "string"
                                        },
                                        "nullable": true,
                                        "type": "array"
                                      },
                                      "valueCaseSensitive": {
                                        "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                        "type": "boolean"
                                      },
                                      "valueEscaped": {
                                        "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                        "type": "boolean"
                                      },
                                      "valueHasWildcard": {
                                        "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                        "type": "boolean"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": {
                                    "description": "The array type, which is `object`.\n",
                                    "enum": [
                                      "object"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "type"
                                ],
                                "title": "Object",
                                "type": "object"
                              }
                            ],
                            "title": "Object match value",
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "nullable": true,
                      "type": "array"
                    },
                    "name": {
                      "description": "The name of the rule.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "start": {
                      "default": 0,
                      "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "type": {
                      "description": "The type of Cloudlet the rule is for. For example, the string for Forward Rewrite is `frMatchRule`.\n",
                      "enum": [
                        "frMatchRule"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "type",
                    "forwardSettings"
                  ],
                  "title": "Forward Rewrite",
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/match-rule-fr.yaml"
                  }
                },
                {
                  "additionalProperties": false,
                  "description": "Contains match rule information for Request Control.\n",
                  "properties": {
                    "akaRuleId": {
                      "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "allowDeny": {
                      "description": "If set to `allow`, the request is sent to origin when all conditions are true. If `deny`, the request is denied when all conditions are true. If `denybranded`, the request is denied and rerouted according to the configuration of the [Request Control behavior](https://techdocs.akamai.com/property-mgr/reference/latest-request-control).\n",
                      "enum": [
                        "allow",
                        "deny",
                        "denybranded"
                      ],
                      "type": "string"
                    },
                    "disabled": {
                      "default": false,
                      "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                      "type": "boolean"
                    },
                    "end": {
                      "default": 0,
                      "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "id": {
                      "description": "__Read-only__ Akamai internal use only.\n",
                      "nullable": true,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "location": {
                      "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "matches": {
                      "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                      "items": {
                        "additionalProperties": false,
                        "description": "The match rule criteria.\n",
                        "oneOf": [
                          {
                            "required": [
                              "matchType",
                              "matchValue"
                            ],
                            "title": "matchType and matchValue required"
                          },
                          {
                            "required": [
                              "matchType",
                              "objectMatchValue"
                            ],
                            "title": "matchType and objectMatchValue required"
                          }
                        ],
                        "properties": {
                          "caseSensitive": {
                            "description": "If `true`, the match is case sensitive.\n",
                            "type": "boolean"
                          },
                          "checkIPs": {
                            "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                            "enum": [
                              "CONNECTING_IP",
                              "XFF_HEADERS",
                              "CONNECTING_IP XFF_HEADERS"
                            ],
                            "type": "string"
                          },
                          "matchOperator": {
                            "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                            "enum": [
                              "contains",
                              "exists",
                              "equals"
                            ],
                            "type": "string"
                          },
                          "matchType": {
                            "description": "The type of match used.\n",
                            "enum": [
                              "clientip",
                              "continent",
                              "cookie",
                              "countrycode",
                              "deviceCharacteristics",
                              "extension",
                              "header",
                              "hostname",
                              "method",
                              "path",
                              "protocol",
                              "proxy",
                              "query",
                              "regioncode"
                            ],
                            "type": "string"
                          },
                          "matchValue": {
                            "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                            "maxLength": 8192,
                            "minLength": 1,
                            "type": "string"
                          },
                          "negate": {
                            "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                            "type": "boolean"
                          },
                          "objectMatchValue": {
                            "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                            "oneOf": [
                              {
                                "additionalProperties": false,
                                "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                "properties": {
                                  "type": {
                                    "description": "The object type, which is `simple`.\n",
                                    "enum": [
                                      "simple"
                                    ],
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                    "items": {
                                      "type": "string"
                                    },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                },
                                "required": [
                                  "type",
                                  "value"
                                ],
                                "title": "Simple",
                                "type": "object"
                              },
                              {
                                "additionalProperties": false,
                                "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                "properties": {
                                  "name": {
                                    "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "nameCaseSensitive": {
                                    "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                    "type": "boolean"
                                  },
                                  "nameHasWildcard": {
                                    "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                    "type": "boolean"
                                  },
                                  "options": {
                                    "additionalProperties": false,
                                    "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                    "properties": {
                                      "value": {
                                        "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "items": {
                                          "type": "string"
                                        },
                                        "nullable": true,
                                        "type": "array"
                                      },
                                      "valueCaseSensitive": {
                                        "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                        "type": "boolean"
                                      },
                                      "valueEscaped": {
                                        "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                        "type": "boolean"
                                      },
                                      "valueHasWildcard": {
                                        "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                        "type": "boolean"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": {
                                    "description": "The array type, which is `object`.\n",
                                    "enum": [
                                      "object"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "type"
                                ],
                                "title": "Object",
                                "type": "object"
                              }
                            ],
                            "title": "Object match value",
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "nullable": true,
                      "type": "array"
                    },
                    "matchesAlways": {
                      "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n",
                      "type": "boolean"
                    },
                    "name": {
                      "description": "The name of the rule.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "start": {
                      "default": 0,
                      "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "type": {
                      "description": "The type of Cloudlet the rule is for. For example, the string for Request Control is `igMatchRule`.\n",
                      "enum": [
                        "igMatchRule"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "type",
                    "allowDeny"
                  ],
                  "title": "Request Control",
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/match-rule-ig.yaml"
                  }
                },
                {
                  "type": "object",
                  "description": "Contains match rule information for Visitor Prioritization.\n",
                  "title": "Visitor Prioritization",
                  "additionalProperties": false,
                  "required": [
                    "type",
                    "passThroughPercent"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Akamai internal use only.\n",
                      "nullable": true,
                      "readOnly": true
                    },
                    "location": {
                      "type": "string",
                      "description": "The navigable endpoint used for the object referred to in the operation.\n",
                      "readOnly": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the rule.\n",
                      "nullable": true,
                      "maxLength": 8192
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of Cloudlet the rule is for. For example, the string for Visitor Prioritization is `vpMatchRule`.\n",
                      "enum": [
                        "vpMatchRule"
                      ]
                    },
                    "akaRuleId": {
                      "type": "string",
                      "description": "The rule's unique identifier within the policy version.\n",
                      "readOnly": true
                    },
                    "start": {
                      "type": "integer",
                      "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                      "default": 0,
                      "minimum": 0
                    },
                    "end": {
                      "type": "integer",
                      "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                      "default": 0,
                      "minimum": 0
                    },
                    "matches": {
                      "type": "array",
                      "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                      "nullable": true,
                      "items": {
                        "type": "object",
                        "description": "The match rule criteria.\n",
                        "additionalProperties": false,
                        "oneOf": [
                          {
                            "required": [
                              "matchType",
                              "matchValue"
                            ],
                            "title": "matchType and matchValue required"
                          },
                          {
                            "required": [
                              "matchType",
                              "objectMatchValue"
                            ],
                            "title": "matchType and objectMatchValue required"
                          }
                        ],
                        "properties": {
                          "caseSensitive": {
                            "type": "boolean",
                            "description": "If `true`, the match is case sensitive.\n"
                          },
                          "matchValue": {
                            "type": "string",
                            "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                            "minLength": 1,
                            "maxLength": 8192
                          },
                          "negate": {
                            "type": "boolean",
                            "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                          },
                          "matchOperator": {
                            "type": "string",
                            "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                            "enum": [
                              "contains",
                              "exists",
                              "equals"
                            ]
                          },
                          "matchType": {
                            "type": "string",
                            "description": "The type of match used.\n",
                            "enum": [
                              "hostname",
                              "path",
                              "extension",
                              "query",
                              "cookie",
                              "deviceCharacteristics",
                              "clientip",
                              "continent",
                              "countrycode",
                              "regioncode",
                              "protocol",
                              "header",
                              "method",
                              "proxy"
                            ]
                          },
                          "checkIPs": {
                            "type": "string",
                            "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                            "enum": [
                              "CONNECTING_IP",
                              "XFF_HEADERS",
                              "CONNECTING_IP XFF_HEADERS"
                            ]
                          },
                          "objectMatchValue": {
                            "type": "object",
                            "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                            "title": "Object match value",
                            "oneOf": [
                              {
                                "type": "object",
                                "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                "title": "Simple",
                                "additionalProperties": false,
                                "required": [
                                  "type",
                                  "value"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "description": "The object type, which is `simple`.\n",
                                    "enum": [
                                      "simple"
                                    ]
                                  },
                                  "value": {
                                    "type": "array",
                                    "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                    "nullable": true,
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                "title": "Object",
                                "additionalProperties": false,
                                "required": [
                                  "name",
                                  "type"
                                ],
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                    "minLength": 1,
                                    "maxLength": 8192
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "The array type, which is `object`.\n",
                                    "enum": [
                                      "object"
                                    ]
                                  },
                                  "options": {
                                    "type": "object",
                                    "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                    "additionalProperties": false,
                                    "properties": {
                                      "value": {
                                        "type": "array",
                                        "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "nullable": true,
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "valueHasWildcard": {
                                        "type": "boolean",
                                        "description": "Set to `true` if the entries for `value` includes wildcards.\n"
                                      },
                                      "valueCaseSensitive": {
                                        "type": "boolean",
                                        "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n"
                                      },
                                      "valueEscaped": {
                                        "type": "boolean",
                                        "description": "Set to `true` if the entries for `value` includes escaped characters.\n"
                                      }
                                    }
                                  },
                                  "nameCaseSensitive": {
                                    "type": "boolean",
                                    "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                  },
                                  "nameHasWildcard": {
                                    "type": "boolean",
                                    "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    },
                    "disabled": {
                      "type": "boolean",
                      "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                      "default": false
                    },
                    "passThroughPercent": {
                      "type": "number",
                      "description": "The range `0.000: 99.000` specifies the percentage of requests that pass through to the origin. The value of `100` means the request always passes through to the origin. For Visitor Prioritization, a value of `-1` means send everyone to the waiting room.\n",
                      "minimum": -1,
                      "maximum": 100
                    },
                    "matchURL": {
                      "type": "string",
                      "description": "The URL the Cloudlet uses to match the incoming request.\n",
                      "nullable": true,
                      "maxLength": 8192
                    },
                    "useIncomingQueryString": {
                      "type": "boolean",
                      "description": "If set to `true`, the Cloudlet includes the request's query string in the rewritten or forwarded URL.\n"
                    }
                  }
                }
              ]
            },
            "type": "array",
            "x-akamai": {
              "file-path": "schemas/match-rules.yaml"
            }
          }
        },
        "required": [
          "description"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/put-policy-version-request.yaml"
        }
      },
      "put-policy-version-response": {
        "type": "object",
        "description": "Policy version details.\n",
        "additionalProperties": false,
        "required": [
          "activations",
          "createdBy",
          "createDate",
          "deleted",
          "description",
          "lastModifiedBy",
          "lastModifiedDate",
          "location",
          "matchRuleFormat",
          "matchRules",
          "policyId",
          "revisionId",
          "rulesLocked",
          "version"
        ],
        "properties": {
          "description": {
            "type": "string",
            "description": "Description of the policy version.\n"
          },
          "version": {
            "type": "integer",
            "description": "Version of the policy.\n"
          },
          "activations": {
            "type": "array",
            "description": "List of activations related to the policy version.\n",
            "items": {
              "additionalProperties": false,
              "description": "Returns details of a policy activation.\n",
              "properties": {
                "apiVersion": {
                  "description": "The specific version of this API.\n",
                  "type": "string"
                },
                "network": {
                  "description": "The network, either `STAGING`, `PRODUCTION`, or `prod` as shorthand, on which a load balancing configuration for Application Load Balancer has been activated. Values are case-insensitive in requests.\n",
                  "enum": [
                    "prod",
                    "staging"
                  ],
                  "type": "string"
                },
                "policyInfo": {
                  "type": "object",
                  "description": "Returns details of a policy associated with policy activation.\n",
                  "additionalProperties": false,
                  "required": [
                    "policyId",
                    "name",
                    "version",
                    "status",
                    "statusDetail",
                    "activatedBy",
                    "activationDate"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of the policy.\n"
                    },
                    "version": {
                      "type": "integer",
                      "description": "Version of the policy.\n"
                    },
                    "policyId": {
                      "type": "integer",
                      "description": "ID of the policy.\n"
                    },
                    "status": {
                      "type": "string",
                      "description": "Value representing activation status.\n",
                      "enum": [
                        "INACTIVE",
                        "PENDING",
                        "ACTIVE",
                        "FAILED",
                        "DEACTIVATED"
                      ]
                    },
                    "statusDetail": {
                      "type": "string",
                      "description": "Details of the activation status.\n"
                    },
                    "activatedBy": {
                      "type": "string",
                      "description": "User name who issued the activation.\n",
                      "nullable": true
                    },
                    "activationDate": {
                      "type": "integer",
                      "description": "Date of the activation in milliseconds.\n"
                    }
                  }
                },
                "propertyInfo": {
                  "type": "object",
                  "description": "Returns details of a property associated with policy activation.\n",
                  "additionalProperties": false,
                  "required": [
                    "name",
                    "version",
                    "groupId",
                    "status",
                    "activatedBy",
                    "activationDate",
                    "id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "ID of the property.\n"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the property.\n"
                    },
                    "version": {
                      "type": "integer",
                      "description": "Version of the property.\n"
                    },
                    "groupId": {
                      "type": "integer",
                      "description": "Identifies the group where the property is placed.\n"
                    },
                    "status": {
                      "type": "string",
                      "description": "Value representing activation status.\n",
                      "enum": [
                        "INACTIVE",
                        "PENDING",
                        "ACTIVE",
                        "FAILED",
                        "DEACTIVATED"
                      ]
                    },
                    "activatedBy": {
                      "type": "string",
                      "description": "User name who issued the activation.\n",
                      "nullable": true
                    },
                    "activationDate": {
                      "type": "integer",
                      "description": "Date of the activation in milliseconds.\n"
                    }
                  }
                },
                "serviceVersion": {
                  "description": "__Deprecated__ The build of the software running on the server. The value can be `null`.\n",
                  "nullable": true,
                  "type": "string",
                  "x-akamai": {
                    "status": "DEPRECATED"
                  }
                }
              },
              "required": [
                "network",
                "policyInfo",
                "propertyInfo"
              ],
              "type": "object",
              "x-akamai": {
                "file-path": "schemas/policy-activation.yaml"
              }
            }
          },
          "createDate": {
            "type": "integer",
            "description": "Date of the policy version creation in milliseconds.\n"
          },
          "createdBy": {
            "type": "string",
            "description": "User name who created the policy version.\n"
          },
          "deleted": {
            "type": "boolean",
            "description": "Flag determining whether the policy version is deleted or not.\n"
          },
          "lastModifiedBy": {
            "type": "string",
            "description": "User name who recently modified the policy version.\n"
          },
          "lastModifiedDate": {
            "type": "integer",
            "description": "Date of the recent policy version modification in milliseconds.\n"
          },
          "location": {
            "type": "string",
            "description": "The navigable endpoint used for the object referred to in the operation.\n"
          },
          "matchRuleFormat": {
            "type": "string",
            "description": "The version of the `matchRules` format.\n"
          },
          "matchRules": {
            "description": "A list of Cloudlet-specific match rules for this policy.\n",
            "items": {
              "description": "Contains information about match rules.\n",
              "oneOf": [
                {
                  "type": "object",
                  "description": "Contains match rule information for Application Load Balancer.\n",
                  "title": "Application Load Balancer",
                  "additionalProperties": false,
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Akamai internal use only.\n",
                      "nullable": true,
                      "readOnly": true
                    },
                    "location": {
                      "type": "string",
                      "description": "The navigable endpoint used for the object referred to in the operation.\n",
                      "readOnly": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the rule.\n",
                      "nullable": true,
                      "maxLength": 8192
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of Cloudlet the rule is for. For example, the string for Application Load Balancer is `albMatchRule`.\n",
                      "enum": [
                        "albMatchRule"
                      ]
                    },
                    "akaRuleId": {
                      "type": "string",
                      "description": "The rule's unique identifier within the policy version.\n",
                      "readOnly": true
                    },
                    "disabled": {
                      "type": "boolean",
                      "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                      "default": false
                    },
                    "start": {
                      "type": "integer",
                      "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                      "default": 0,
                      "minimum": 0
                    },
                    "end": {
                      "type": "integer",
                      "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                      "default": 0,
                      "minimum": 0
                    },
                    "matchURL": {
                      "type": "string",
                      "description": "The URL the Cloudlet uses to match the incoming request.\n",
                      "nullable": true,
                      "maxLength": 8192
                    },
                    "matches": {
                      "type": "array",
                      "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                      "nullable": true,
                      "items": {
                        "type": "object",
                        "description": "The match rule criteria.\n",
                        "additionalProperties": false,
                        "oneOf": [
                          {
                            "required": [
                              "matchType",
                              "matchValue"
                            ],
                            "title": "matchType and matchValue required"
                          },
                          {
                            "required": [
                              "matchType",
                              "objectMatchValue"
                            ],
                            "title": "matchType and objectMatchValue required"
                          }
                        ],
                        "properties": {
                          "caseSensitive": {
                            "type": "boolean",
                            "description": "If `true`, the match is case sensitive.\n"
                          },
                          "checkIPs": {
                            "type": "string",
                            "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                            "nullable": true,
                            "enum": [
                              "CONNECTING_IP",
                              "XFF_HEADERS",
                              "CONNECTING_IP XFF_HEADERS"
                            ]
                          },
                          "matchOperator": {
                            "type": "string",
                            "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                            "enum": [
                              "contains",
                              "exists",
                              "equals"
                            ]
                          },
                          "matchType": {
                            "type": "string",
                            "description": "The type of match used.\n",
                            "enum": [
                              "header",
                              "hostname",
                              "path",
                              "extension",
                              "query",
                              "regex",
                              "cookie",
                              "deviceCharacteristics",
                              "clientip",
                              "continent",
                              "countrycode",
                              "regioncode",
                              "protocol",
                              "method",
                              "proxy"
                            ]
                          },
                          "matchValue": {
                            "type": "string",
                            "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                            "minLength": 1,
                            "maxLength": 8192
                          },
                          "negate": {
                            "type": "boolean",
                            "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                          },
                          "objectMatchValue": {
                            "type": "object",
                            "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                            "title": "Object match value",
                            "oneOf": [
                              {
                                "type": "object",
                                "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                "title": "Simple",
                                "additionalProperties": false,
                                "required": [
                                  "type",
                                  "value"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "description": "The object type, which is `simple`.\n",
                                    "enum": [
                                      "simple"
                                    ]
                                  },
                                  "value": {
                                    "type": "array",
                                    "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                    "nullable": true,
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "description": "Use this for more complex match criteria.\n",
                                "title": "Object",
                                "additionalProperties": false,
                                "required": [
                                  "name",
                                  "type"
                                ],
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                    "minLength": 1,
                                    "maxLength": 8192
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "The array type, which is `object`.\n",
                                    "enum": [
                                      "object"
                                    ]
                                  },
                                  "options": {
                                    "type": "object",
                                    "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                    "additionalProperties": false,
                                    "properties": {
                                      "value": {
                                        "type": "array",
                                        "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "nullable": true,
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "valueCaseSensitive": {
                                        "type": "boolean",
                                        "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n"
                                      },
                                      "valueEscaped": {
                                        "type": "boolean",
                                        "description": "Set to `true` if the entries for `value` includes escaped characters.\n"
                                      },
                                      "valueHasWildcard": {
                                        "type": "boolean",
                                        "description": "Set to `true` if the entries for `value` includes wildcards.\n"
                                      }
                                    }
                                  },
                                  "nameCaseSensitive": {
                                    "type": "boolean",
                                    "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                  },
                                  "nameHasWildcard": {
                                    "type": "boolean",
                                    "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    },
                    "matchesAlways": {
                      "type": "boolean",
                      "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n"
                    },
                    "forwardSettings": {
                      "type": "object",
                      "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                      "additionalProperties": false,
                      "properties": {
                        "pathAndQS": {
                          "type": "string",
                          "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                          "minLength": 1,
                          "maxLength": 8192
                        },
                        "useIncomingQueryString": {
                          "type": "boolean",
                          "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n"
                        },
                        "originId": {
                          "type": "string",
                          "description": "The conditional origin's unique identifier.\n",
                          "nullable": true,
                          "maxLength": 8192
                        }
                      }
                    }
                  }
                },
                {
                  "additionalProperties": false,
                  "description": "Contains match rule information for API Prioritization.\n",
                  "properties": {
                    "akaRuleId": {
                      "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "disabled": {
                      "default": false,
                      "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                      "type": "boolean"
                    },
                    "end": {
                      "default": 0,
                      "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "id": {
                      "description": "__Read-only__ Akamai internal use only.\n",
                      "nullable": true,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "location": {
                      "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "matchURL": {
                      "description": "The URL the Cloudlet uses to match the incoming request.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "matches": {
                      "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                      "items": {
                        "additionalProperties": false,
                        "description": "The match rule criteria.\n",
                        "oneOf": [
                          {
                            "required": [
                              "matchType",
                              "matchValue"
                            ],
                            "title": "matchType and matchValue required"
                          },
                          {
                            "required": [
                              "matchType",
                              "objectMatchValue"
                            ],
                            "title": "matchType and objectMatchValue required"
                          }
                        ],
                        "properties": {
                          "caseSensitive": {
                            "description": "If `true`, the match is case sensitive.\n",
                            "type": "boolean"
                          },
                          "checkIPs": {
                            "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                            "enum": [
                              "CONNECTING_IP",
                              "XFF_HEADERS",
                              "CONNECTING_IP XFF_HEADERS"
                            ],
                            "type": "string"
                          },
                          "matchOperator": {
                            "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                            "enum": [
                              "contains",
                              "exists",
                              "equals"
                            ],
                            "type": "string"
                          },
                          "matchType": {
                            "description": "The type of match used.\n",
                            "enum": [
                              "hostname",
                              "path",
                              "extension",
                              "query",
                              "cookie",
                              "deviceCharacteristics",
                              "clientip",
                              "continent",
                              "countrycode",
                              "regioncode",
                              "protocol",
                              "header",
                              "method",
                              "proxy"
                            ],
                            "type": "string"
                          },
                          "matchValue": {
                            "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                            "maxLength": 8192,
                            "minLength": 1,
                            "type": "string"
                          },
                          "negate": {
                            "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                            "type": "boolean"
                          },
                          "objectMatchValue": {
                            "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                            "oneOf": [
                              {
                                "additionalProperties": false,
                                "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                "properties": {
                                  "type": {
                                    "description": "The object type, which is `simple`.\n",
                                    "enum": [
                                      "simple"
                                    ],
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                    "items": {
                                      "type": "string"
                                    },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                },
                                "required": [
                                  "type",
                                  "value"
                                ],
                                "title": "Simple",
                                "type": "object"
                              },
                              {
                                "additionalProperties": false,
                                "description": "Use this for more complex match criteria.\n",
                                "properties": {
                                  "name": {
                                    "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "nameCaseSensitive": {
                                    "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                    "type": "boolean"
                                  },
                                  "nameHasWildcard": {
                                    "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                    "type": "boolean"
                                  },
                                  "options": {
                                    "additionalProperties": false,
                                    "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                    "properties": {
                                      "value": {
                                        "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "items": {
                                          "type": "string"
                                        },
                                        "nullable": true,
                                        "type": "array"
                                      },
                                      "valueCaseSensitive": {
                                        "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                        "type": "boolean"
                                      },
                                      "valueEscaped": {
                                        "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                        "type": "boolean"
                                      },
                                      "valueHasWildcard": {
                                        "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                        "type": "boolean"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": {
                                    "description": "The array type, which is `object`.\n",
                                    "enum": [
                                      "object"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "type"
                                ],
                                "title": "Object",
                                "type": "object"
                              }
                            ],
                            "title": "Object match value",
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "nullable": true,
                      "type": "array"
                    },
                    "name": {
                      "description": "The name of the rule.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "passThroughPercent": {
                      "description": "The percentage of requests that pass through to the origin, with `100` indicating the request always passes through to the origin. For Visitor Prioritization, a value of -1 sends everyone to the waiting room.\n",
                      "maximum": 100,
                      "minimum": -1,
                      "type": "number"
                    },
                    "start": {
                      "default": 0,
                      "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "type": {
                      "description": "The type of Cloudlet the rule is for. For example, the string for API Prioritization is `apMatchRule`.\n",
                      "enum": [
                        "apMatchRule"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "type",
                    "passThroughPercent"
                  ],
                  "title": "API Prioritization",
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/match-rule-ap.yaml"
                  }
                },
                {
                  "additionalProperties": false,
                  "description": "Contains match rule information for Audience Segmentation.\n",
                  "properties": {
                    "akaRuleId": {
                      "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "disabled": {
                      "default": false,
                      "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                      "type": "boolean"
                    },
                    "end": {
                      "default": 0,
                      "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "forwardSettings": {
                      "additionalProperties": false,
                      "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                      "properties": {
                        "originId": {
                          "description": "The conditional origin's unique identifier.\n",
                          "maxLength": 8192,
                          "nullable": true,
                          "type": "string"
                        },
                        "pathAndQS": {
                          "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                          "maxLength": 8192,
                          "minLength": 1,
                          "type": "string"
                        },
                        "useIncomingQueryString": {
                          "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n",
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "id": {
                      "description": "__Read-only__ Akamai internal use only.\n",
                      "nullable": true,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "location": {
                      "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "matchURL": {
                      "description": "The URL the Cloudlet uses to match the incoming request.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "matches": {
                      "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                      "items": {
                        "additionalProperties": false,
                        "description": "The match rule criteria.\n",
                        "oneOf": [
                          {
                            "required": [
                              "matchType",
                              "matchValue"
                            ],
                            "title": "matchType and matchValue required"
                          },
                          {
                            "required": [
                              "matchType",
                              "objectMatchValue"
                            ],
                            "title": "matchType and objectMatchValue required"
                          }
                        ],
                        "properties": {
                          "caseSensitive": {
                            "description": "If `true`, the match is case sensitive.\n",
                            "type": "boolean"
                          },
                          "checkIPs": {
                            "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                            "enum": [
                              "CONNECTING_IP",
                              "XFF_HEADERS",
                              "CONNECTING_IP XFF_HEADERS"
                            ],
                            "type": "string"
                          },
                          "matchOperator": {
                            "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                            "enum": [
                              "contains",
                              "exists",
                              "equals"
                            ],
                            "type": "string"
                          },
                          "matchType": {
                            "description": "The type of match used.\n",
                            "enum": [
                              "header",
                              "hostname",
                              "path",
                              "extension",
                              "query",
                              "range",
                              "regex",
                              "cookie",
                              "deviceCharacteristics",
                              "clientip",
                              "continent",
                              "countrycode",
                              "regioncode",
                              "protocol",
                              "method",
                              "proxy"
                            ],
                            "type": "string"
                          },
                          "matchValue": {
                            "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                            "maxLength": 8192,
                            "minLength": 1,
                            "type": "string"
                          },
                          "negate": {
                            "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                            "type": "boolean"
                          },
                          "objectMatchValue": {
                            "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.\n",
                            "oneOf": [
                              {
                                "additionalProperties": false,
                                "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.\n",
                                "properties": {
                                  "type": {
                                    "description": "The object type, which is `range`.\n",
                                    "enum": [
                                      "range"
                                    ],
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "An inclusive range comprised of two numbers to match on.\n",
                                    "items": {
                                      "type": "integer"
                                    },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                },
                                "required": [
                                  "type",
                                  "value"
                                ],
                                "title": "Range",
                                "type": "object"
                              },
                              {
                                "additionalProperties": false,
                                "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                "properties": {
                                  "type": {
                                    "description": "The object type, which is `simple`.\n",
                                    "enum": [
                                      "simple"
                                    ],
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                    "items": {
                                      "type": "string"
                                    },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                },
                                "required": [
                                  "type",
                                  "value"
                                ],
                                "title": "Simple",
                                "type": "object"
                              },
                              {
                                "additionalProperties": false,
                                "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                "properties": {
                                  "name": {
                                    "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "nameCaseSensitive": {
                                    "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                    "type": "boolean"
                                  },
                                  "nameHasWildcard": {
                                    "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                    "type": "boolean"
                                  },
                                  "options": {
                                    "additionalProperties": false,
                                    "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                    "properties": {
                                      "value": {
                                        "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "items": {
                                          "type": "string"
                                        },
                                        "nullable": true,
                                        "type": "array"
                                      },
                                      "valueCaseSensitive": {
                                        "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                        "type": "boolean"
                                      },
                                      "valueEscaped": {
                                        "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                        "type": "boolean"
                                      },
                                      "valueHasWildcard": {
                                        "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                        "type": "boolean"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": {
                                    "description": "The array type, which is `object`.\n",
                                    "enum": [
                                      "object"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "type"
                                ],
                                "title": "Object",
                                "type": "object"
                              }
                            ],
                            "title": "Object match value",
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "nullable": true,
                      "type": "array"
                    },
                    "name": {
                      "description": "The name of the rule.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "start": {
                      "default": 0,
                      "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "type": {
                      "description": "The type of Cloudlet the rule is for. For example, the string for Audience Segmentation is `asMatchRule`.\n",
                      "enum": [
                        "asMatchRule"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "type"
                  ],
                  "title": "Audience Segmentation",
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/match-rule-as.yaml"
                  }
                },
                {
                  "additionalProperties": false,
                  "description": "Contains match rule information for Phased Release.\n",
                  "properties": {
                    "akaRuleId": {
                      "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "disabled": {
                      "default": false,
                      "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                      "type": "boolean"
                    },
                    "end": {
                      "default": 0,
                      "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "forwardSettings": {
                      "additionalProperties": false,
                      "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, and `percent`.\n",
                      "properties": {
                        "originId": {
                          "description": "The conditional origin's unique identifier.\n",
                          "maxLength": 8192,
                          "nullable": true,
                          "type": "string"
                        },
                        "percent": {
                          "description": "The percentage of visitors directed to a different origin.\n",
                          "maximum": 100,
                          "minimum": 0,
                          "type": "number"
                        }
                      },
                      "type": "object"
                    },
                    "id": {
                      "description": "__Read-only__ Akamai internal use only.\n",
                      "nullable": true,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "location": {
                      "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "matchURL": {
                      "description": "The URL the Cloudlet uses to match the incoming request.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "matches": {
                      "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                      "items": {
                        "additionalProperties": false,
                        "description": "The match rule criteria.\n",
                        "oneOf": [
                          {
                            "required": [
                              "matchType",
                              "matchValue"
                            ],
                            "title": "matchType and matchValue required"
                          },
                          {
                            "required": [
                              "matchType",
                              "objectMatchValue"
                            ],
                            "title": "matchType and objectMatchValue required"
                          }
                        ],
                        "properties": {
                          "caseSensitive": {
                            "description": "If `true`, the match is case sensitive.\n",
                            "type": "boolean"
                          },
                          "checkIPs": {
                            "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                            "enum": [
                              "CONNECTING_IP",
                              "XFF_HEADERS",
                              "CONNECTING_IP XFF_HEADERS"
                            ],
                            "nullable": true,
                            "type": "string"
                          },
                          "matchOperator": {
                            "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                            "enum": [
                              "contains",
                              "exists",
                              "equals"
                            ],
                            "type": "string"
                          },
                          "matchType": {
                            "description": "The type of match used.\n",
                            "enum": [
                              "header",
                              "hostname",
                              "path",
                              "extension",
                              "query",
                              "cookie",
                              "deviceCharacteristics",
                              "clientip",
                              "continent",
                              "countrycode",
                              "regioncode",
                              "protocol",
                              "method",
                              "proxy"
                            ],
                            "type": "string"
                          },
                          "matchValue": {
                            "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                            "maxLength": 8192,
                            "minLength": 1,
                            "type": "string"
                          },
                          "negate": {
                            "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                            "type": "boolean"
                          },
                          "objectMatchValue": {
                            "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                            "oneOf": [
                              {
                                "additionalProperties": false,
                                "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                "properties": {
                                  "type": {
                                    "description": "The object type, which is `simple`.\n",
                                    "enum": [
                                      "simple"
                                    ],
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                    "items": {
                                      "type": "string"
                                    },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                },
                                "required": [
                                  "type",
                                  "value"
                                ],
                                "title": "Simple",
                                "type": "object"
                              },
                              {
                                "additionalProperties": false,
                                "description": "Use this for more complex match criteria.\n",
                                "properties": {
                                  "name": {
                                    "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "nameCaseSensitive": {
                                    "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                    "type": "boolean"
                                  },
                                  "nameHasWildcard": {
                                    "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                    "type": "boolean"
                                  },
                                  "options": {
                                    "additionalProperties": false,
                                    "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                    "properties": {
                                      "value": {
                                        "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "items": {
                                          "type": "string"
                                        },
                                        "nullable": true,
                                        "type": "array"
                                      },
                                      "valueCaseSensitive": {
                                        "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                        "type": "boolean"
                                      },
                                      "valueEscaped": {
                                        "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                        "type": "boolean"
                                      },
                                      "valueHasWildcard": {
                                        "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                        "type": "boolean"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": {
                                    "description": "The array type, which is `object`.\n",
                                    "enum": [
                                      "object"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "type"
                                ],
                                "title": "Object",
                                "type": "object"
                              }
                            ],
                            "title": "Object match value",
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "nullable": true,
                      "type": "array"
                    },
                    "matchesAlways": {
                      "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n",
                      "type": "boolean"
                    },
                    "name": {
                      "description": "The name of the rule.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "start": {
                      "default": 0,
                      "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "type": {
                      "description": "The type of Cloudlet the rule is for. For example, the string for Phased Release is `cdMatchRule`.\n",
                      "enum": [
                        "cdMatchRule"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "type"
                  ],
                  "title": "Phased Release",
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/match-rule-cd.yaml"
                  }
                },
                {
                  "additionalProperties": false,
                  "description": "Contains match rule information for Edge Redirector.\n",
                  "properties": {
                    "akaRuleId": {
                      "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "disabled": {
                      "default": false,
                      "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                      "type": "boolean"
                    },
                    "end": {
                      "default": 0,
                      "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "id": {
                      "description": "__Read-only__ Akamai internal use only.\n",
                      "nullable": true,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "location": {
                      "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "matchURL": {
                      "description": "The URL the Cloudlet uses to match the incoming request.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "matches": {
                      "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                      "items": {
                        "additionalProperties": false,
                        "description": "The match rule criteria.\n",
                        "oneOf": [
                          {
                            "required": [
                              "matchType",
                              "matchValue"
                            ],
                            "title": "matchType and matchValue required"
                          },
                          {
                            "required": [
                              "matchType",
                              "objectMatchValue"
                            ],
                            "title": "matchType and objectMatchValue required"
                          }
                        ],
                        "properties": {
                          "caseSensitive": {
                            "description": "If `true`, the match is case sensitive.\n",
                            "type": "boolean"
                          },
                          "checkIPs": {
                            "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                            "enum": [
                              "CONNECTING_IP",
                              "XFF_HEADERS",
                              "CONNECTING_IP XFF_HEADERS"
                            ],
                            "nullable": true,
                            "type": "string"
                          },
                          "matchOperator": {
                            "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                            "enum": [
                              "contains",
                              "exists",
                              "equals"
                            ],
                            "type": "string"
                          },
                          "matchType": {
                            "description": "The type of match used.\n",
                            "enum": [
                              "header",
                              "hostname",
                              "path",
                              "extension",
                              "query",
                              "regex",
                              "cookie",
                              "deviceCharacteristics",
                              "clientip",
                              "continent",
                              "countrycode",
                              "regioncode",
                              "protocol",
                              "method",
                              "proxy"
                            ],
                            "type": "string"
                          },
                          "matchValue": {
                            "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                            "maxLength": 8192,
                            "minLength": 1,
                            "type": "string"
                          },
                          "negate": {
                            "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                            "type": "boolean"
                          },
                          "objectMatchValue": {
                            "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                            "oneOf": [
                              {
                                "additionalProperties": false,
                                "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                "properties": {
                                  "type": {
                                    "description": "The object type, which is `simple`.\n",
                                    "enum": [
                                      "simple"
                                    ],
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                    "items": {
                                      "type": "string"
                                    },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                },
                                "required": [
                                  "type",
                                  "value"
                                ],
                                "title": "Simple",
                                "type": "object"
                              },
                              {
                                "additionalProperties": false,
                                "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                "properties": {
                                  "name": {
                                    "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "nameCaseSensitive": {
                                    "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                    "type": "boolean"
                                  },
                                  "nameHasWildcard": {
                                    "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                    "type": "boolean"
                                  },
                                  "options": {
                                    "additionalProperties": false,
                                    "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                    "properties": {
                                      "value": {
                                        "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "items": {
                                          "type": "string"
                                        },
                                        "nullable": true,
                                        "type": "array"
                                      },
                                      "valueCaseSensitive": {
                                        "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                        "type": "boolean"
                                      },
                                      "valueEscaped": {
                                        "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                        "type": "boolean"
                                      },
                                      "valueHasWildcard": {
                                        "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                        "type": "boolean"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": {
                                    "description": "The array type, which is `object`.\n",
                                    "enum": [
                                      "object"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "type"
                                ],
                                "title": "Object",
                                "type": "object"
                              }
                            ],
                            "title": "Object match value",
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "nullable": true,
                      "type": "array"
                    },
                    "matchesAlways": {
                      "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n",
                      "type": "boolean"
                    },
                    "name": {
                      "description": "The name of the rule.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "redirectURL": {
                      "description": "The URL Edge Redirector redirects the request to. If using `useRelativeUrl`, you can enter a path for the value. If `useRelativeUrl` is not used or set to `none`, then the `redirectUrl` should be a fully qualified URL.\n",
                      "maxLength": 8192,
                      "minLength": 1,
                      "type": "string"
                    },
                    "start": {
                      "default": 0,
                      "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "statusCode": {
                      "description": "The HTTP response redirect type status code: `301` for permanent redirect, `302` for temporary redirect, `303` for temporary using GET, `307` for temporary retain method, or `308` for permanent retain method.\n",
                      "enum": [
                        301,
                        302,
                        303,
                        307,
                        308
                      ],
                      "type": "integer"
                    },
                    "type": {
                      "description": "The type of Cloudlet the rule is for. For example, the string for Edge Redirector is `erMatchRule`.\n",
                      "enum": [
                        "erMatchRule"
                      ],
                      "type": "string"
                    },
                    "useIncomingQueryString": {
                      "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n",
                      "type": "boolean"
                    },
                    "useIncomingSchemeAndHost": {
                      "description": "If set to `true`, the Cloudlet copies both the scheme and the hostname from the incoming request to use in the redirect URL.\n",
                      "type": "boolean"
                    },
                    "useRelativeUrl": {
                      "description": "If set to `relative_url`, takes the path entered for the `redirectUrl` and sets it in the response’s `Location` header. The client browser receiving the request decides which protocol and hostname to use. If set to `copy_scheme_hostname`, it creates an absolute path by taking the protocol and hostname from the incoming request and combining them with path information entered for the `redirectUrl`. This absolute path is set in the response’s `Location` header. If you don't include `useRelativeUrl`, or if you set it to `none`, then specify the `redirectUrl` as a fully qualified URL.\n",
                      "enum": [
                        "relative_url",
                        "copy_scheme_hostname",
                        "none"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "type",
                    "redirectURL",
                    "statusCode"
                  ],
                  "title": "Edge Redirector",
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/match-rule-er.yaml"
                  }
                },
                {
                  "additionalProperties": false,
                  "description": "Contains match rule information for Forward Rewrite.\n",
                  "properties": {
                    "akaRuleId": {
                      "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "disabled": {
                      "default": false,
                      "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                      "type": "boolean"
                    },
                    "end": {
                      "default": 0,
                      "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "forwardSettings": {
                      "additionalProperties": false,
                      "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.\n",
                      "properties": {
                        "originId": {
                          "description": "The conditional origin's unique identifier.\n",
                          "maxLength": 8192,
                          "nullable": true,
                          "type": "string"
                        },
                        "pathAndQS": {
                          "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.\n",
                          "maxLength": 8192,
                          "minLength": 1,
                          "type": "string"
                        },
                        "useIncomingQueryString": {
                          "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.\n",
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "id": {
                      "description": "__Read-only__ Akamai internal use only.\n",
                      "nullable": true,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "location": {
                      "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "matchURL": {
                      "description": "The URL the Cloudlet uses to match the incoming request.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "matches": {
                      "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                      "items": {
                        "additionalProperties": false,
                        "description": "The match rule criteria.\n",
                        "oneOf": [
                          {
                            "required": [
                              "matchType",
                              "matchValue"
                            ],
                            "title": "matchType and matchValue required"
                          },
                          {
                            "required": [
                              "matchType",
                              "objectMatchValue"
                            ],
                            "title": "matchType and objectMatchValue required"
                          }
                        ],
                        "properties": {
                          "caseSensitive": {
                            "description": "If `true`, the match is case sensitive.\n",
                            "type": "boolean"
                          },
                          "checkIPs": {
                            "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                            "enum": [
                              "CONNECTING_IP",
                              "XFF_HEADERS",
                              "CONNECTING_IP XFF_HEADERS"
                            ],
                            "type": "string"
                          },
                          "matchOperator": {
                            "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                            "enum": [
                              "contains",
                              "exists",
                              "equals"
                            ],
                            "type": "string"
                          },
                          "matchType": {
                            "description": "The type of match used.\n",
                            "enum": [
                              "header",
                              "hostname",
                              "path",
                              "extension",
                              "query",
                              "regex",
                              "cookie",
                              "deviceCharacteristics",
                              "clientip",
                              "continent",
                              "countrycode",
                              "regioncode",
                              "protocol",
                              "method",
                              "proxy"
                            ],
                            "type": "string"
                          },
                          "matchValue": {
                            "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                            "maxLength": 8192,
                            "minLength": 1,
                            "type": "string"
                          },
                          "negate": {
                            "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                            "type": "boolean"
                          },
                          "objectMatchValue": {
                            "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                            "oneOf": [
                              {
                                "additionalProperties": false,
                                "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                "properties": {
                                  "type": {
                                    "description": "The object type, which is `simple`.\n",
                                    "enum": [
                                      "simple"
                                    ],
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                    "items": {
                                      "type": "string"
                                    },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                },
                                "required": [
                                  "type",
                                  "value"
                                ],
                                "title": "Simple",
                                "type": "object"
                              },
                              {
                                "additionalProperties": false,
                                "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                "properties": {
                                  "name": {
                                    "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "nameCaseSensitive": {
                                    "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                    "type": "boolean"
                                  },
                                  "nameHasWildcard": {
                                    "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                    "type": "boolean"
                                  },
                                  "options": {
                                    "additionalProperties": false,
                                    "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                    "properties": {
                                      "value": {
                                        "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "items": {
                                          "type": "string"
                                        },
                                        "nullable": true,
                                        "type": "array"
                                      },
                                      "valueCaseSensitive": {
                                        "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                        "type": "boolean"
                                      },
                                      "valueEscaped": {
                                        "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                        "type": "boolean"
                                      },
                                      "valueHasWildcard": {
                                        "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                        "type": "boolean"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": {
                                    "description": "The array type, which is `object`.\n",
                                    "enum": [
                                      "object"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "type"
                                ],
                                "title": "Object",
                                "type": "object"
                              }
                            ],
                            "title": "Object match value",
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "nullable": true,
                      "type": "array"
                    },
                    "name": {
                      "description": "The name of the rule.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "start": {
                      "default": 0,
                      "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "type": {
                      "description": "The type of Cloudlet the rule is for. For example, the string for Forward Rewrite is `frMatchRule`.\n",
                      "enum": [
                        "frMatchRule"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "type",
                    "forwardSettings"
                  ],
                  "title": "Forward Rewrite",
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/match-rule-fr.yaml"
                  }
                },
                {
                  "additionalProperties": false,
                  "description": "Contains match rule information for Request Control.\n",
                  "properties": {
                    "akaRuleId": {
                      "description": "__Read-only__ The rule's unique identifier within the policy version.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "allowDeny": {
                      "description": "If set to `allow`, the request is sent to origin when all conditions are true. If `deny`, the request is denied when all conditions are true. If `denybranded`, the request is denied and rerouted according to the configuration of the [Request Control behavior](https://techdocs.akamai.com/property-mgr/reference/latest-request-control).\n",
                      "enum": [
                        "allow",
                        "deny",
                        "denybranded"
                      ],
                      "type": "string"
                    },
                    "disabled": {
                      "default": false,
                      "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                      "type": "boolean"
                    },
                    "end": {
                      "default": 0,
                      "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "id": {
                      "description": "__Read-only__ Akamai internal use only.\n",
                      "nullable": true,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "location": {
                      "description": "__Read-only__ The navigable endpoint used for the object referred to in the operation.\n",
                      "readOnly": true,
                      "type": "string"
                    },
                    "matches": {
                      "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                      "items": {
                        "additionalProperties": false,
                        "description": "The match rule criteria.\n",
                        "oneOf": [
                          {
                            "required": [
                              "matchType",
                              "matchValue"
                            ],
                            "title": "matchType and matchValue required"
                          },
                          {
                            "required": [
                              "matchType",
                              "objectMatchValue"
                            ],
                            "title": "matchType and objectMatchValue required"
                          }
                        ],
                        "properties": {
                          "caseSensitive": {
                            "description": "If `true`, the match is case sensitive.\n",
                            "type": "boolean"
                          },
                          "checkIPs": {
                            "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                            "enum": [
                              "CONNECTING_IP",
                              "XFF_HEADERS",
                              "CONNECTING_IP XFF_HEADERS"
                            ],
                            "type": "string"
                          },
                          "matchOperator": {
                            "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                            "enum": [
                              "contains",
                              "exists",
                              "equals"
                            ],
                            "type": "string"
                          },
                          "matchType": {
                            "description": "The type of match used.\n",
                            "enum": [
                              "clientip",
                              "continent",
                              "cookie",
                              "countrycode",
                              "deviceCharacteristics",
                              "extension",
                              "header",
                              "hostname",
                              "method",
                              "path",
                              "protocol",
                              "proxy",
                              "query",
                              "regioncode"
                            ],
                            "type": "string"
                          },
                          "matchValue": {
                            "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                            "maxLength": 8192,
                            "minLength": 1,
                            "type": "string"
                          },
                          "negate": {
                            "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n",
                            "type": "boolean"
                          },
                          "objectMatchValue": {
                            "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                            "oneOf": [
                              {
                                "additionalProperties": false,
                                "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                "properties": {
                                  "type": {
                                    "description": "The object type, which is `simple`.\n",
                                    "enum": [
                                      "simple"
                                    ],
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                    "items": {
                                      "type": "string"
                                    },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                },
                                "required": [
                                  "type",
                                  "value"
                                ],
                                "title": "Simple",
                                "type": "object"
                              },
                              {
                                "additionalProperties": false,
                                "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                "properties": {
                                  "name": {
                                    "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "nameCaseSensitive": {
                                    "description": "When set to `true`, the `name` match is case-sensitive.\n",
                                    "type": "boolean"
                                  },
                                  "nameHasWildcard": {
                                    "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n",
                                    "type": "boolean"
                                  },
                                  "options": {
                                    "additionalProperties": false,
                                    "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                    "properties": {
                                      "value": {
                                        "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "items": {
                                          "type": "string"
                                        },
                                        "nullable": true,
                                        "type": "array"
                                      },
                                      "valueCaseSensitive": {
                                        "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n",
                                        "type": "boolean"
                                      },
                                      "valueEscaped": {
                                        "description": "Set to `true` if the entries for `value` includes escaped characters.\n",
                                        "type": "boolean"
                                      },
                                      "valueHasWildcard": {
                                        "description": "Set to `true` if the entries for `value` includes wildcards.\n",
                                        "type": "boolean"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": {
                                    "description": "The array type, which is `object`.\n",
                                    "enum": [
                                      "object"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "type"
                                ],
                                "title": "Object",
                                "type": "object"
                              }
                            ],
                            "title": "Object match value",
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "nullable": true,
                      "type": "array"
                    },
                    "matchesAlways": {
                      "description": "The match rule always applies when `true`. When `false`, the rule applies within the `start` and `end` time range.\n",
                      "type": "boolean"
                    },
                    "name": {
                      "description": "The name of the rule.\n",
                      "maxLength": 8192,
                      "nullable": true,
                      "type": "string"
                    },
                    "start": {
                      "default": 0,
                      "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "type": {
                      "description": "The type of Cloudlet the rule is for. For example, the string for Request Control is `igMatchRule`.\n",
                      "enum": [
                        "igMatchRule"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "type",
                    "allowDeny"
                  ],
                  "title": "Request Control",
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/match-rule-ig.yaml"
                  }
                },
                {
                  "type": "object",
                  "description": "Contains match rule information for Visitor Prioritization.\n",
                  "title": "Visitor Prioritization",
                  "additionalProperties": false,
                  "required": [
                    "type",
                    "passThroughPercent"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Akamai internal use only.\n",
                      "nullable": true,
                      "readOnly": true
                    },
                    "location": {
                      "type": "string",
                      "description": "The navigable endpoint used for the object referred to in the operation.\n",
                      "readOnly": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the rule.\n",
                      "nullable": true,
                      "maxLength": 8192
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of Cloudlet the rule is for. For example, the string for Visitor Prioritization is `vpMatchRule`.\n",
                      "enum": [
                        "vpMatchRule"
                      ]
                    },
                    "akaRuleId": {
                      "type": "string",
                      "description": "The rule's unique identifier within the policy version.\n",
                      "readOnly": true
                    },
                    "start": {
                      "type": "integer",
                      "description": "The start time for this match rule in epoch seconds. When `start` is `0`, the match rule is on.\n",
                      "default": 0,
                      "minimum": 0
                    },
                    "end": {
                      "type": "integer",
                      "description": "The end time for this match rule in epoch seconds. When `end` is `0`, there is no end time for this match rule.\n",
                      "default": 0,
                      "minimum": 0
                    },
                    "matches": {
                      "type": "array",
                      "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).\n",
                      "nullable": true,
                      "items": {
                        "type": "object",
                        "description": "The match rule criteria.\n",
                        "additionalProperties": false,
                        "oneOf": [
                          {
                            "required": [
                              "matchType",
                              "matchValue"
                            ],
                            "title": "matchType and matchValue required"
                          },
                          {
                            "required": [
                              "matchType",
                              "objectMatchValue"
                            ],
                            "title": "matchType and objectMatchValue required"
                          }
                        ],
                        "properties": {
                          "caseSensitive": {
                            "type": "boolean",
                            "description": "If `true`, the match is case sensitive.\n"
                          },
                          "matchValue": {
                            "type": "string",
                            "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.\n",
                            "minLength": 1,
                            "maxLength": 8192
                          },
                          "negate": {
                            "type": "boolean",
                            "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).\n"
                          },
                          "matchOperator": {
                            "type": "string",
                            "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.\n",
                            "enum": [
                              "contains",
                              "exists",
                              "equals"
                            ]
                          },
                          "matchType": {
                            "type": "string",
                            "description": "The type of match used.\n",
                            "enum": [
                              "hostname",
                              "path",
                              "extension",
                              "query",
                              "cookie",
                              "deviceCharacteristics",
                              "clientip",
                              "continent",
                              "countrycode",
                              "regioncode",
                              "protocol",
                              "header",
                              "method",
                              "proxy"
                            ]
                          },
                          "checkIPs": {
                            "type": "string",
                            "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.\n",
                            "enum": [
                              "CONNECTING_IP",
                              "XFF_HEADERS",
                              "CONNECTING_IP XFF_HEADERS"
                            ]
                          },
                          "objectMatchValue": {
                            "type": "object",
                            "description": "The match rule value to match on. The object match value subtypes include `simple` and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on.\n",
                            "title": "Object match value",
                            "oneOf": [
                              {
                                "type": "object",
                                "description": "Use the `simple` array option when adding an array of string-based values.\n",
                                "title": "Simple",
                                "additionalProperties": false,
                                "required": [
                                  "type",
                                  "value"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "description": "The object type, which is `simple`.\n",
                                    "enum": [
                                      "simple"
                                    ]
                                  },
                                  "value": {
                                    "type": "array",
                                    "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                    "nullable": true,
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.\n",
                                "title": "Object",
                                "additionalProperties": false,
                                "required": [
                                  "name",
                                  "type"
                                ],
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.\n",
                                    "minLength": 1,
                                    "maxLength": 8192
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "The array type, which is `object`.\n",
                                    "enum": [
                                      "object"
                                    ]
                                  },
                                  "options": {
                                    "type": "object",
                                    "description": "If using the `object` match value subtype, use this array to list the values to match on.\n",
                                    "additionalProperties": false,
                                    "properties": {
                                      "value": {
                                        "type": "array",
                                        "description": "If using the `simple` match value subtype, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.\n",
                                        "nullable": true,
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "valueHasWildcard": {
                                        "type": "boolean",
                                        "description": "Set to `true` if the entries for `value` includes wildcards.\n"
                                      },
                                      "valueCaseSensitive": {
                                        "type": "boolean",
                                        "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.\n"
                                      },
                                      "valueEscaped": {
                                        "type": "boolean",
                                        "description": "Set to `true` if the entries for `value` includes escaped characters.\n"
                                      }
                                    }
                                  },
                                  "nameCaseSensitive": {
                                    "type": "boolean",
                                    "description": "When set to `true`, the `name` match is case-sensitive.\n"
                                  },
                                  "nameHasWildcard": {
                                    "type": "boolean",
                                    "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.\n"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    },
                    "disabled": {
                      "type": "boolean",
                      "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.\n",
                      "default": false
                    },
                    "passThroughPercent": {
                      "type": "number",
                      "description": "The range `0.000: 99.000` specifies the percentage of requests that pass through to the origin. The value of `100` means the request always passes through to the origin. For Visitor Prioritization, a value of `-1` means send everyone to the waiting room.\n",
                      "minimum": -1,
                      "maximum": 100
                    },
                    "matchURL": {
                      "type": "string",
                      "description": "The URL the Cloudlet uses to match the incoming request.\n",
                      "nullable": true,
                      "maxLength": 8192
                    },
                    "useIncomingQueryString": {
                      "type": "boolean",
                      "description": "If set to `true`, the Cloudlet includes the request's query string in the rewritten or forwarded URL.\n"
                    }
                  }
                }
              ]
            },
            "type": "array",
            "x-akamai": {
              "file-path": "schemas/match-rules.yaml"
            }
          },
          "policyId": {
            "type": "integer",
            "description": "ID of the policy the version is associated to.\n"
          },
          "revisionId": {
            "type": "integer",
            "description": "ID of the revision.\n"
          },
          "rulesLocked": {
            "type": "boolean",
            "description": "Flag determining whether the rules are locked or not.\n"
          }
        }
      }
    }
  },
  "x-akamai": {
    "auth-type": "EDGE_GRID"
  }
}