{
  "openapi": "3.0.0",
  "info": {
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "title": "Property Associations",
    "version": "v2"
  },
  "servers": [
    {
      "url": "https://{hostname}/cloudlets/api/v2"
    }
  ],
  "paths": {
    "/policies/{policyId}/properties": {
      "get": {
        "description": "Run this operation to return the complete list of property associations for a specific policy with a given `policyId`.\n",
        "operationId": "get-policy-properties",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "www.myproperty.com": {
                    "groupId": 12345,
                    "name": "www.example.com",
                    "newestVersion": {
                      "activatedBy": "jkowalski",
                      "activationDate": "2018-01-01",
                      "version": 5,
                      "referencedPolicies": [
                        "fr_policy_1"
                      ],
                      "cloudletsOrigins": {
                        "customerOrigin1": {
                          "checksum": "691365709300c782c875ea43244a3d3f",
                          "hostname": "origin1.example.com",
                          "originId": "customerOrigin1",
                          "type": "CUSTOMER"
                        },
                        "customerOrigin2": {
                          "checksum": "da016ec7b425cc1b601352d6078d0b51",
                          "hostname": "origin2.example.com",
                          "originId": "customerOrigin2",
                          "type": "CUSTOMER"
                        }
                      }
                    },
                    "production": {
                      "activatedBy": "tyamada",
                      "activationDate": "2018-01-01",
                      "version": 5,
                      "referencedPolicies": [
                        "fr_policy_1"
                      ],
                      "cloudletsOrigins": {
                        "customerOrigin1": {
                          "checksum": "691365709300c782c875ea43244a3d3f",
                          "hostname": "origin1.example.com",
                          "originId": "customerOrigin1",
                          "type": "CUSTOMER"
                        },
                        "netStorageOrigin1": {
                          "checksum": "773636eb8f6c65f5dc01cc3d84f5c0a8",
                          "hostname": "download.akamai.com/12345",
                          "originId": "netStorageOrigin1",
                          "type": "NETSTORAGE"
                        }
                      }
                    },
                    "staging": {
                      "activatedBy": "mrossi",
                      "activationDate": "2018-01-01",
                      "version": 5,
                      "referencedPolicies": [
                        "fr_policy_1"
                      ]
                    },
                    "id": 987654321
                  },
                  "cloudletsOrigins": {
                    "customerOrigin1": {
                      "checksum": "691365709300c782c875ea43244a3d3f",
                      "hostname": "origin1.example.com",
                      "originId": "customerOrigin1",
                      "type": "CUSTOMER"
                    },
                    "customerOrigin2": {
                      "checksum": "da016ec7b425cc1b601352d6078d0b51",
                      "hostname": "origin2.example.com",
                      "originId": "customerOrigin2",
                      "type": "CUSTOMER"
                    },
                    "netStorageOrigin1": {
                      "checksum": "773636eb8f6c65f5dc01cc3d84f5c0a8",
                      "hostname": "download.akamai.com/12345",
                      "originId": "netStorageOrigin1",
                      "type": "NETSTORAGE"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains information about the newest property version and the property’s current configuration on the production and staging networks.\n",
                  "properties": {
                    "groupId": {
                      "description": "The group association for the property.\n",
                      "type": "integer"
                    },
                    "id": {
                      "description": "Unique identifier for the property.\n",
                      "type": "integer"
                    },
                    "name": {
                      "description": "The name of the property. This value also appears at the start of each separate property object.\n",
                      "type": "string"
                    },
                    "newestVersion": {
                      "description": "Contains information about the newest property version.\n",
                      "items": {
                        "additionalProperties": false,
                        "description": "Contains information about the newest property version and the property’s current configuration on the production and staging networks for a specific `policyId`.\n",
                        "properties": {
                          "activatedBy": {
                            "description": "The name of the user who activated property.\n",
                            "type": "string"
                          },
                          "activationDate": {
                            "description": "The date, in ISO 8601 format indicating when the property was activated.\n",
                            "format": "date",
                            "type": "string"
                          },
                          "cloudletsOrigins": {
                            "description": "Contains information about each conditional origin.\n",
                            "items": {
                              "anyOf": [
                                {
                                  "additionalProperties": false,
                                  "properties": {
                                    "checksum": {
                                      "description": "The checksum that distinguishes this conditional origin from any others that might share the same name.\n",
                                      "type": "string"
                                    },
                                    "description": {
                                      "description": "The description of the load balancing configuration provided by a user.\n",
                                      "type": "string"
                                    },
                                    "originId": {
                                      "description": "The conditional origin's unique identifier.\n",
                                      "maxLength": 63,
                                      "minLength": 2,
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "The type of origin this conditional origin is set up as. In this response the conditonal origin `type` is `APPLICATION_LOAD_BALANCER`.\n",
                                      "enum": [
                                        "APPLICATION_LOAD_BALANCER"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "title": "APPLICATION_LOAD_BALANCER"
                                },
                                {
                                  "additionalProperties": false,
                                  "properties": {
                                    "checksum": {
                                      "description": "The checksum that distinguishes this conditional origin from any others that might share the same name.\n",
                                      "type": "string"
                                    },
                                    "hostname": {
                                      "description": "The name of the host that can be used as a conditional origin.\n",
                                      "type": "string"
                                    },
                                    "originId": {
                                      "description": "The conditional origin's unique identifier.\n",
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "The type of origin this conditional origin is set up as, in this case `CUSTOMER`.\n",
                                      "enum": [
                                        "CUSTOMER"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "hostname",
                                    "originId",
                                    "type"
                                  ],
                                  "title": "CUSTOMER"
                                },
                                {
                                  "additionalProperties": false,
                                  "properties": {
                                    "checksum": {
                                      "description": "The checksum that distinguishes this conditional origin from any others that might share the same name.\n",
                                      "type": "string"
                                    },
                                    "hostname": {
                                      "description": "The name of the host that can be used as a conditional origin.\n",
                                      "type": "string"
                                    },
                                    "originId": {
                                      "description": "The conditional origin's unique identifier.\n",
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "The type of origin this conditional origin is set up as, in this case `NETSTORAGE`.\n",
                                      "enum": [
                                        "NETSTORAGE"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "hostname",
                                    "originId",
                                    "type"
                                  ],
                                  "title": "NETSTORAGE"
                                }
                              ],
                              "description": "Schema for a Cloudlets Origin.\n",
                              "x-akamai": {
                                "file-path": "schemas/origin.yaml"
                              }
                            },
                            "type": "array"
                          },
                          "referencedPolicies": {
                            "description": "The names of Cloudlets policies for this version of the property.\n",
                            "type": "string"
                          },
                          "version": {
                            "description": "The version number of the property.\n",
                            "type": "integer"
                          }
                        },
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/property.yaml"
                        }
                      },
                      "type": "array"
                    },
                    "production": {
                      "description": "Contains information about the property’s current configuration on the `production` network.\n",
                      "items": {
                        "additionalProperties": false,
                        "description": "Contains information about the newest property version and the property’s current configuration on the production and staging networks for a specific `policyId`.\n",
                        "properties": {
                          "activatedBy": {
                            "description": "The name of the user who activated property.\n",
                            "type": "string"
                          },
                          "activationDate": {
                            "description": "The date, in ISO 8601 format indicating when the property was activated.\n",
                            "format": "date",
                            "type": "string"
                          },
                          "cloudletsOrigins": {
                            "description": "Contains information about each conditional origin.\n",
                            "items": {
                              "anyOf": [
                                {
                                  "additionalProperties": false,
                                  "properties": {
                                    "checksum": {
                                      "description": "The checksum that distinguishes this conditional origin from any others that might share the same name.\n",
                                      "type": "string"
                                    },
                                    "description": {
                                      "description": "The description of the load balancing configuration provided by a user.\n",
                                      "type": "string"
                                    },
                                    "originId": {
                                      "description": "The conditional origin's unique identifier.\n",
                                      "maxLength": 63,
                                      "minLength": 2,
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "The type of origin this conditional origin is set up as. In this response the conditonal origin `type` is `APPLICATION_LOAD_BALANCER`.\n",
                                      "enum": [
                                        "APPLICATION_LOAD_BALANCER"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "title": "APPLICATION_LOAD_BALANCER"
                                },
                                {
                                  "additionalProperties": false,
                                  "properties": {
                                    "checksum": {
                                      "description": "The checksum that distinguishes this conditional origin from any others that might share the same name.\n",
                                      "type": "string"
                                    },
                                    "hostname": {
                                      "description": "The name of the host that can be used as a conditional origin.\n",
                                      "type": "string"
                                    },
                                    "originId": {
                                      "description": "The conditional origin's unique identifier.\n",
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "The type of origin this conditional origin is set up as, in this case `CUSTOMER`.\n",
                                      "enum": [
                                        "CUSTOMER"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "hostname",
                                    "originId",
                                    "type"
                                  ],
                                  "title": "CUSTOMER"
                                },
                                {
                                  "additionalProperties": false,
                                  "properties": {
                                    "checksum": {
                                      "description": "The checksum that distinguishes this conditional origin from any others that might share the same name.\n",
                                      "type": "string"
                                    },
                                    "hostname": {
                                      "description": "The name of the host that can be used as a conditional origin.\n",
                                      "type": "string"
                                    },
                                    "originId": {
                                      "description": "The conditional origin's unique identifier.\n",
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "The type of origin this conditional origin is set up as, in this case `NETSTORAGE`.\n",
                                      "enum": [
                                        "NETSTORAGE"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "hostname",
                                    "originId",
                                    "type"
                                  ],
                                  "title": "NETSTORAGE"
                                }
                              ],
                              "description": "Schema for a Cloudlets Origin.\n",
                              "x-akamai": {
                                "file-path": "schemas/origin.yaml"
                              }
                            },
                            "type": "array"
                          },
                          "referencedPolicies": {
                            "description": "The names of Cloudlets policies for this version of the property.\n",
                            "type": "string"
                          },
                          "version": {
                            "description": "The version number of the property.\n",
                            "type": "integer"
                          }
                        },
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/property.yaml"
                        }
                      },
                      "type": "array"
                    },
                    "staging": {
                      "description": "Contains information about the property’s current configuration on the `staging` network.\n",
                      "items": {
                        "additionalProperties": false,
                        "description": "Contains information about the newest property version and the property’s current configuration on the production and staging networks for a specific `policyId`.\n",
                        "properties": {
                          "activatedBy": {
                            "description": "The name of the user who activated property.\n",
                            "type": "string"
                          },
                          "activationDate": {
                            "description": "The date, in ISO 8601 format indicating when the property was activated.\n",
                            "format": "date",
                            "type": "string"
                          },
                          "cloudletsOrigins": {
                            "description": "Contains information about each conditional origin.\n",
                            "items": {
                              "anyOf": [
                                {
                                  "additionalProperties": false,
                                  "properties": {
                                    "checksum": {
                                      "description": "The checksum that distinguishes this conditional origin from any others that might share the same name.\n",
                                      "type": "string"
                                    },
                                    "description": {
                                      "description": "The description of the load balancing configuration provided by a user.\n",
                                      "type": "string"
                                    },
                                    "originId": {
                                      "description": "The conditional origin's unique identifier.\n",
                                      "maxLength": 63,
                                      "minLength": 2,
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "The type of origin this conditional origin is set up as. In this response the conditonal origin `type` is `APPLICATION_LOAD_BALANCER`.\n",
                                      "enum": [
                                        "APPLICATION_LOAD_BALANCER"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "title": "APPLICATION_LOAD_BALANCER"
                                },
                                {
                                  "additionalProperties": false,
                                  "properties": {
                                    "checksum": {
                                      "description": "The checksum that distinguishes this conditional origin from any others that might share the same name.\n",
                                      "type": "string"
                                    },
                                    "hostname": {
                                      "description": "The name of the host that can be used as a conditional origin.\n",
                                      "type": "string"
                                    },
                                    "originId": {
                                      "description": "The conditional origin's unique identifier.\n",
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "The type of origin this conditional origin is set up as, in this case `CUSTOMER`.\n",
                                      "enum": [
                                        "CUSTOMER"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "hostname",
                                    "originId",
                                    "type"
                                  ],
                                  "title": "CUSTOMER"
                                },
                                {
                                  "additionalProperties": false,
                                  "properties": {
                                    "checksum": {
                                      "description": "The checksum that distinguishes this conditional origin from any others that might share the same name.\n",
                                      "type": "string"
                                    },
                                    "hostname": {
                                      "description": "The name of the host that can be used as a conditional origin.\n",
                                      "type": "string"
                                    },
                                    "originId": {
                                      "description": "The conditional origin's unique identifier.\n",
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "The type of origin this conditional origin is set up as, in this case `NETSTORAGE`.\n",
                                      "enum": [
                                        "NETSTORAGE"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "hostname",
                                    "originId",
                                    "type"
                                  ],
                                  "title": "NETSTORAGE"
                                }
                              ],
                              "description": "Schema for a Cloudlets Origin.\n",
                              "x-akamai": {
                                "file-path": "schemas/origin.yaml"
                              }
                            },
                            "type": "array"
                          },
                          "referencedPolicies": {
                            "description": "The names of Cloudlets policies for this version of the property.\n",
                            "type": "string"
                          },
                          "version": {
                            "description": "The version number of the property.\n",
                            "type": "integer"
                          }
                        },
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/property.yaml"
                        }
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "groupId",
                    "name",
                    "newestVersion"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/get-properties-response.yaml"
                  }
                }
              }
            },
            "description": "Returns information about the associated properties.\n"
          }
        },
        "summary": "Get associated properties for a policy",
        "tags": [
          "Associated properties"
        ]
      },
      "parameters": [
        {
          "description": "The ID of the policy.\n",
          "in": "path",
          "name": "policyId",
          "required": true,
          "schema": {
            "example": 1001,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/policyId-path.yaml"
          }
        }
      ]
    },
    "/policies/{policyId}/properties/{propertyId}": {
      "delete": {
        "description": "Run this operation to remove the link between the specified `policyId` and `propertyId`. If the `staging` or `prod` is not specified in the network query parameter, then the link is removed in both the networks if present. It does not delete the property or the policy.\n",
        "operationId": "delete-policy-properties",
        "responses": {
          "204": {
            "description": "The property is no longer associated with the policy.\n"
          }
        },
        "summary": "Remove a property from a policy",
        "tags": [
          "Associated properties"
        ]
      },
      "parameters": [
        {
          "description": "The ID of the policy.\n",
          "in": "path",
          "name": "policyId",
          "required": true,
          "schema": {
            "example": 1001,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/policyId-path.yaml"
          }
        },
        {
          "description": "The ID of the property linked with the `policyId`. For the `propertyId` value, use the `id` value from the [Get associated properties for a policy](ref:get-policy-properties) response. \n",
          "in": "path",
          "name": "propertyId",
          "required": true,
          "schema": {
            "example": 987654321,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/propertyId-path.yaml"
          }
        },
        {
          "description": "The selected network, either `staging` or `prod`.\n",
          "in": "query",
          "name": "network",
          "schema": {
            "enum": [
              "staging",
              "prod"
            ],
            "example": "staging",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/network-query.yaml"
          }
        }
      ]
    },
    "/properties": {
      "get": {
        "description": "Run this operation to return the complete list of the associated properties.\n",
        "operationId": "get-properties",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "www.myproperty.com": {
                    "groupId": 12345,
                    "name": "www.example.com",
                    "newestVersion": {
                      "activatedBy": "afero",
                      "activationDate": "2018-01-01",
                      "version": 5,
                      "referencedPolicies": [
                        "fr_policy_1"
                      ],
                      "cloudletsOrigins": {
                        "customerOrigin1": {
                          "checksum": "691365709300c782c875ea43244a3d3f",
                          "hostname": "origin1.example.com",
                          "originId": "customerOrigin1",
                          "type": "CUSTOMER"
                        },
                        "customerOrigin2": {
                          "checksum": "da016ec7b425cc1b601352d6078d0b51",
                          "hostname": "origin2.example.com",
                          "originId": "customerOrigin2",
                          "type": "CUSTOMER"
                        }
                      }
                    },
                    "production": {
                      "activatedBy": "adevi",
                      "activationDate": "2018-01-01",
                      "version": 5,
                      "referencedPolicies": [
                        "fr_policy_1"
                      ],
                      "cloudletsOrigins": {
                        "customerOrigin1": {
                          "checksum": "691365709300c782c875ea43244a3d3f",
                          "hostname": "origin1.example.com",
                          "originId": "customerOrigin1",
                          "type": "CUSTOMER"
                        },
                        "netStorageOrigin1": {
                          "checksum": "773636eb8f6c65f5dc01cc3d84f5c0a8",
                          "hostname": "download.akamai.com/12345",
                          "originId": "netStorageOrigin1",
                          "type": "NETSTORAGE"
                        }
                      }
                    },
                    "staging": {
                      "activatedBy": "jdupont",
                      "activationDate": "2018-01-01",
                      "version": 5,
                      "referencedPolicies": [
                        "fr_policy_1"
                      ]
                    },
                    "id": 987654321
                  },
                  "cloudletsOrigins": {
                    "customerOrigin1": {
                      "checksum": "691365709300c782c875ea43244a3d3f",
                      "hostname": "origin1.example.com",
                      "originId": "customerOrigin1",
                      "type": "CUSTOMER"
                    },
                    "customerOrigin2": {
                      "checksum": "da016ec7b425cc1b601352d6078d0b51",
                      "hostname": "origin2.example.com",
                      "originId": "customerOrigin2",
                      "type": "CUSTOMER"
                    },
                    "netStorageOrigin1": {
                      "checksum": "773636eb8f6c65f5dc01cc3d84f5c0a8",
                      "hostname": "download.akamai.com/12345",
                      "originId": "netStorageOrigin1",
                      "type": "NETSTORAGE"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains information about the newest property version and the property’s current configuration on the production and staging networks.\n",
                  "properties": {
                    "groupId": {
                      "description": "The group association for the property.\n",
                      "type": "integer"
                    },
                    "id": {
                      "description": "Unique identifier for the property.\n",
                      "type": "integer"
                    },
                    "name": {
                      "description": "The name of the property. This value also appears at the start of each separate property object.\n",
                      "type": "string"
                    },
                    "newestVersion": {
                      "description": "Contains information about the newest property version.\n",
                      "items": {
                        "additionalProperties": false,
                        "description": "Contains information about the newest property version and the property’s current configuration on the production and staging networks for a specific `policyId`.\n",
                        "properties": {
                          "activatedBy": {
                            "description": "The name of the user who activated property.\n",
                            "type": "string"
                          },
                          "activationDate": {
                            "description": "The date, in ISO 8601 format indicating when the property was activated.\n",
                            "format": "date",
                            "type": "string"
                          },
                          "cloudletsOrigins": {
                            "description": "Contains information about each conditional origin.\n",
                            "items": {
                              "anyOf": [
                                {
                                  "additionalProperties": false,
                                  "properties": {
                                    "checksum": {
                                      "description": "The checksum that distinguishes this conditional origin from any others that might share the same name.\n",
                                      "type": "string"
                                    },
                                    "description": {
                                      "description": "The description of the load balancing configuration provided by a user.\n",
                                      "type": "string"
                                    },
                                    "originId": {
                                      "description": "The conditional origin's unique identifier.\n",
                                      "maxLength": 63,
                                      "minLength": 2,
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "The type of origin this conditional origin is set up as. In this response the conditonal origin `type` is `APPLICATION_LOAD_BALANCER`.\n",
                                      "enum": [
                                        "APPLICATION_LOAD_BALANCER"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "title": "APPLICATION_LOAD_BALANCER"
                                },
                                {
                                  "additionalProperties": false,
                                  "properties": {
                                    "checksum": {
                                      "description": "The checksum that distinguishes this conditional origin from any others that might share the same name.\n",
                                      "type": "string"
                                    },
                                    "hostname": {
                                      "description": "The name of the host that can be used as a conditional origin.\n",
                                      "type": "string"
                                    },
                                    "originId": {
                                      "description": "The conditional origin's unique identifier.\n",
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "The type of origin this conditional origin is set up as, in this case `CUSTOMER`.\n",
                                      "enum": [
                                        "CUSTOMER"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "hostname",
                                    "originId",
                                    "type"
                                  ],
                                  "title": "CUSTOMER"
                                },
                                {
                                  "additionalProperties": false,
                                  "properties": {
                                    "checksum": {
                                      "description": "The checksum that distinguishes this conditional origin from any others that might share the same name.\n",
                                      "type": "string"
                                    },
                                    "hostname": {
                                      "description": "The name of the host that can be used as a conditional origin.\n",
                                      "type": "string"
                                    },
                                    "originId": {
                                      "description": "The conditional origin's unique identifier.\n",
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "The type of origin this conditional origin is set up as, in this case `NETSTORAGE`.\n",
                                      "enum": [
                                        "NETSTORAGE"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "hostname",
                                    "originId",
                                    "type"
                                  ],
                                  "title": "NETSTORAGE"
                                }
                              ],
                              "description": "Schema for a Cloudlets Origin.\n",
                              "x-akamai": {
                                "file-path": "schemas/origin.yaml"
                              }
                            },
                            "type": "array"
                          },
                          "referencedPolicies": {
                            "description": "The names of Cloudlets policies for this version of the property.\n",
                            "type": "string"
                          },
                          "version": {
                            "description": "The version number of the property.\n",
                            "type": "integer"
                          }
                        },
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/property.yaml"
                        }
                      },
                      "type": "array"
                    },
                    "production": {
                      "description": "Contains information about the property’s current configuration on the `production` network.\n",
                      "items": {
                        "additionalProperties": false,
                        "description": "Contains information about the newest property version and the property’s current configuration on the production and staging networks for a specific `policyId`.\n",
                        "properties": {
                          "activatedBy": {
                            "description": "The name of the user who activated property.\n",
                            "type": "string"
                          },
                          "activationDate": {
                            "description": "The date, in ISO 8601 format indicating when the property was activated.\n",
                            "format": "date",
                            "type": "string"
                          },
                          "cloudletsOrigins": {
                            "description": "Contains information about each conditional origin.\n",
                            "items": {
                              "anyOf": [
                                {
                                  "additionalProperties": false,
                                  "properties": {
                                    "checksum": {
                                      "description": "The checksum that distinguishes this conditional origin from any others that might share the same name.\n",
                                      "type": "string"
                                    },
                                    "description": {
                                      "description": "The description of the load balancing configuration provided by a user.\n",
                                      "type": "string"
                                    },
                                    "originId": {
                                      "description": "The conditional origin's unique identifier.\n",
                                      "maxLength": 63,
                                      "minLength": 2,
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "The type of origin this conditional origin is set up as. In this response the conditonal origin `type` is `APPLICATION_LOAD_BALANCER`.\n",
                                      "enum": [
                                        "APPLICATION_LOAD_BALANCER"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "title": "APPLICATION_LOAD_BALANCER"
                                },
                                {
                                  "additionalProperties": false,
                                  "properties": {
                                    "checksum": {
                                      "description": "The checksum that distinguishes this conditional origin from any others that might share the same name.\n",
                                      "type": "string"
                                    },
                                    "hostname": {
                                      "description": "The name of the host that can be used as a conditional origin.\n",
                                      "type": "string"
                                    },
                                    "originId": {
                                      "description": "The conditional origin's unique identifier.\n",
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "The type of origin this conditional origin is set up as, in this case `CUSTOMER`.\n",
                                      "enum": [
                                        "CUSTOMER"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "hostname",
                                    "originId",
                                    "type"
                                  ],
                                  "title": "CUSTOMER"
                                },
                                {
                                  "additionalProperties": false,
                                  "properties": {
                                    "checksum": {
                                      "description": "The checksum that distinguishes this conditional origin from any others that might share the same name.\n",
                                      "type": "string"
                                    },
                                    "hostname": {
                                      "description": "The name of the host that can be used as a conditional origin.\n",
                                      "type": "string"
                                    },
                                    "originId": {
                                      "description": "The conditional origin's unique identifier.\n",
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "The type of origin this conditional origin is set up as, in this case `NETSTORAGE`.\n",
                                      "enum": [
                                        "NETSTORAGE"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "hostname",
                                    "originId",
                                    "type"
                                  ],
                                  "title": "NETSTORAGE"
                                }
                              ],
                              "description": "Schema for a Cloudlets Origin.\n",
                              "x-akamai": {
                                "file-path": "schemas/origin.yaml"
                              }
                            },
                            "type": "array"
                          },
                          "referencedPolicies": {
                            "description": "The names of Cloudlets policies for this version of the property.\n",
                            "type": "string"
                          },
                          "version": {
                            "description": "The version number of the property.\n",
                            "type": "integer"
                          }
                        },
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/property.yaml"
                        }
                      },
                      "type": "array"
                    },
                    "staging": {
                      "description": "Contains information about the property’s current configuration on the `staging` network.\n",
                      "items": {
                        "additionalProperties": false,
                        "description": "Contains information about the newest property version and the property’s current configuration on the production and staging networks for a specific `policyId`.\n",
                        "properties": {
                          "activatedBy": {
                            "description": "The name of the user who activated property.\n",
                            "type": "string"
                          },
                          "activationDate": {
                            "description": "The date, in ISO 8601 format indicating when the property was activated.\n",
                            "format": "date",
                            "type": "string"
                          },
                          "cloudletsOrigins": {
                            "description": "Contains information about each conditional origin.\n",
                            "items": {
                              "anyOf": [
                                {
                                  "additionalProperties": false,
                                  "properties": {
                                    "checksum": {
                                      "description": "The checksum that distinguishes this conditional origin from any others that might share the same name.\n",
                                      "type": "string"
                                    },
                                    "description": {
                                      "description": "The description of the load balancing configuration provided by a user.\n",
                                      "type": "string"
                                    },
                                    "originId": {
                                      "description": "The conditional origin's unique identifier.\n",
                                      "maxLength": 63,
                                      "minLength": 2,
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "The type of origin this conditional origin is set up as. In this response the conditonal origin `type` is `APPLICATION_LOAD_BALANCER`.\n",
                                      "enum": [
                                        "APPLICATION_LOAD_BALANCER"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "title": "APPLICATION_LOAD_BALANCER"
                                },
                                {
                                  "additionalProperties": false,
                                  "properties": {
                                    "checksum": {
                                      "description": "The checksum that distinguishes this conditional origin from any others that might share the same name.\n",
                                      "type": "string"
                                    },
                                    "hostname": {
                                      "description": "The name of the host that can be used as a conditional origin.\n",
                                      "type": "string"
                                    },
                                    "originId": {
                                      "description": "The conditional origin's unique identifier.\n",
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "The type of origin this conditional origin is set up as, in this case `CUSTOMER`.\n",
                                      "enum": [
                                        "CUSTOMER"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "hostname",
                                    "originId",
                                    "type"
                                  ],
                                  "title": "CUSTOMER"
                                },
                                {
                                  "additionalProperties": false,
                                  "properties": {
                                    "checksum": {
                                      "description": "The checksum that distinguishes this conditional origin from any others that might share the same name.\n",
                                      "type": "string"
                                    },
                                    "hostname": {
                                      "description": "The name of the host that can be used as a conditional origin.\n",
                                      "type": "string"
                                    },
                                    "originId": {
                                      "description": "The conditional origin's unique identifier.\n",
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "The type of origin this conditional origin is set up as, in this case `NETSTORAGE`.\n",
                                      "enum": [
                                        "NETSTORAGE"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "hostname",
                                    "originId",
                                    "type"
                                  ],
                                  "title": "NETSTORAGE"
                                }
                              ],
                              "description": "Schema for a Cloudlets Origin.\n",
                              "x-akamai": {
                                "file-path": "schemas/origin.yaml"
                              }
                            },
                            "type": "array"
                          },
                          "referencedPolicies": {
                            "description": "The names of Cloudlets policies for this version of the property.\n",
                            "type": "string"
                          },
                          "version": {
                            "description": "The version number of the property.\n",
                            "type": "integer"
                          }
                        },
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/property.yaml"
                        }
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "groupId",
                    "name",
                    "newestVersion"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/get-properties-response.yaml"
                  }
                }
              }
            },
            "description": "Returns information about the associated properties.\n"
          }
        },
        "summary": "List associated properties",
        "tags": [
          "Associated properties"
        ]
      }
    }
  },
  "components": {
    "parameters": {
      "policyId-path": {
        "description": "The ID of the policy.\n",
        "in": "path",
        "name": "policyId",
        "required": true,
        "schema": {
          "example": 1001,
          "type": "integer"
        },
        "x-akamai": {
          "file-path": "parameters/policyId-path.yaml"
        }
      },
      "propertyId-path": {
        "description": "The ID of the property linked with the `policyId`. For the `propertyId` value, use the `id` value from the [Get associated properties for a policy](ref:get-policy-properties) response. \n",
        "in": "path",
        "name": "propertyId",
        "required": true,
        "schema": {
          "example": 987654321,
          "type": "integer"
        },
        "x-akamai": {
          "file-path": "parameters/propertyId-path.yaml"
        }
      },
      "network-query": {
        "description": "The selected network, either `staging` or `prod`.\n",
        "in": "query",
        "name": "network",
        "schema": {
          "enum": [
            "staging",
            "prod"
          ],
          "example": "staging",
          "type": "string"
        },
        "x-akamai": {
          "file-path": "parameters/network-query.yaml"
        }
      }
    },
    "schemas": {
      "albOrigin": {
        "additionalProperties": false,
        "properties": {
          "checksum": {
            "description": "The checksum that distinguishes this conditional origin from any others that might share the same name.\n",
            "type": "string"
          },
          "description": {
            "description": "The description of the load balancing configuration provided by a user.\n",
            "type": "string"
          },
          "originId": {
            "description": "The conditional origin's unique identifier.\n",
            "maxLength": 63,
            "minLength": 2,
            "type": "string"
          },
          "type": {
            "description": "The type of origin this conditional origin is set up as. In this response the conditonal origin `type` is `APPLICATION_LOAD_BALANCER`.\n",
            "enum": [
              "APPLICATION_LOAD_BALANCER"
            ],
            "type": "string"
          }
        },
        "title": "APPLICATION_LOAD_BALANCER"
      },
      "customerOrigin": {
        "additionalProperties": false,
        "properties": {
          "checksum": {
            "description": "The checksum that distinguishes this conditional origin from any others that might share the same name.\n",
            "type": "string"
          },
          "hostname": {
            "description": "The name of the host that can be used as a conditional origin.\n",
            "type": "string"
          },
          "originId": {
            "description": "The conditional origin's unique identifier.\n",
            "type": "string"
          },
          "type": {
            "description": "The type of origin this conditional origin is set up as, in this case `CUSTOMER`.\n",
            "enum": [
              "CUSTOMER"
            ],
            "type": "string"
          }
        },
        "required": [
          "hostname",
          "originId",
          "type"
        ],
        "title": "CUSTOMER"
      },
      "netStorageOrigin": {
        "additionalProperties": false,
        "properties": {
          "checksum": {
            "description": "The checksum that distinguishes this conditional origin from any others that might share the same name.\n",
            "type": "string"
          },
          "hostname": {
            "description": "The name of the host that can be used as a conditional origin.\n",
            "type": "string"
          },
          "originId": {
            "description": "The conditional origin's unique identifier.\n",
            "type": "string"
          },
          "type": {
            "description": "The type of origin this conditional origin is set up as, in this case `NETSTORAGE`.\n",
            "enum": [
              "NETSTORAGE"
            ],
            "type": "string"
          }
        },
        "required": [
          "hostname",
          "originId",
          "type"
        ],
        "title": "NETSTORAGE"
      },
      "origin": {
        "anyOf": [
          {
            "additionalProperties": false,
            "properties": {
              "checksum": {
                "description": "The checksum that distinguishes this conditional origin from any others that might share the same name.\n",
                "type": "string"
              },
              "description": {
                "description": "The description of the load balancing configuration provided by a user.\n",
                "type": "string"
              },
              "originId": {
                "description": "The conditional origin's unique identifier.\n",
                "maxLength": 63,
                "minLength": 2,
                "type": "string"
              },
              "type": {
                "description": "The type of origin this conditional origin is set up as. In this response the conditonal origin `type` is `APPLICATION_LOAD_BALANCER`.\n",
                "enum": [
                  "APPLICATION_LOAD_BALANCER"
                ],
                "type": "string"
              }
            },
            "title": "APPLICATION_LOAD_BALANCER"
          },
          {
            "additionalProperties": false,
            "properties": {
              "checksum": {
                "description": "The checksum that distinguishes this conditional origin from any others that might share the same name.\n",
                "type": "string"
              },
              "hostname": {
                "description": "The name of the host that can be used as a conditional origin.\n",
                "type": "string"
              },
              "originId": {
                "description": "The conditional origin's unique identifier.\n",
                "type": "string"
              },
              "type": {
                "description": "The type of origin this conditional origin is set up as, in this case `CUSTOMER`.\n",
                "enum": [
                  "CUSTOMER"
                ],
                "type": "string"
              }
            },
            "required": [
              "hostname",
              "originId",
              "type"
            ],
            "title": "CUSTOMER"
          },
          {
            "additionalProperties": false,
            "properties": {
              "checksum": {
                "description": "The checksum that distinguishes this conditional origin from any others that might share the same name.\n",
                "type": "string"
              },
              "hostname": {
                "description": "The name of the host that can be used as a conditional origin.\n",
                "type": "string"
              },
              "originId": {
                "description": "The conditional origin's unique identifier.\n",
                "type": "string"
              },
              "type": {
                "description": "The type of origin this conditional origin is set up as, in this case `NETSTORAGE`.\n",
                "enum": [
                  "NETSTORAGE"
                ],
                "type": "string"
              }
            },
            "required": [
              "hostname",
              "originId",
              "type"
            ],
            "title": "NETSTORAGE"
          }
        ],
        "description": "Schema for a Cloudlets Origin.\n",
        "x-akamai": {
          "file-path": "schemas/origin.yaml"
        }
      },
      "property": {
        "additionalProperties": false,
        "description": "Contains information about the newest property version and the property’s current configuration on the production and staging networks for a specific `policyId`.\n",
        "properties": {
          "activatedBy": {
            "description": "The name of the user who activated property.\n",
            "type": "string"
          },
          "activationDate": {
            "description": "The date, in ISO 8601 format indicating when the property was activated.\n",
            "format": "date",
            "type": "string"
          },
          "cloudletsOrigins": {
            "description": "Contains information about each conditional origin.\n",
            "items": {
              "anyOf": [
                {
                  "additionalProperties": false,
                  "properties": {
                    "checksum": {
                      "description": "The checksum that distinguishes this conditional origin from any others that might share the same name.\n",
                      "type": "string"
                    },
                    "description": {
                      "description": "The description of the load balancing configuration provided by a user.\n",
                      "type": "string"
                    },
                    "originId": {
                      "description": "The conditional origin's unique identifier.\n",
                      "maxLength": 63,
                      "minLength": 2,
                      "type": "string"
                    },
                    "type": {
                      "description": "The type of origin this conditional origin is set up as. In this response the conditonal origin `type` is `APPLICATION_LOAD_BALANCER`.\n",
                      "enum": [
                        "APPLICATION_LOAD_BALANCER"
                      ],
                      "type": "string"
                    }
                  },
                  "title": "APPLICATION_LOAD_BALANCER"
                },
                {
                  "additionalProperties": false,
                  "properties": {
                    "checksum": {
                      "description": "The checksum that distinguishes this conditional origin from any others that might share the same name.\n",
                      "type": "string"
                    },
                    "hostname": {
                      "description": "The name of the host that can be used as a conditional origin.\n",
                      "type": "string"
                    },
                    "originId": {
                      "description": "The conditional origin's unique identifier.\n",
                      "type": "string"
                    },
                    "type": {
                      "description": "The type of origin this conditional origin is set up as, in this case `CUSTOMER`.\n",
                      "enum": [
                        "CUSTOMER"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "hostname",
                    "originId",
                    "type"
                  ],
                  "title": "CUSTOMER"
                },
                {
                  "additionalProperties": false,
                  "properties": {
                    "checksum": {
                      "description": "The checksum that distinguishes this conditional origin from any others that might share the same name.\n",
                      "type": "string"
                    },
                    "hostname": {
                      "description": "The name of the host that can be used as a conditional origin.\n",
                      "type": "string"
                    },
                    "originId": {
                      "description": "The conditional origin's unique identifier.\n",
                      "type": "string"
                    },
                    "type": {
                      "description": "The type of origin this conditional origin is set up as, in this case `NETSTORAGE`.\n",
                      "enum": [
                        "NETSTORAGE"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "hostname",
                    "originId",
                    "type"
                  ],
                  "title": "NETSTORAGE"
                }
              ],
              "description": "Schema for a Cloudlets Origin.\n",
              "x-akamai": {
                "file-path": "schemas/origin.yaml"
              }
            },
            "type": "array"
          },
          "referencedPolicies": {
            "description": "The names of Cloudlets policies for this version of the property.\n",
            "type": "string"
          },
          "version": {
            "description": "The version number of the property.\n",
            "type": "integer"
          }
        },
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/property.yaml"
        }
      },
      "get-properties-response": {
        "additionalProperties": false,
        "description": "Contains information about the newest property version and the property’s current configuration on the production and staging networks.\n",
        "properties": {
          "groupId": {
            "description": "The group association for the property.\n",
            "type": "integer"
          },
          "id": {
            "description": "Unique identifier for the property.\n",
            "type": "integer"
          },
          "name": {
            "description": "The name of the property. This value also appears at the start of each separate property object.\n",
            "type": "string"
          },
          "newestVersion": {
            "description": "Contains information about the newest property version.\n",
            "items": {
              "additionalProperties": false,
              "description": "Contains information about the newest property version and the property’s current configuration on the production and staging networks for a specific `policyId`.\n",
              "properties": {
                "activatedBy": {
                  "description": "The name of the user who activated property.\n",
                  "type": "string"
                },
                "activationDate": {
                  "description": "The date, in ISO 8601 format indicating when the property was activated.\n",
                  "format": "date",
                  "type": "string"
                },
                "cloudletsOrigins": {
                  "description": "Contains information about each conditional origin.\n",
                  "items": {
                    "anyOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "checksum": {
                            "description": "The checksum that distinguishes this conditional origin from any others that might share the same name.\n",
                            "type": "string"
                          },
                          "description": {
                            "description": "The description of the load balancing configuration provided by a user.\n",
                            "type": "string"
                          },
                          "originId": {
                            "description": "The conditional origin's unique identifier.\n",
                            "maxLength": 63,
                            "minLength": 2,
                            "type": "string"
                          },
                          "type": {
                            "description": "The type of origin this conditional origin is set up as. In this response the conditonal origin `type` is `APPLICATION_LOAD_BALANCER`.\n",
                            "enum": [
                              "APPLICATION_LOAD_BALANCER"
                            ],
                            "type": "string"
                          }
                        },
                        "title": "APPLICATION_LOAD_BALANCER"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "checksum": {
                            "description": "The checksum that distinguishes this conditional origin from any others that might share the same name.\n",
                            "type": "string"
                          },
                          "hostname": {
                            "description": "The name of the host that can be used as a conditional origin.\n",
                            "type": "string"
                          },
                          "originId": {
                            "description": "The conditional origin's unique identifier.\n",
                            "type": "string"
                          },
                          "type": {
                            "description": "The type of origin this conditional origin is set up as, in this case `CUSTOMER`.\n",
                            "enum": [
                              "CUSTOMER"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "hostname",
                          "originId",
                          "type"
                        ],
                        "title": "CUSTOMER"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "checksum": {
                            "description": "The checksum that distinguishes this conditional origin from any others that might share the same name.\n",
                            "type": "string"
                          },
                          "hostname": {
                            "description": "The name of the host that can be used as a conditional origin.\n",
                            "type": "string"
                          },
                          "originId": {
                            "description": "The conditional origin's unique identifier.\n",
                            "type": "string"
                          },
                          "type": {
                            "description": "The type of origin this conditional origin is set up as, in this case `NETSTORAGE`.\n",
                            "enum": [
                              "NETSTORAGE"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "hostname",
                          "originId",
                          "type"
                        ],
                        "title": "NETSTORAGE"
                      }
                    ],
                    "description": "Schema for a Cloudlets Origin.\n",
                    "x-akamai": {
                      "file-path": "schemas/origin.yaml"
                    }
                  },
                  "type": "array"
                },
                "referencedPolicies": {
                  "description": "The names of Cloudlets policies for this version of the property.\n",
                  "type": "string"
                },
                "version": {
                  "description": "The version number of the property.\n",
                  "type": "integer"
                }
              },
              "type": "object",
              "x-akamai": {
                "file-path": "schemas/property.yaml"
              }
            },
            "type": "array"
          },
          "production": {
            "description": "Contains information about the property’s current configuration on the `production` network.\n",
            "items": {
              "additionalProperties": false,
              "description": "Contains information about the newest property version and the property’s current configuration on the production and staging networks for a specific `policyId`.\n",
              "properties": {
                "activatedBy": {
                  "description": "The name of the user who activated property.\n",
                  "type": "string"
                },
                "activationDate": {
                  "description": "The date, in ISO 8601 format indicating when the property was activated.\n",
                  "format": "date",
                  "type": "string"
                },
                "cloudletsOrigins": {
                  "description": "Contains information about each conditional origin.\n",
                  "items": {
                    "anyOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "checksum": {
                            "description": "The checksum that distinguishes this conditional origin from any others that might share the same name.\n",
                            "type": "string"
                          },
                          "description": {
                            "description": "The description of the load balancing configuration provided by a user.\n",
                            "type": "string"
                          },
                          "originId": {
                            "description": "The conditional origin's unique identifier.\n",
                            "maxLength": 63,
                            "minLength": 2,
                            "type": "string"
                          },
                          "type": {
                            "description": "The type of origin this conditional origin is set up as. In this response the conditonal origin `type` is `APPLICATION_LOAD_BALANCER`.\n",
                            "enum": [
                              "APPLICATION_LOAD_BALANCER"
                            ],
                            "type": "string"
                          }
                        },
                        "title": "APPLICATION_LOAD_BALANCER"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "checksum": {
                            "description": "The checksum that distinguishes this conditional origin from any others that might share the same name.\n",
                            "type": "string"
                          },
                          "hostname": {
                            "description": "The name of the host that can be used as a conditional origin.\n",
                            "type": "string"
                          },
                          "originId": {
                            "description": "The conditional origin's unique identifier.\n",
                            "type": "string"
                          },
                          "type": {
                            "description": "The type of origin this conditional origin is set up as, in this case `CUSTOMER`.\n",
                            "enum": [
                              "CUSTOMER"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "hostname",
                          "originId",
                          "type"
                        ],
                        "title": "CUSTOMER"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "checksum": {
                            "description": "The checksum that distinguishes this conditional origin from any others that might share the same name.\n",
                            "type": "string"
                          },
                          "hostname": {
                            "description": "The name of the host that can be used as a conditional origin.\n",
                            "type": "string"
                          },
                          "originId": {
                            "description": "The conditional origin's unique identifier.\n",
                            "type": "string"
                          },
                          "type": {
                            "description": "The type of origin this conditional origin is set up as, in this case `NETSTORAGE`.\n",
                            "enum": [
                              "NETSTORAGE"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "hostname",
                          "originId",
                          "type"
                        ],
                        "title": "NETSTORAGE"
                      }
                    ],
                    "description": "Schema for a Cloudlets Origin.\n",
                    "x-akamai": {
                      "file-path": "schemas/origin.yaml"
                    }
                  },
                  "type": "array"
                },
                "referencedPolicies": {
                  "description": "The names of Cloudlets policies for this version of the property.\n",
                  "type": "string"
                },
                "version": {
                  "description": "The version number of the property.\n",
                  "type": "integer"
                }
              },
              "type": "object",
              "x-akamai": {
                "file-path": "schemas/property.yaml"
              }
            },
            "type": "array"
          },
          "staging": {
            "description": "Contains information about the property’s current configuration on the `staging` network.\n",
            "items": {
              "additionalProperties": false,
              "description": "Contains information about the newest property version and the property’s current configuration on the production and staging networks for a specific `policyId`.\n",
              "properties": {
                "activatedBy": {
                  "description": "The name of the user who activated property.\n",
                  "type": "string"
                },
                "activationDate": {
                  "description": "The date, in ISO 8601 format indicating when the property was activated.\n",
                  "format": "date",
                  "type": "string"
                },
                "cloudletsOrigins": {
                  "description": "Contains information about each conditional origin.\n",
                  "items": {
                    "anyOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "checksum": {
                            "description": "The checksum that distinguishes this conditional origin from any others that might share the same name.\n",
                            "type": "string"
                          },
                          "description": {
                            "description": "The description of the load balancing configuration provided by a user.\n",
                            "type": "string"
                          },
                          "originId": {
                            "description": "The conditional origin's unique identifier.\n",
                            "maxLength": 63,
                            "minLength": 2,
                            "type": "string"
                          },
                          "type": {
                            "description": "The type of origin this conditional origin is set up as. In this response the conditonal origin `type` is `APPLICATION_LOAD_BALANCER`.\n",
                            "enum": [
                              "APPLICATION_LOAD_BALANCER"
                            ],
                            "type": "string"
                          }
                        },
                        "title": "APPLICATION_LOAD_BALANCER"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "checksum": {
                            "description": "The checksum that distinguishes this conditional origin from any others that might share the same name.\n",
                            "type": "string"
                          },
                          "hostname": {
                            "description": "The name of the host that can be used as a conditional origin.\n",
                            "type": "string"
                          },
                          "originId": {
                            "description": "The conditional origin's unique identifier.\n",
                            "type": "string"
                          },
                          "type": {
                            "description": "The type of origin this conditional origin is set up as, in this case `CUSTOMER`.\n",
                            "enum": [
                              "CUSTOMER"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "hostname",
                          "originId",
                          "type"
                        ],
                        "title": "CUSTOMER"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "checksum": {
                            "description": "The checksum that distinguishes this conditional origin from any others that might share the same name.\n",
                            "type": "string"
                          },
                          "hostname": {
                            "description": "The name of the host that can be used as a conditional origin.\n",
                            "type": "string"
                          },
                          "originId": {
                            "description": "The conditional origin's unique identifier.\n",
                            "type": "string"
                          },
                          "type": {
                            "description": "The type of origin this conditional origin is set up as, in this case `NETSTORAGE`.\n",
                            "enum": [
                              "NETSTORAGE"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "hostname",
                          "originId",
                          "type"
                        ],
                        "title": "NETSTORAGE"
                      }
                    ],
                    "description": "Schema for a Cloudlets Origin.\n",
                    "x-akamai": {
                      "file-path": "schemas/origin.yaml"
                    }
                  },
                  "type": "array"
                },
                "referencedPolicies": {
                  "description": "The names of Cloudlets policies for this version of the property.\n",
                  "type": "string"
                },
                "version": {
                  "description": "The version number of the property.\n",
                  "type": "integer"
                }
              },
              "type": "object",
              "x-akamai": {
                "file-path": "schemas/property.yaml"
              }
            },
            "type": "array"
          }
        },
        "required": [
          "groupId",
          "name",
          "newestVersion"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/get-properties-response.yaml"
        }
      }
    }
  },
  "x-akamai": {
    "auth-type": "EDGE_GRID",
    "file-path": "property-info.yaml"
  }
}