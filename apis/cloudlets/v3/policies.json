{
  "openapi": "3.0.0",
  "info": {
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "title": "Policies",
    "version": "v2"
  },
  "servers": [
    {
      "url": "https://{hostname}/cloudlets/api/v2"
    }
  ],
  "paths": {
    "/policies": {
      "get": {
        "description": "Returns information for all available policies.\n",
        "operationId": "get-policies",
        "parameters": [
          {
            "description": "For GET operations, includes deleted policies in the results.\n",
            "in": "query",
            "name": "includeDeleted",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/includeDeleted-query.yaml"
            }
          },
          {
            "description": "For GET operations, returns only policies for this particular `cloudletId`. The `cloudletId` for Edge Redirector is `0`, Visitor Prioritization is `1`, Forward Rewrite is `3`, Request Control is `4`, API Prioritization is `5`, Audience Segmentation is `6`, Phased Release is `7`, and Application Load Balancer is `9`.\n",
            "in": "query",
            "name": "cloudletId",
            "schema": {
              "enum": [
                0,
                1,
                3,
                4,
                5,
                6,
                7,
                9
              ],
              "example": 0,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/cloudletId-query.yaml"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "location": "/cloudlets/api/v2/policies/1001",
                    "serviceVersion": null,
                    "apiVersion": "2.0",
                    "policyId": 1001,
                    "cloudletId": 99,
                    "cloudletCode": "CC",
                    "groupId": 12345,
                    "name": "CookieCutter",
                    "description": "Custom cookie cutter",
                    "propertyName": "www.example.org",
                    "createdBy": "jperez",
                    "createDate": 1400535431324,
                    "lastModifiedBy": "jsmith",
                    "lastModifiedDate": 1441829042000,
                    "activations": [
                      {
                        "serviceVersion": null,
                        "apiVersion": "2.0",
                        "network": "prod",
                        "policyInfo": {
                          "policyId": 1001,
                          "name": "CookieCutter",
                          "version": 2,
                          "status": "INACTIVE",
                          "statusDetail": "waiting to complete tests in test environment",
                          "detailCode": 0,
                          "activatedBy": "jsmith",
                          "activationDate": 1441829042000
                        },
                        "propertyInfo": {
                          "name": "www.example.org",
                          "version": 2,
                          "groupId": 54321,
                          "status": "INACTIVE",
                          "activatedBy": "adevi",
                          "activationDate": 1441137842000,
                          "id": 892212
                        }
                      },
                      {
                        "serviceVersion": null,
                        "apiVersion": "2.0",
                        "network": "test",
                        "policyInfo": {
                          "policyId": 1001,
                          "name": "CookieCutter",
                          "version": 22,
                          "status": "ACTIVE",
                          "statusDetail": "testing",
                          "detailCode": 0,
                          "activatedBy": "jsmith",
                          "activationDate": 1400535431000
                        },
                        "propertyInfo": {
                          "name": "www.example.org",
                          "version": 22,
                          "groupId": 12345,
                          "status": "ACTIVE",
                          "activatedBy": "jsmith",
                          "activationDate": 1441137842000,
                          "id": 5333913
                        }
                      }
                    ]
                  }
                ],
                "schema": {
                  "description": "Policy details and information on each policy's properties.\n",
                  "items": {
                    "additionalProperties": false,
                    "description": "Returns details of a policy.\n",
                    "properties": {
                      "activations": {
                        "description": "List of activations associated with the policy.\n",
                        "items": {
                          "additionalProperties": false,
                          "description": "Returns details of a policy activation.\n",
                          "properties": {
                            "apiVersion": {
                              "description": "The specific version of this API.\n",
                              "type": "string"
                            },
                            "network": {
                              "description": "The network, either `STAGING`, `PRODUCTION`, or `prod` as shorthand, on which a load balancing configuration for Application Load Balancer has been activated. Values are case-insensitive in requests.\n",
                              "enum": [
                                "prod",
                                "staging"
                              ],
                              "type": "string"
                            },
                            "policyInfo": {
                              "additionalProperties": false,
                              "description": "Returns details of a policy associated with policy activation.\n",
                              "properties": {
                                "activatedBy": {
                                  "description": "User name who issued the activation.\n",
                                  "type": "string"
                                },
                                "activationDate": {
                                  "description": "Date of the activation in milliseconds.\n",
                                  "type": "integer"
                                },
                                "name": {
                                  "description": "Name of the policy.\n",
                                  "type": "string"
                                },
                                "policyId": {
                                  "description": "ID of the policy.\n",
                                  "type": "integer"
                                },
                                "status": {
                                  "description": "Value representing activation status.\n",
                                  "enum": [
                                    "INACTIVE",
                                    "PENDING",
                                    "ACTIVE",
                                    "FAILED",
                                    "DEACTIVATED"
                                  ],
                                  "type": "string",
                                  "x-akamai": {
                                    "file-path": "schemas/activation-status-enum.yaml"
                                  }
                                },
                                "statusDetail": {
                                  "description": "Details of the activation status.\n",
                                  "type": "string"
                                },
                                "version": {
                                  "description": "Version of the policy.\n",
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "policyId",
                                "name",
                                "version",
                                "status",
                                "statusDetail",
                                "activatedBy",
                                "activationDate"
                              ],
                              "type": "object",
                              "x-akamai": {
                                "file-path": "schemas/policy-activation-policy-info.yaml"
                              }
                            },
                            "propertyInfo": {
                              "additionalProperties": false,
                              "description": "Returns details of a property associated with policy activation.\n",
                              "properties": {
                                "activatedBy": {
                                  "description": "User name who issued the activation.\n",
                                  "type": "string"
                                },
                                "activationDate": {
                                  "description": "Date of the activation in milliseconds.\n",
                                  "type": "integer"
                                },
                                "groupId": {
                                  "description": "Identifies the group where the property is placed.\n",
                                  "type": "integer"
                                },
                                "id": {
                                  "description": "ID of the property.\n",
                                  "type": "integer"
                                },
                                "name": {
                                  "description": "Name of the property.\n",
                                  "type": "string"
                                },
                                "status": {
                                  "description": "Value representing activation status.\n",
                                  "enum": [
                                    "INACTIVE",
                                    "PENDING",
                                    "ACTIVE",
                                    "FAILED",
                                    "DEACTIVATED"
                                  ],
                                  "type": "string",
                                  "x-akamai": {
                                    "file-path": "schemas/activation-status-enum.yaml"
                                  }
                                },
                                "version": {
                                  "description": "Version of the property.\n",
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "name",
                                "version",
                                "groupId",
                                "status",
                                "activatedBy",
                                "activationDate",
                                "id"
                              ],
                              "type": "object",
                              "x-akamai": {
                                "file-path": "schemas/policy-activation-property-info.yaml"
                              }
                            },
                            "serviceVersion": {
                              "description": "__Deprecated__ __Deprecated__ The build of the software running on the server. The value can be `null`.\n",
                              "nullable": true,
                              "type": "string",
                              "x-akamai": {
                                "status": "DEPRECATED"
                              }
                            }
                          },
                          "required": [
                            "network",
                            "policyInfo",
                            "propertyInfo"
                          ],
                          "type": "object",
                          "x-akamai": {
                            "file-path": "schemas/policy-activation.yaml"
                          }
                        },
                        "type": "array"
                      },
                      "apiVersion": {
                        "description": "The specific version of this API.\n",
                        "type": "string"
                      },
                      "cloudletCode": {
                        "description": "The type of Cloudlet that this policy is for. To see the available Cloudlets, run the [List Cloudlets](ref:get-cloudlets) operation. Possible values include: `ALB` for Application Load Balancer, `AP` for API Prioritization, `AS` for Audience Segmentation, `CD` for Phased Release, `ER` for Edge Redirector, `FR` for Forward Rewrite, `IG` for Request Control, and `VP` for Visitor Prioritization.\n",
                        "enum": [
                          "ALB",
                          "AP",
                          "AS",
                          "CD",
                          "ER",
                          "FR",
                          "IG",
                          "VP"
                        ],
                        "type": "string",
                        "x-akamai": {
                          "file-path": "schemas/cloudlet-code-enum.yaml"
                        }
                      },
                      "cloudletId": {
                        "description": "The ID of cloudlet that this policy is for. The `cloudletId` for Edge Redirector is `0`, Visitor Prioritization is `1`, Forward Rewrite is `3`, Request Control is `4`, API Prioritization is `5`, Audience Segmentation is `6`, Phased Release is `7`, and Application Load Balancer is `9`. To see the available Cloudlets, run the [List Cloudlets](ref:get-cloudlets) operation.\n",
                        "enum": [
                          0,
                          1,
                          3,
                          4,
                          5,
                          6,
                          7,
                          9
                        ],
                        "type": "integer"
                      },
                      "createDate": {
                        "description": "Date of the policy creation in milliseconds.\n",
                        "type": "integer"
                      },
                      "createdBy": {
                        "description": "User name who created the policy.\n",
                        "type": "string"
                      },
                      "deleted": {
                        "description": "Flag determining whether the policy is deleted or not.\n",
                        "type": "boolean"
                      },
                      "description": {
                        "description": "The description of the policy.\n",
                        "type": "string"
                      },
                      "groupId": {
                        "description": "The ID of the group this policy is associated with.\n",
                        "type": "integer"
                      },
                      "lastModifiedBy": {
                        "description": "User name who recently modified the policy.\n",
                        "type": "string"
                      },
                      "lastModifiedDate": {
                        "description": "Date of the recent policy modification in milliseconds.\n",
                        "type": "integer"
                      },
                      "location": {
                        "description": "The navigable endpoint used for the object referred to in the operation.\n",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the policy.\n",
                        "type": "string"
                      },
                      "policyId": {
                        "description": "ID of the policy.\n",
                        "type": "integer"
                      },
                      "propertyName": {
                        "deprecated": true,
                        "description": "This field now only returns `null`. It does not reflect the properties currently associated with this Cloudlets policy.\n",
                        "nullable": true,
                        "type": "string"
                      },
                      "serviceVersion": {
                        "description": "__Deprecated__ __Deprecated__ The build of the software running on the server. The value can be `null`.\n",
                        "nullable": true,
                        "type": "string",
                        "x-akamai": {
                          "status": "DEPRECATED"
                        }
                      }
                    },
                    "required": [
                      "policyId",
                      "cloudletId",
                      "cloudletCode",
                      "groupId",
                      "name",
                      "description",
                      "createdBy",
                      "createdDate",
                      "lastModifiedBy",
                      "lastModifiedDate",
                      "activations",
                      "location"
                    ],
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/policy.yaml"
                    }
                  },
                  "type": "array",
                  "x-akamai": {
                    "file-path": "schemas/get-policies-response.yaml"
                  }
                }
              }
            },
            "description": "Return list of policies.\n"
          }
        },
        "summary": "List policies",
        "tags": [
          "Policies"
        ]
      },
      "post": {
        "description": "Create a new Cloudlet policy. If a policy already exists with the same policy name, you receive a 409 (Conflict) status response that contains data for the existing policy. New policies are automatically assigned version number 1.\n",
        "operationId": "post-policy",
        "parameters": [
          {
            "description": "If cloning an existing policy, this parameter is the ID of the policy (`policyId`) you want to clone. If there are attributes that you do _not_ want propagated from the source policy, you must provide the new values in the request.\n",
            "in": "query",
            "name": "clonePolicyId",
            "schema": {
              "example": 1001,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/clonePolicyId-query.yaml"
            }
          },
          {
            "description": "For POST operations, indicates the version of the existing policy to use for the new policy.  If not specified, the latest version of the existing policy is copied.\n",
            "in": "query",
            "name": "version",
            "schema": {
              "example": 2,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/version-query.yaml"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "cloudletId": 0,
                "description": "Testing the creation of a policy",
                "groupId": 12345,
                "name": "TestCreatePolicy1"
              },
              "schema": {
                "additionalProperties": false,
                "description": "TBD.\n",
                "properties": {
                  "cloudletId": {
                    "description": "The ID of cloudlet that this policy is for. The `cloudletId` for Edge Redirector is `0`, Visitor Prioritization is `1`, Forward Rewrite is `3`, Request Control is `4`, API Prioritization is `5`, Audience Segmentation is `6`, Phased Release is `7`, and Application Load Balancer is `9`. To see the available Cloudlets, run the [List Cloudlets](ref:get-cloudlets) operation.\n",
                    "enum": [
                      0,
                      1,
                      3,
                      4,
                      5,
                      6,
                      7,
                      9
                    ],
                    "type": "integer"
                  },
                  "description": {
                    "description": "Description of the policy.\n",
                    "type": "string"
                  },
                  "groupId": {
                    "description": "The group to place the policy in.\n",
                    "type": "integer"
                  },
                  "name": {
                    "description": "Name of the policy.\n",
                    "type": "string"
                  }
                },
                "required": [
                  "cloudletId",
                  "name"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/post-policies-request.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": {
                  "location": "/cloudlets/api/v2/policies/1002",
                  "serviceVersion": null,
                  "apiVersion": "2.0",
                  "policyId": 1000,
                  "cloudletId": 0,
                  "cloudletCode": "ER",
                  "groupId": 32145,
                  "name": "TestCreatePolicy1",
                  "description": "Testing the creation of a policy",
                  "deleted": false,
                  "propertyName": null,
                  "createdBy": "adevi",
                  "createDate": 1428957069841,
                  "lastModifiedBy": "jsmith",
                  "lastModifiedDate": 1428957070000,
                  "activations": []
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Returns details of a policy.\n",
                  "properties": {
                    "activations": {
                      "description": "List of activations associated with the policy.\n",
                      "items": {
                        "additionalProperties": false,
                        "description": "Returns details of a policy activation.\n",
                        "properties": {
                          "apiVersion": {
                            "description": "The specific version of this API.\n",
                            "type": "string"
                          },
                          "network": {
                            "description": "The network, either `STAGING`, `PRODUCTION`, or `prod` as shorthand, on which a load balancing configuration for Application Load Balancer has been activated. Values are case-insensitive in requests.\n",
                            "enum": [
                              "prod",
                              "staging"
                            ],
                            "type": "string"
                          },
                          "policyInfo": {
                            "additionalProperties": false,
                            "description": "Returns details of a policy associated with policy activation.\n",
                            "properties": {
                              "activatedBy": {
                                "description": "User name who issued the activation.\n",
                                "type": "string"
                              },
                              "activationDate": {
                                "description": "Date of the activation in milliseconds.\n",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name of the policy.\n",
                                "type": "string"
                              },
                              "policyId": {
                                "description": "ID of the policy.\n",
                                "type": "integer"
                              },
                              "status": {
                                "description": "Value representing activation status.\n",
                                "enum": [
                                  "INACTIVE",
                                  "PENDING",
                                  "ACTIVE",
                                  "FAILED",
                                  "DEACTIVATED"
                                ],
                                "type": "string",
                                "x-akamai": {
                                  "file-path": "schemas/activation-status-enum.yaml"
                                }
                              },
                              "statusDetail": {
                                "description": "Details of the activation status.\n",
                                "type": "string"
                              },
                              "version": {
                                "description": "Version of the policy.\n",
                                "type": "integer"
                              }
                            },
                            "required": [
                              "policyId",
                              "name",
                              "version",
                              "status",
                              "statusDetail",
                              "activatedBy",
                              "activationDate"
                            ],
                            "type": "object",
                            "x-akamai": {
                              "file-path": "schemas/policy-activation-policy-info.yaml"
                            }
                          },
                          "propertyInfo": {
                            "additionalProperties": false,
                            "description": "Returns details of a property associated with policy activation.\n",
                            "properties": {
                              "activatedBy": {
                                "description": "User name who issued the activation.\n",
                                "type": "string"
                              },
                              "activationDate": {
                                "description": "Date of the activation in milliseconds.\n",
                                "type": "integer"
                              },
                              "groupId": {
                                "description": "Identifies the group where the property is placed.\n",
                                "type": "integer"
                              },
                              "id": {
                                "description": "ID of the property.\n",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name of the property.\n",
                                "type": "string"
                              },
                              "status": {
                                "description": "Value representing activation status.\n",
                                "enum": [
                                  "INACTIVE",
                                  "PENDING",
                                  "ACTIVE",
                                  "FAILED",
                                  "DEACTIVATED"
                                ],
                                "type": "string",
                                "x-akamai": {
                                  "file-path": "schemas/activation-status-enum.yaml"
                                }
                              },
                              "version": {
                                "description": "Version of the property.\n",
                                "type": "integer"
                              }
                            },
                            "required": [
                              "name",
                              "version",
                              "groupId",
                              "status",
                              "activatedBy",
                              "activationDate",
                              "id"
                            ],
                            "type": "object",
                            "x-akamai": {
                              "file-path": "schemas/policy-activation-property-info.yaml"
                            }
                          },
                          "serviceVersion": {
                            "description": "__Deprecated__ __Deprecated__ The build of the software running on the server. The value can be `null`.\n",
                            "nullable": true,
                            "type": "string",
                            "x-akamai": {
                              "status": "DEPRECATED"
                            }
                          }
                        },
                        "required": [
                          "network",
                          "policyInfo",
                          "propertyInfo"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/policy-activation.yaml"
                        }
                      },
                      "type": "array"
                    },
                    "apiVersion": {
                      "description": "The specific version of this API.\n",
                      "type": "string"
                    },
                    "cloudletCode": {
                      "description": "The type of Cloudlet that this policy is for. To see the available Cloudlets, run the [List Cloudlets](ref:get-cloudlets) operation. Possible values include: `ALB` for Application Load Balancer, `AP` for API Prioritization, `AS` for Audience Segmentation, `CD` for Phased Release, `ER` for Edge Redirector, `FR` for Forward Rewrite, `IG` for Request Control, and `VP` for Visitor Prioritization.\n",
                      "enum": [
                        "ALB",
                        "AP",
                        "AS",
                        "CD",
                        "ER",
                        "FR",
                        "IG",
                        "VP"
                      ],
                      "type": "string",
                      "x-akamai": {
                        "file-path": "schemas/cloudlet-code-enum.yaml"
                      }
                    },
                    "cloudletId": {
                      "description": "The ID of cloudlet that this policy is for. The `cloudletId` for Edge Redirector is `0`, Visitor Prioritization is `1`, Forward Rewrite is `3`, Request Control is `4`, API Prioritization is `5`, Audience Segmentation is `6`, Phased Release is `7`, and Application Load Balancer is `9`. To see the available Cloudlets, run the [List Cloudlets](ref:get-cloudlets) operation.\n",
                      "enum": [
                        0,
                        1,
                        3,
                        4,
                        5,
                        6,
                        7,
                        9
                      ],
                      "type": "integer"
                    },
                    "createDate": {
                      "description": "Date of the policy creation in milliseconds.\n",
                      "type": "integer"
                    },
                    "createdBy": {
                      "description": "User name who created the policy.\n",
                      "type": "string"
                    },
                    "deleted": {
                      "description": "Flag determining whether the policy is deleted or not.\n",
                      "type": "boolean"
                    },
                    "description": {
                      "description": "The description of the policy.\n",
                      "type": "string"
                    },
                    "groupId": {
                      "description": "The ID of the group this policy is associated with.\n",
                      "type": "integer"
                    },
                    "lastModifiedBy": {
                      "description": "User name who recently modified the policy.\n",
                      "type": "string"
                    },
                    "lastModifiedDate": {
                      "description": "Date of the recent policy modification in milliseconds.\n",
                      "type": "integer"
                    },
                    "location": {
                      "description": "The navigable endpoint used for the object referred to in the operation.\n",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the policy.\n",
                      "type": "string"
                    },
                    "policyId": {
                      "description": "ID of the policy.\n",
                      "type": "integer"
                    },
                    "propertyName": {
                      "deprecated": true,
                      "description": "This field now only returns `null`. It does not reflect the properties currently associated with this Cloudlets policy.\n",
                      "nullable": true,
                      "type": "string"
                    },
                    "serviceVersion": {
                      "description": "__Deprecated__ __Deprecated__ The build of the software running on the server. The value can be `null`.\n",
                      "nullable": true,
                      "type": "string",
                      "x-akamai": {
                        "status": "DEPRECATED"
                      }
                    }
                  },
                  "required": [
                    "policyId",
                    "cloudletId",
                    "cloudletCode",
                    "groupId",
                    "name",
                    "description",
                    "createdBy",
                    "createdDate",
                    "lastModifiedBy",
                    "lastModifiedDate",
                    "activations",
                    "location"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/policy.yaml"
                  }
                }
              }
            },
            "description": "The Cloudlet policy was created.\n"
          }
        },
        "summary": "Create a policy",
        "tags": [
          "Policies"
        ]
      }
    },
    "/policies/{policyId}": {
      "delete": {
        "description": "Deletes an existing Cloudlets policy.\n",
        "operationId": "delete-policy",
        "responses": {
          "204": {
            "description": "The Cloudlet policy is deleted.\n"
          }
        },
        "summary": "Remove a policy",
        "tags": [
          "Policies"
        ]
      },
      "get": {
        "description": "Returns information about a specific Cloudlets policy.\n",
        "operationId": "get-policy",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "location": "/cloudlets/api/v2/policies/1001",
                  "serviceVersion": null,
                  "apiVersion": "2.0",
                  "policyId": 1001,
                  "cloudletId": 99,
                  "cloudletCode": "CC",
                  "groupId": 32145,
                  "name": "CookieCutter",
                  "description": "Custom cookie cutter",
                  "propertyName": "www.example.org",
                  "createdBy": "jsmith",
                  "createDate": 1428957070000,
                  "lastModifiedBy": "hgildong",
                  "lastModifiedDate": 1441829042000,
                  "activations": [
                    {
                      "serviceVersion": null,
                      "apiVersion": "2.0",
                      "network": "prod",
                      "policyInfo": {
                        "policyId": 1001,
                        "name": "CookieCutter",
                        "version": 2,
                        "status": "INACTIVE",
                        "detailCode": 0,
                        "activatedBy": "jsmith",
                        "activationDate": 1433901173000
                      },
                      "propertyInfo": {
                        "name": "www.example.org",
                        "version": 2,
                        "groupId": 32145,
                        "status": "INACTIVE",
                        "activatedBy": "mrossi",
                        "activationDate": 1441829042000,
                        "id": 1846234
                      }
                    },
                    {
                      "serviceVersion": null,
                      "apiVersion": "2.0",
                      "network": "staging",
                      "policyInfo": {
                        "policyId": 1001,
                        "name": "CookieCutter",
                        "version": 22,
                        "status": "ACTIVE",
                        "detailCode": 0,
                        "activatedBy": "jsmith",
                        "activationDate": 1433901173000
                      },
                      "propertyInfo": {
                        "name": "www.example.org",
                        "version": 22,
                        "groupId": 32145,
                        "status": "ACTIVE",
                        "activatedBy": "jsmith",
                        "activationDate": 1441915442000,
                        "id": 10489133
                      }
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Returns details of a policy.\n",
                  "properties": {
                    "activations": {
                      "description": "List of activations associated with the policy.\n",
                      "items": {
                        "additionalProperties": false,
                        "description": "Returns details of a policy activation.\n",
                        "properties": {
                          "apiVersion": {
                            "description": "The specific version of this API.\n",
                            "type": "string"
                          },
                          "network": {
                            "description": "The network, either `STAGING`, `PRODUCTION`, or `prod` as shorthand, on which a load balancing configuration for Application Load Balancer has been activated. Values are case-insensitive in requests.\n",
                            "enum": [
                              "prod",
                              "staging"
                            ],
                            "type": "string"
                          },
                          "policyInfo": {
                            "additionalProperties": false,
                            "description": "Returns details of a policy associated with policy activation.\n",
                            "properties": {
                              "activatedBy": {
                                "description": "User name who issued the activation.\n",
                                "type": "string"
                              },
                              "activationDate": {
                                "description": "Date of the activation in milliseconds.\n",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name of the policy.\n",
                                "type": "string"
                              },
                              "policyId": {
                                "description": "ID of the policy.\n",
                                "type": "integer"
                              },
                              "status": {
                                "description": "Value representing activation status.\n",
                                "enum": [
                                  "INACTIVE",
                                  "PENDING",
                                  "ACTIVE",
                                  "FAILED",
                                  "DEACTIVATED"
                                ],
                                "type": "string",
                                "x-akamai": {
                                  "file-path": "schemas/activation-status-enum.yaml"
                                }
                              },
                              "statusDetail": {
                                "description": "Details of the activation status.\n",
                                "type": "string"
                              },
                              "version": {
                                "description": "Version of the policy.\n",
                                "type": "integer"
                              }
                            },
                            "required": [
                              "policyId",
                              "name",
                              "version",
                              "status",
                              "statusDetail",
                              "activatedBy",
                              "activationDate"
                            ],
                            "type": "object",
                            "x-akamai": {
                              "file-path": "schemas/policy-activation-policy-info.yaml"
                            }
                          },
                          "propertyInfo": {
                            "additionalProperties": false,
                            "description": "Returns details of a property associated with policy activation.\n",
                            "properties": {
                              "activatedBy": {
                                "description": "User name who issued the activation.\n",
                                "type": "string"
                              },
                              "activationDate": {
                                "description": "Date of the activation in milliseconds.\n",
                                "type": "integer"
                              },
                              "groupId": {
                                "description": "Identifies the group where the property is placed.\n",
                                "type": "integer"
                              },
                              "id": {
                                "description": "ID of the property.\n",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name of the property.\n",
                                "type": "string"
                              },
                              "status": {
                                "description": "Value representing activation status.\n",
                                "enum": [
                                  "INACTIVE",
                                  "PENDING",
                                  "ACTIVE",
                                  "FAILED",
                                  "DEACTIVATED"
                                ],
                                "type": "string",
                                "x-akamai": {
                                  "file-path": "schemas/activation-status-enum.yaml"
                                }
                              },
                              "version": {
                                "description": "Version of the property.\n",
                                "type": "integer"
                              }
                            },
                            "required": [
                              "name",
                              "version",
                              "groupId",
                              "status",
                              "activatedBy",
                              "activationDate",
                              "id"
                            ],
                            "type": "object",
                            "x-akamai": {
                              "file-path": "schemas/policy-activation-property-info.yaml"
                            }
                          },
                          "serviceVersion": {
                            "description": "__Deprecated__ __Deprecated__ The build of the software running on the server. The value can be `null`.\n",
                            "nullable": true,
                            "type": "string",
                            "x-akamai": {
                              "status": "DEPRECATED"
                            }
                          }
                        },
                        "required": [
                          "network",
                          "policyInfo",
                          "propertyInfo"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/policy-activation.yaml"
                        }
                      },
                      "type": "array"
                    },
                    "apiVersion": {
                      "description": "The specific version of this API.\n",
                      "type": "string"
                    },
                    "cloudletCode": {
                      "description": "The type of Cloudlet that this policy is for. To see the available Cloudlets, run the [List Cloudlets](ref:get-cloudlets) operation. Possible values include: `ALB` for Application Load Balancer, `AP` for API Prioritization, `AS` for Audience Segmentation, `CD` for Phased Release, `ER` for Edge Redirector, `FR` for Forward Rewrite, `IG` for Request Control, and `VP` for Visitor Prioritization.\n",
                      "enum": [
                        "ALB",
                        "AP",
                        "AS",
                        "CD",
                        "ER",
                        "FR",
                        "IG",
                        "VP"
                      ],
                      "type": "string",
                      "x-akamai": {
                        "file-path": "schemas/cloudlet-code-enum.yaml"
                      }
                    },
                    "cloudletId": {
                      "description": "The ID of cloudlet that this policy is for. The `cloudletId` for Edge Redirector is `0`, Visitor Prioritization is `1`, Forward Rewrite is `3`, Request Control is `4`, API Prioritization is `5`, Audience Segmentation is `6`, Phased Release is `7`, and Application Load Balancer is `9`. To see the available Cloudlets, run the [List Cloudlets](ref:get-cloudlets) operation.\n",
                      "enum": [
                        0,
                        1,
                        3,
                        4,
                        5,
                        6,
                        7,
                        9
                      ],
                      "type": "integer"
                    },
                    "createDate": {
                      "description": "Date of the policy creation in milliseconds.\n",
                      "type": "integer"
                    },
                    "createdBy": {
                      "description": "User name who created the policy.\n",
                      "type": "string"
                    },
                    "deleted": {
                      "description": "Flag determining whether the policy is deleted or not.\n",
                      "type": "boolean"
                    },
                    "description": {
                      "description": "The description of the policy.\n",
                      "type": "string"
                    },
                    "groupId": {
                      "description": "The ID of the group this policy is associated with.\n",
                      "type": "integer"
                    },
                    "lastModifiedBy": {
                      "description": "User name who recently modified the policy.\n",
                      "type": "string"
                    },
                    "lastModifiedDate": {
                      "description": "Date of the recent policy modification in milliseconds.\n",
                      "type": "integer"
                    },
                    "location": {
                      "description": "The navigable endpoint used for the object referred to in the operation.\n",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the policy.\n",
                      "type": "string"
                    },
                    "policyId": {
                      "description": "ID of the policy.\n",
                      "type": "integer"
                    },
                    "propertyName": {
                      "deprecated": true,
                      "description": "This field now only returns `null`. It does not reflect the properties currently associated with this Cloudlets policy.\n",
                      "nullable": true,
                      "type": "string"
                    },
                    "serviceVersion": {
                      "description": "__Deprecated__ __Deprecated__ The build of the software running on the server. The value can be `null`.\n",
                      "nullable": true,
                      "type": "string",
                      "x-akamai": {
                        "status": "DEPRECATED"
                      }
                    }
                  },
                  "required": [
                    "policyId",
                    "cloudletId",
                    "cloudletCode",
                    "groupId",
                    "name",
                    "description",
                    "createdBy",
                    "createdDate",
                    "lastModifiedBy",
                    "lastModifiedDate",
                    "activations",
                    "location"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/policy.yaml"
                  }
                }
              }
            },
            "description": "Provides data for the Cloudlets policy.\n"
          }
        },
        "summary": "Get a policy",
        "tags": [
          "Policies"
        ]
      },
      "parameters": [
        {
          "description": "The ID of the policy.\n",
          "in": "path",
          "name": "policyId",
          "required": true,
          "schema": {
            "example": 1001,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/policyId-path.yaml"
          }
        }
      ],
      "put": {
        "description": "Update attributes of an existing policy.\n",
        "operationId": "put-policy",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "description": "Testing the update of a policy"
              },
              "schema": {
                "additionalProperties": false,
                "description": "TBD.\n",
                "minProperties": 1,
                "properties": {
                  "deleted": {
                    "description": "Flag determining whether the policy is deleted or not.\n",
                    "type": "boolean"
                  },
                  "description": {
                    "description": "Description of the policy.\n",
                    "type": "string"
                  },
                  "groupId": {
                    "description": "Identifies the group the policy is placed in.\n",
                    "type": "integer"
                  },
                  "name": {
                    "description": "Name of the policy.\n",
                    "type": "string"
                  }
                },
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/put-policy-request.yaml"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "location": "/cloudlets/api/v2/policies/1002",
                  "serviceVersion": null,
                  "apiVersion": "2.0",
                  "policyId": 1002,
                  "cloudletId": 99,
                  "cloudletCode": "CC",
                  "groupId": 54321,
                  "name": "UpdatePolicyName",
                  "description": "Testing the update of a policy",
                  "deleted": false,
                  "propertyName": null,
                  "createdBy": "szhang",
                  "createDate": 1428957070000,
                  "lastModifiedBy": "jsmith",
                  "lastModifiedDate": 1431549070000,
                  "activations": []
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Returns details of a policy.\n",
                  "properties": {
                    "activations": {
                      "description": "List of activations associated with the policy.\n",
                      "items": {
                        "additionalProperties": false,
                        "description": "Returns details of a policy activation.\n",
                        "properties": {
                          "apiVersion": {
                            "description": "The specific version of this API.\n",
                            "type": "string"
                          },
                          "network": {
                            "description": "The network, either `STAGING`, `PRODUCTION`, or `prod` as shorthand, on which a load balancing configuration for Application Load Balancer has been activated. Values are case-insensitive in requests.\n",
                            "enum": [
                              "prod",
                              "staging"
                            ],
                            "type": "string"
                          },
                          "policyInfo": {
                            "additionalProperties": false,
                            "description": "Returns details of a policy associated with policy activation.\n",
                            "properties": {
                              "activatedBy": {
                                "description": "User name who issued the activation.\n",
                                "type": "string"
                              },
                              "activationDate": {
                                "description": "Date of the activation in milliseconds.\n",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name of the policy.\n",
                                "type": "string"
                              },
                              "policyId": {
                                "description": "ID of the policy.\n",
                                "type": "integer"
                              },
                              "status": {
                                "description": "Value representing activation status.\n",
                                "enum": [
                                  "INACTIVE",
                                  "PENDING",
                                  "ACTIVE",
                                  "FAILED",
                                  "DEACTIVATED"
                                ],
                                "type": "string",
                                "x-akamai": {
                                  "file-path": "schemas/activation-status-enum.yaml"
                                }
                              },
                              "statusDetail": {
                                "description": "Details of the activation status.\n",
                                "type": "string"
                              },
                              "version": {
                                "description": "Version of the policy.\n",
                                "type": "integer"
                              }
                            },
                            "required": [
                              "policyId",
                              "name",
                              "version",
                              "status",
                              "statusDetail",
                              "activatedBy",
                              "activationDate"
                            ],
                            "type": "object",
                            "x-akamai": {
                              "file-path": "schemas/policy-activation-policy-info.yaml"
                            }
                          },
                          "propertyInfo": {
                            "additionalProperties": false,
                            "description": "Returns details of a property associated with policy activation.\n",
                            "properties": {
                              "activatedBy": {
                                "description": "User name who issued the activation.\n",
                                "type": "string"
                              },
                              "activationDate": {
                                "description": "Date of the activation in milliseconds.\n",
                                "type": "integer"
                              },
                              "groupId": {
                                "description": "Identifies the group where the property is placed.\n",
                                "type": "integer"
                              },
                              "id": {
                                "description": "ID of the property.\n",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name of the property.\n",
                                "type": "string"
                              },
                              "status": {
                                "description": "Value representing activation status.\n",
                                "enum": [
                                  "INACTIVE",
                                  "PENDING",
                                  "ACTIVE",
                                  "FAILED",
                                  "DEACTIVATED"
                                ],
                                "type": "string",
                                "x-akamai": {
                                  "file-path": "schemas/activation-status-enum.yaml"
                                }
                              },
                              "version": {
                                "description": "Version of the property.\n",
                                "type": "integer"
                              }
                            },
                            "required": [
                              "name",
                              "version",
                              "groupId",
                              "status",
                              "activatedBy",
                              "activationDate",
                              "id"
                            ],
                            "type": "object",
                            "x-akamai": {
                              "file-path": "schemas/policy-activation-property-info.yaml"
                            }
                          },
                          "serviceVersion": {
                            "description": "__Deprecated__ __Deprecated__ The build of the software running on the server. The value can be `null`.\n",
                            "nullable": true,
                            "type": "string",
                            "x-akamai": {
                              "status": "DEPRECATED"
                            }
                          }
                        },
                        "required": [
                          "network",
                          "policyInfo",
                          "propertyInfo"
                        ],
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/policy-activation.yaml"
                        }
                      },
                      "type": "array"
                    },
                    "apiVersion": {
                      "description": "The specific version of this API.\n",
                      "type": "string"
                    },
                    "cloudletCode": {
                      "description": "The type of Cloudlet that this policy is for. To see the available Cloudlets, run the [List Cloudlets](ref:get-cloudlets) operation. Possible values include: `ALB` for Application Load Balancer, `AP` for API Prioritization, `AS` for Audience Segmentation, `CD` for Phased Release, `ER` for Edge Redirector, `FR` for Forward Rewrite, `IG` for Request Control, and `VP` for Visitor Prioritization.\n",
                      "enum": [
                        "ALB",
                        "AP",
                        "AS",
                        "CD",
                        "ER",
                        "FR",
                        "IG",
                        "VP"
                      ],
                      "type": "string",
                      "x-akamai": {
                        "file-path": "schemas/cloudlet-code-enum.yaml"
                      }
                    },
                    "cloudletId": {
                      "description": "The ID of cloudlet that this policy is for. The `cloudletId` for Edge Redirector is `0`, Visitor Prioritization is `1`, Forward Rewrite is `3`, Request Control is `4`, API Prioritization is `5`, Audience Segmentation is `6`, Phased Release is `7`, and Application Load Balancer is `9`. To see the available Cloudlets, run the [List Cloudlets](ref:get-cloudlets) operation.\n",
                      "enum": [
                        0,
                        1,
                        3,
                        4,
                        5,
                        6,
                        7,
                        9
                      ],
                      "type": "integer"
                    },
                    "createDate": {
                      "description": "Date of the policy creation in milliseconds.\n",
                      "type": "integer"
                    },
                    "createdBy": {
                      "description": "User name who created the policy.\n",
                      "type": "string"
                    },
                    "deleted": {
                      "description": "Flag determining whether the policy is deleted or not.\n",
                      "type": "boolean"
                    },
                    "description": {
                      "description": "The description of the policy.\n",
                      "type": "string"
                    },
                    "groupId": {
                      "description": "The ID of the group this policy is associated with.\n",
                      "type": "integer"
                    },
                    "lastModifiedBy": {
                      "description": "User name who recently modified the policy.\n",
                      "type": "string"
                    },
                    "lastModifiedDate": {
                      "description": "Date of the recent policy modification in milliseconds.\n",
                      "type": "integer"
                    },
                    "location": {
                      "description": "The navigable endpoint used for the object referred to in the operation.\n",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the policy.\n",
                      "type": "string"
                    },
                    "policyId": {
                      "description": "ID of the policy.\n",
                      "type": "integer"
                    },
                    "propertyName": {
                      "deprecated": true,
                      "description": "This field now only returns `null`. It does not reflect the properties currently associated with this Cloudlets policy.\n",
                      "nullable": true,
                      "type": "string"
                    },
                    "serviceVersion": {
                      "description": "__Deprecated__ __Deprecated__ The build of the software running on the server. The value can be `null`.\n",
                      "nullable": true,
                      "type": "string",
                      "x-akamai": {
                        "status": "DEPRECATED"
                      }
                    }
                  },
                  "required": [
                    "policyId",
                    "cloudletId",
                    "cloudletCode",
                    "groupId",
                    "name",
                    "description",
                    "createdBy",
                    "createdDate",
                    "lastModifiedBy",
                    "lastModifiedDate",
                    "activations",
                    "location"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/policy.yaml"
                  }
                }
              }
            },
            "description": "The response reflects the updated policy.\n"
          }
        },
        "summary": "Update a policy",
        "tags": [
          "Policies"
        ]
      }
    }
  },
  "components": {
    "parameters": {
      "includeDeleted-query": {
        "description": "For GET operations, includes deleted policies in the results.\n",
        "in": "query",
        "name": "includeDeleted",
        "schema": {
          "example": true,
          "type": "boolean"
        },
        "x-akamai": {
          "file-path": "parameters/includeDeleted-query.yaml"
        }
      },
      "cloudletId-query": {
        "description": "For GET operations, returns only policies for this particular `cloudletId`. The `cloudletId` for Edge Redirector is `0`, Visitor Prioritization is `1`, Forward Rewrite is `3`, Request Control is `4`, API Prioritization is `5`, Audience Segmentation is `6`, Phased Release is `7`, and Application Load Balancer is `9`.\n",
        "in": "query",
        "name": "cloudletId",
        "schema": {
          "enum": [
            0,
            1,
            3,
            4,
            5,
            6,
            7,
            9
          ],
          "example": 0,
          "type": "integer"
        },
        "x-akamai": {
          "file-path": "parameters/cloudletId-query.yaml"
        }
      },
      "clonePolicyId-query": {
        "description": "If cloning an existing policy, this parameter is the ID of the policy (`policyId`) you want to clone. If there are attributes that you do _not_ want propagated from the source policy, you must provide the new values in the request.\n",
        "in": "query",
        "name": "clonePolicyId",
        "schema": {
          "example": 1001,
          "type": "integer"
        },
        "x-akamai": {
          "file-path": "parameters/clonePolicyId-query.yaml"
        }
      },
      "version-query": {
        "description": "For POST operations, indicates the version of the existing policy to use for the new policy.  If not specified, the latest version of the existing policy is copied.\n",
        "in": "query",
        "name": "version",
        "schema": {
          "example": 2,
          "type": "integer"
        },
        "x-akamai": {
          "file-path": "parameters/version-query.yaml"
        }
      },
      "policyId-path": {
        "description": "The ID of the policy.\n",
        "in": "path",
        "name": "policyId",
        "required": true,
        "schema": {
          "example": 1001,
          "type": "integer"
        },
        "x-akamai": {
          "file-path": "parameters/policyId-path.yaml"
        }
      }
    },
    "schemas": {
      "activation-status-enum": {
        "description": "Value representing activation status.\n",
        "enum": [
          "INACTIVE",
          "PENDING",
          "ACTIVE",
          "FAILED",
          "DEACTIVATED"
        ],
        "type": "string",
        "x-akamai": {
          "file-path": "schemas/activation-status-enum.yaml"
        }
      },
      "policy-activation-policy-info": {
        "additionalProperties": false,
        "description": "Returns details of a policy associated with policy activation.\n",
        "properties": {
          "activatedBy": {
            "description": "User name who issued the activation.\n",
            "type": "string"
          },
          "activationDate": {
            "description": "Date of the activation in milliseconds.\n",
            "type": "integer"
          },
          "name": {
            "description": "Name of the policy.\n",
            "type": "string"
          },
          "policyId": {
            "description": "ID of the policy.\n",
            "type": "integer"
          },
          "status": {
            "description": "Value representing activation status.\n",
            "enum": [
              "INACTIVE",
              "PENDING",
              "ACTIVE",
              "FAILED",
              "DEACTIVATED"
            ],
            "type": "string",
            "x-akamai": {
              "file-path": "schemas/activation-status-enum.yaml"
            }
          },
          "statusDetail": {
            "description": "Details of the activation status.\n",
            "type": "string"
          },
          "version": {
            "description": "Version of the policy.\n",
            "type": "integer"
          }
        },
        "required": [
          "policyId",
          "name",
          "version",
          "status",
          "statusDetail",
          "activatedBy",
          "activationDate"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/policy-activation-policy-info.yaml"
        }
      },
      "policy-activation-property-info": {
        "additionalProperties": false,
        "description": "Returns details of a property associated with policy activation.\n",
        "properties": {
          "activatedBy": {
            "description": "User name who issued the activation.\n",
            "type": "string"
          },
          "activationDate": {
            "description": "Date of the activation in milliseconds.\n",
            "type": "integer"
          },
          "groupId": {
            "description": "Identifies the group where the property is placed.\n",
            "type": "integer"
          },
          "id": {
            "description": "ID of the property.\n",
            "type": "integer"
          },
          "name": {
            "description": "Name of the property.\n",
            "type": "string"
          },
          "status": {
            "description": "Value representing activation status.\n",
            "enum": [
              "INACTIVE",
              "PENDING",
              "ACTIVE",
              "FAILED",
              "DEACTIVATED"
            ],
            "type": "string",
            "x-akamai": {
              "file-path": "schemas/activation-status-enum.yaml"
            }
          },
          "version": {
            "description": "Version of the property.\n",
            "type": "integer"
          }
        },
        "required": [
          "name",
          "version",
          "groupId",
          "status",
          "activatedBy",
          "activationDate",
          "id"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/policy-activation-property-info.yaml"
        }
      },
      "policy-activation": {
        "additionalProperties": false,
        "description": "Returns details of a policy activation.\n",
        "properties": {
          "apiVersion": {
            "description": "The specific version of this API.\n",
            "type": "string"
          },
          "network": {
            "description": "The network, either `STAGING`, `PRODUCTION`, or `prod` as shorthand, on which a load balancing configuration for Application Load Balancer has been activated. Values are case-insensitive in requests.\n",
            "enum": [
              "prod",
              "staging"
            ],
            "type": "string"
          },
          "policyInfo": {
            "additionalProperties": false,
            "description": "Returns details of a policy associated with policy activation.\n",
            "properties": {
              "activatedBy": {
                "description": "User name who issued the activation.\n",
                "type": "string"
              },
              "activationDate": {
                "description": "Date of the activation in milliseconds.\n",
                "type": "integer"
              },
              "name": {
                "description": "Name of the policy.\n",
                "type": "string"
              },
              "policyId": {
                "description": "ID of the policy.\n",
                "type": "integer"
              },
              "status": {
                "description": "Value representing activation status.\n",
                "enum": [
                  "INACTIVE",
                  "PENDING",
                  "ACTIVE",
                  "FAILED",
                  "DEACTIVATED"
                ],
                "type": "string",
                "x-akamai": {
                  "file-path": "schemas/activation-status-enum.yaml"
                }
              },
              "statusDetail": {
                "description": "Details of the activation status.\n",
                "type": "string"
              },
              "version": {
                "description": "Version of the policy.\n",
                "type": "integer"
              }
            },
            "required": [
              "policyId",
              "name",
              "version",
              "status",
              "statusDetail",
              "activatedBy",
              "activationDate"
            ],
            "type": "object",
            "x-akamai": {
              "file-path": "schemas/policy-activation-policy-info.yaml"
            }
          },
          "propertyInfo": {
            "additionalProperties": false,
            "description": "Returns details of a property associated with policy activation.\n",
            "properties": {
              "activatedBy": {
                "description": "User name who issued the activation.\n",
                "type": "string"
              },
              "activationDate": {
                "description": "Date of the activation in milliseconds.\n",
                "type": "integer"
              },
              "groupId": {
                "description": "Identifies the group where the property is placed.\n",
                "type": "integer"
              },
              "id": {
                "description": "ID of the property.\n",
                "type": "integer"
              },
              "name": {
                "description": "Name of the property.\n",
                "type": "string"
              },
              "status": {
                "description": "Value representing activation status.\n",
                "enum": [
                  "INACTIVE",
                  "PENDING",
                  "ACTIVE",
                  "FAILED",
                  "DEACTIVATED"
                ],
                "type": "string",
                "x-akamai": {
                  "file-path": "schemas/activation-status-enum.yaml"
                }
              },
              "version": {
                "description": "Version of the property.\n",
                "type": "integer"
              }
            },
            "required": [
              "name",
              "version",
              "groupId",
              "status",
              "activatedBy",
              "activationDate",
              "id"
            ],
            "type": "object",
            "x-akamai": {
              "file-path": "schemas/policy-activation-property-info.yaml"
            }
          },
          "serviceVersion": {
            "description": "__Deprecated__ __Deprecated__ The build of the software running on the server. The value can be `null`.\n",
            "nullable": true,
            "type": "string",
            "x-akamai": {
              "status": "DEPRECATED"
            }
          }
        },
        "required": [
          "network",
          "policyInfo",
          "propertyInfo"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/policy-activation.yaml"
        }
      },
      "cloudlet-code-enum": {
        "description": "The type of Cloudlet that this policy is for. To see the available Cloudlets, run the [List Cloudlets](ref:get-cloudlets) operation. Possible values include: `ALB` for Application Load Balancer, `AP` for API Prioritization, `AS` for Audience Segmentation, `CD` for Phased Release, `ER` for Edge Redirector, `FR` for Forward Rewrite, `IG` for Request Control, and `VP` for Visitor Prioritization.\n",
        "enum": [
          "ALB",
          "AP",
          "AS",
          "CD",
          "ER",
          "FR",
          "IG",
          "VP"
        ],
        "type": "string",
        "x-akamai": {
          "file-path": "schemas/cloudlet-code-enum.yaml"
        }
      },
      "policy": {
        "additionalProperties": false,
        "description": "Returns details of a policy.\n",
        "properties": {
          "activations": {
            "description": "List of activations associated with the policy.\n",
            "items": {
              "additionalProperties": false,
              "description": "Returns details of a policy activation.\n",
              "properties": {
                "apiVersion": {
                  "description": "The specific version of this API.\n",
                  "type": "string"
                },
                "network": {
                  "description": "The network, either `STAGING`, `PRODUCTION`, or `prod` as shorthand, on which a load balancing configuration for Application Load Balancer has been activated. Values are case-insensitive in requests.\n",
                  "enum": [
                    "prod",
                    "staging"
                  ],
                  "type": "string"
                },
                "policyInfo": {
                  "additionalProperties": false,
                  "description": "Returns details of a policy associated with policy activation.\n",
                  "properties": {
                    "activatedBy": {
                      "description": "User name who issued the activation.\n",
                      "type": "string"
                    },
                    "activationDate": {
                      "description": "Date of the activation in milliseconds.\n",
                      "type": "integer"
                    },
                    "name": {
                      "description": "Name of the policy.\n",
                      "type": "string"
                    },
                    "policyId": {
                      "description": "ID of the policy.\n",
                      "type": "integer"
                    },
                    "status": {
                      "description": "Value representing activation status.\n",
                      "enum": [
                        "INACTIVE",
                        "PENDING",
                        "ACTIVE",
                        "FAILED",
                        "DEACTIVATED"
                      ],
                      "type": "string",
                      "x-akamai": {
                        "file-path": "schemas/activation-status-enum.yaml"
                      }
                    },
                    "statusDetail": {
                      "description": "Details of the activation status.\n",
                      "type": "string"
                    },
                    "version": {
                      "description": "Version of the policy.\n",
                      "type": "integer"
                    }
                  },
                  "required": [
                    "policyId",
                    "name",
                    "version",
                    "status",
                    "statusDetail",
                    "activatedBy",
                    "activationDate"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/policy-activation-policy-info.yaml"
                  }
                },
                "propertyInfo": {
                  "additionalProperties": false,
                  "description": "Returns details of a property associated with policy activation.\n",
                  "properties": {
                    "activatedBy": {
                      "description": "User name who issued the activation.\n",
                      "type": "string"
                    },
                    "activationDate": {
                      "description": "Date of the activation in milliseconds.\n",
                      "type": "integer"
                    },
                    "groupId": {
                      "description": "Identifies the group where the property is placed.\n",
                      "type": "integer"
                    },
                    "id": {
                      "description": "ID of the property.\n",
                      "type": "integer"
                    },
                    "name": {
                      "description": "Name of the property.\n",
                      "type": "string"
                    },
                    "status": {
                      "description": "Value representing activation status.\n",
                      "enum": [
                        "INACTIVE",
                        "PENDING",
                        "ACTIVE",
                        "FAILED",
                        "DEACTIVATED"
                      ],
                      "type": "string",
                      "x-akamai": {
                        "file-path": "schemas/activation-status-enum.yaml"
                      }
                    },
                    "version": {
                      "description": "Version of the property.\n",
                      "type": "integer"
                    }
                  },
                  "required": [
                    "name",
                    "version",
                    "groupId",
                    "status",
                    "activatedBy",
                    "activationDate",
                    "id"
                  ],
                  "type": "object",
                  "x-akamai": {
                    "file-path": "schemas/policy-activation-property-info.yaml"
                  }
                },
                "serviceVersion": {
                  "description": "__Deprecated__ __Deprecated__ The build of the software running on the server. The value can be `null`.\n",
                  "nullable": true,
                  "type": "string",
                  "x-akamai": {
                    "status": "DEPRECATED"
                  }
                }
              },
              "required": [
                "network",
                "policyInfo",
                "propertyInfo"
              ],
              "type": "object",
              "x-akamai": {
                "file-path": "schemas/policy-activation.yaml"
              }
            },
            "type": "array"
          },
          "apiVersion": {
            "description": "The specific version of this API.\n",
            "type": "string"
          },
          "cloudletCode": {
            "description": "The type of Cloudlet that this policy is for. To see the available Cloudlets, run the [List Cloudlets](ref:get-cloudlets) operation. Possible values include: `ALB` for Application Load Balancer, `AP` for API Prioritization, `AS` for Audience Segmentation, `CD` for Phased Release, `ER` for Edge Redirector, `FR` for Forward Rewrite, `IG` for Request Control, and `VP` for Visitor Prioritization.\n",
            "enum": [
              "ALB",
              "AP",
              "AS",
              "CD",
              "ER",
              "FR",
              "IG",
              "VP"
            ],
            "type": "string",
            "x-akamai": {
              "file-path": "schemas/cloudlet-code-enum.yaml"
            }
          },
          "cloudletId": {
            "description": "The ID of cloudlet that this policy is for. The `cloudletId` for Edge Redirector is `0`, Visitor Prioritization is `1`, Forward Rewrite is `3`, Request Control is `4`, API Prioritization is `5`, Audience Segmentation is `6`, Phased Release is `7`, and Application Load Balancer is `9`. To see the available Cloudlets, run the [List Cloudlets](ref:get-cloudlets) operation.\n",
            "enum": [
              0,
              1,
              3,
              4,
              5,
              6,
              7,
              9
            ],
            "type": "integer"
          },
          "createDate": {
            "description": "Date of the policy creation in milliseconds.\n",
            "type": "integer"
          },
          "createdBy": {
            "description": "User name who created the policy.\n",
            "type": "string"
          },
          "deleted": {
            "description": "Flag determining whether the policy is deleted or not.\n",
            "type": "boolean"
          },
          "description": {
            "description": "The description of the policy.\n",
            "type": "string"
          },
          "groupId": {
            "description": "The ID of the group this policy is associated with.\n",
            "type": "integer"
          },
          "lastModifiedBy": {
            "description": "User name who recently modified the policy.\n",
            "type": "string"
          },
          "lastModifiedDate": {
            "description": "Date of the recent policy modification in milliseconds.\n",
            "type": "integer"
          },
          "location": {
            "description": "The navigable endpoint used for the object referred to in the operation.\n",
            "type": "string"
          },
          "name": {
            "description": "Name of the policy.\n",
            "type": "string"
          },
          "policyId": {
            "description": "ID of the policy.\n",
            "type": "integer"
          },
          "propertyName": {
            "deprecated": true,
            "description": "This field now only returns `null`. It does not reflect the properties currently associated with this Cloudlets policy.\n",
            "nullable": true,
            "type": "string"
          },
          "serviceVersion": {
            "description": "__Deprecated__ __Deprecated__ The build of the software running on the server. The value can be `null`.\n",
            "nullable": true,
            "type": "string",
            "x-akamai": {
              "status": "DEPRECATED"
            }
          }
        },
        "required": [
          "policyId",
          "cloudletId",
          "cloudletCode",
          "groupId",
          "name",
          "description",
          "createdBy",
          "createdDate",
          "lastModifiedBy",
          "lastModifiedDate",
          "activations",
          "location"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/policy.yaml"
        }
      },
      "get-policies-response": {
        "description": "Policy details and information on each policy's properties.\n",
        "items": {
          "additionalProperties": false,
          "description": "Returns details of a policy.\n",
          "properties": {
            "activations": {
              "description": "List of activations associated with the policy.\n",
              "items": {
                "additionalProperties": false,
                "description": "Returns details of a policy activation.\n",
                "properties": {
                  "apiVersion": {
                    "description": "The specific version of this API.\n",
                    "type": "string"
                  },
                  "network": {
                    "description": "The network, either `STAGING`, `PRODUCTION`, or `prod` as shorthand, on which a load balancing configuration for Application Load Balancer has been activated. Values are case-insensitive in requests.\n",
                    "enum": [
                      "prod",
                      "staging"
                    ],
                    "type": "string"
                  },
                  "policyInfo": {
                    "additionalProperties": false,
                    "description": "Returns details of a policy associated with policy activation.\n",
                    "properties": {
                      "activatedBy": {
                        "description": "User name who issued the activation.\n",
                        "type": "string"
                      },
                      "activationDate": {
                        "description": "Date of the activation in milliseconds.\n",
                        "type": "integer"
                      },
                      "name": {
                        "description": "Name of the policy.\n",
                        "type": "string"
                      },
                      "policyId": {
                        "description": "ID of the policy.\n",
                        "type": "integer"
                      },
                      "status": {
                        "description": "Value representing activation status.\n",
                        "enum": [
                          "INACTIVE",
                          "PENDING",
                          "ACTIVE",
                          "FAILED",
                          "DEACTIVATED"
                        ],
                        "type": "string",
                        "x-akamai": {
                          "file-path": "schemas/activation-status-enum.yaml"
                        }
                      },
                      "statusDetail": {
                        "description": "Details of the activation status.\n",
                        "type": "string"
                      },
                      "version": {
                        "description": "Version of the policy.\n",
                        "type": "integer"
                      }
                    },
                    "required": [
                      "policyId",
                      "name",
                      "version",
                      "status",
                      "statusDetail",
                      "activatedBy",
                      "activationDate"
                    ],
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/policy-activation-policy-info.yaml"
                    }
                  },
                  "propertyInfo": {
                    "additionalProperties": false,
                    "description": "Returns details of a property associated with policy activation.\n",
                    "properties": {
                      "activatedBy": {
                        "description": "User name who issued the activation.\n",
                        "type": "string"
                      },
                      "activationDate": {
                        "description": "Date of the activation in milliseconds.\n",
                        "type": "integer"
                      },
                      "groupId": {
                        "description": "Identifies the group where the property is placed.\n",
                        "type": "integer"
                      },
                      "id": {
                        "description": "ID of the property.\n",
                        "type": "integer"
                      },
                      "name": {
                        "description": "Name of the property.\n",
                        "type": "string"
                      },
                      "status": {
                        "description": "Value representing activation status.\n",
                        "enum": [
                          "INACTIVE",
                          "PENDING",
                          "ACTIVE",
                          "FAILED",
                          "DEACTIVATED"
                        ],
                        "type": "string",
                        "x-akamai": {
                          "file-path": "schemas/activation-status-enum.yaml"
                        }
                      },
                      "version": {
                        "description": "Version of the property.\n",
                        "type": "integer"
                      }
                    },
                    "required": [
                      "name",
                      "version",
                      "groupId",
                      "status",
                      "activatedBy",
                      "activationDate",
                      "id"
                    ],
                    "type": "object",
                    "x-akamai": {
                      "file-path": "schemas/policy-activation-property-info.yaml"
                    }
                  },
                  "serviceVersion": {
                    "description": "__Deprecated__ __Deprecated__ The build of the software running on the server. The value can be `null`.\n",
                    "nullable": true,
                    "type": "string",
                    "x-akamai": {
                      "status": "DEPRECATED"
                    }
                  }
                },
                "required": [
                  "network",
                  "policyInfo",
                  "propertyInfo"
                ],
                "type": "object",
                "x-akamai": {
                  "file-path": "schemas/policy-activation.yaml"
                }
              },
              "type": "array"
            },
            "apiVersion": {
              "description": "The specific version of this API.\n",
              "type": "string"
            },
            "cloudletCode": {
              "description": "The type of Cloudlet that this policy is for. To see the available Cloudlets, run the [List Cloudlets](ref:get-cloudlets) operation. Possible values include: `ALB` for Application Load Balancer, `AP` for API Prioritization, `AS` for Audience Segmentation, `CD` for Phased Release, `ER` for Edge Redirector, `FR` for Forward Rewrite, `IG` for Request Control, and `VP` for Visitor Prioritization.\n",
              "enum": [
                "ALB",
                "AP",
                "AS",
                "CD",
                "ER",
                "FR",
                "IG",
                "VP"
              ],
              "type": "string",
              "x-akamai": {
                "file-path": "schemas/cloudlet-code-enum.yaml"
              }
            },
            "cloudletId": {
              "description": "The ID of cloudlet that this policy is for. The `cloudletId` for Edge Redirector is `0`, Visitor Prioritization is `1`, Forward Rewrite is `3`, Request Control is `4`, API Prioritization is `5`, Audience Segmentation is `6`, Phased Release is `7`, and Application Load Balancer is `9`. To see the available Cloudlets, run the [List Cloudlets](ref:get-cloudlets) operation.\n",
              "enum": [
                0,
                1,
                3,
                4,
                5,
                6,
                7,
                9
              ],
              "type": "integer"
            },
            "createDate": {
              "description": "Date of the policy creation in milliseconds.\n",
              "type": "integer"
            },
            "createdBy": {
              "description": "User name who created the policy.\n",
              "type": "string"
            },
            "deleted": {
              "description": "Flag determining whether the policy is deleted or not.\n",
              "type": "boolean"
            },
            "description": {
              "description": "The description of the policy.\n",
              "type": "string"
            },
            "groupId": {
              "description": "The ID of the group this policy is associated with.\n",
              "type": "integer"
            },
            "lastModifiedBy": {
              "description": "User name who recently modified the policy.\n",
              "type": "string"
            },
            "lastModifiedDate": {
              "description": "Date of the recent policy modification in milliseconds.\n",
              "type": "integer"
            },
            "location": {
              "description": "The navigable endpoint used for the object referred to in the operation.\n",
              "type": "string"
            },
            "name": {
              "description": "Name of the policy.\n",
              "type": "string"
            },
            "policyId": {
              "description": "ID of the policy.\n",
              "type": "integer"
            },
            "propertyName": {
              "deprecated": true,
              "description": "This field now only returns `null`. It does not reflect the properties currently associated with this Cloudlets policy.\n",
              "nullable": true,
              "type": "string"
            },
            "serviceVersion": {
              "description": "__Deprecated__ __Deprecated__ The build of the software running on the server. The value can be `null`.\n",
              "nullable": true,
              "type": "string",
              "x-akamai": {
                "status": "DEPRECATED"
              }
            }
          },
          "required": [
            "policyId",
            "cloudletId",
            "cloudletCode",
            "groupId",
            "name",
            "description",
            "createdBy",
            "createdDate",
            "lastModifiedBy",
            "lastModifiedDate",
            "activations",
            "location"
          ],
          "type": "object",
          "x-akamai": {
            "file-path": "schemas/policy.yaml"
          }
        },
        "type": "array",
        "x-akamai": {
          "file-path": "schemas/get-policies-response.yaml"
        }
      },
      "post-policies-request": {
        "additionalProperties": false,
        "description": "TBD.\n",
        "properties": {
          "cloudletId": {
            "description": "The ID of cloudlet that this policy is for. The `cloudletId` for Edge Redirector is `0`, Visitor Prioritization is `1`, Forward Rewrite is `3`, Request Control is `4`, API Prioritization is `5`, Audience Segmentation is `6`, Phased Release is `7`, and Application Load Balancer is `9`. To see the available Cloudlets, run the [List Cloudlets](ref:get-cloudlets) operation.\n",
            "enum": [
              0,
              1,
              3,
              4,
              5,
              6,
              7,
              9
            ],
            "type": "integer"
          },
          "description": {
            "description": "Description of the policy.\n",
            "type": "string"
          },
          "groupId": {
            "description": "The group to place the policy in.\n",
            "type": "integer"
          },
          "name": {
            "description": "Name of the policy.\n",
            "type": "string"
          }
        },
        "required": [
          "cloudletId",
          "name"
        ],
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/post-policies-request.yaml"
        }
      },
      "put-policy-request": {
        "additionalProperties": false,
        "description": "TBD.\n",
        "minProperties": 1,
        "properties": {
          "deleted": {
            "description": "Flag determining whether the policy is deleted or not.\n",
            "type": "boolean"
          },
          "description": {
            "description": "Description of the policy.\n",
            "type": "string"
          },
          "groupId": {
            "description": "Identifies the group the policy is placed in.\n",
            "type": "integer"
          },
          "name": {
            "description": "Name of the policy.\n",
            "type": "string"
          }
        },
        "type": "object",
        "x-akamai": {
          "file-path": "schemas/put-policy-request.yaml"
        }
      }
    }
  },
  "x-akamai": {
    "auth-type": "EDGE_GRID",
    "file-path": "policies.yaml"
  }
}